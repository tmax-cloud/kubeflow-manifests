apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  name: pytorchjobs.kubeflow.org
spec:
  additionalPrinterColumns:
  - JSONPath: .status.conditions[-1:].type
    name: State
    type: string
  - JSONPath: .metadata.creationTimestamp
    name: Age
    type: date
  group: kubeflow.org
  names:
    kind: PyTorchJob
    plural: pytorchjobs
    singular: pytorchjob
  scope: Namespaced
  subresources:
    status: {}
  validation:
    openAPIV3Schema:
      type: object
      properties:
        spec:
          description: PyTorchJobSpec is a desired state description of the PyTorchJob.
          type: object
          properties:
            activeDeadlineSeconds:
              description: Specifies the duration (in seconds) since startTime during which the job can remain active before it is terminated. Must be a positive integer. This setting applies only to pods where restartPolicy is OnFailure or Always.
              type: integer
              format: int64
            backoffLimit:
              description: Number of retries before marking this job as failed.
              type: integer
              format: int32            
            cleanPodPolicy:
              description: Defines the policy for cleaning up pods after the PyTorchJob completes. Defaults to None.
              type: string            
            ttlSecondsAfterFinished:
              description: Defines the TTL for cleaning up finished PyTorchJobs (temporary before Kubernetes adds the cleanup controller). It may take extra ReconcilePeriod seconds for the cleanup, since reconcile gets called periodically. Defaults to infinite.
              type: integer
              format: int32
            pytorchReplicaSpecs:
              description: 'A map of PyTorchReplicaType (type) to ReplicaSpec (value). Specifies the PyTorch cluster configuration. For example,\n  {\n    \"Master\": PyTorchReplicaSpec,\n    \"Worker\": PyTorchReplicaSpec,\n  }'
              type: object
              properties:
                Master:
                  type: object
                  additionalProperties:                  
                    description: ReplicaSpec is a description of the replica
                    type: object
                    properties:
                      replicas:
                        description: 'Replicas is the desired number of replicas of the given template. If unspecified, defaults to 1.'
                        maximum: 1
                        minimum: 1
                        type: integer                      
                      restartPolicy:
                        description: 'Restart policy for all replicas within the job. One of Always, OnFailure, Never and ExitCode. Default to Never.'
                        type: string
                      template:
                        description: Template is the object that describes the pod that will be created for this replica. RestartPolicy in PodTemplateSpec will be overide by RestartPolicy in ReplicaSpec
                        type: object
                        properties:
                          metadata:
                            description: 'Standard object''s metadata. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata'
                            type: object
                            properties:
                              annotations:
                                description: 'Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations'
                                type: object
                                additionalProperties:
                                  type: string
                              clusterName:
                                description: The name of the cluster which the object belongs to. This is used to distinguish resources with same name and namespace in different clusters. This field is not set anywhere right now and apiserver is going to ignore it if set in create or update request.
                                type: string
                              creationTimestamp:
                                description: |-
                                  CreationTimestamp is a timestamp representing the server time when this object was created. It is not guaranteed to be set in happens-before order across separate operations. Clients may not set this value. It is represented in RFC3339 form and is in UTC.
                        
                                  Populated by the system. Read-only. Null for lists. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
                                type: string
                                format: date-time
                              deletionGracePeriodSeconds:
                                description: Number of seconds allowed for this object to gracefully terminate before it will be removed from the system. Only set when deletionTimestamp is also set. May only be shortened. Read-only.
                                type: integer
                              deletionTimestamp:
                                description: |-
                                  DeletionTimestamp is RFC 3339 date and time at which this resource will be deleted. This field is set by the server when a graceful deletion is requested by the user, and is not directly settable by a client. The resource is expected to be deleted (no longer visible from resource lists, and not reachable by name) after the time in this field, once the finalizers list is empty. As long as the finalizers list contains items, deletion is blocked. Once the deletionTimestamp is set, this value may not be unset or be set further into the future, although it may be shortened or the resource may be deleted prior to this time. For example, a user may request that a pod is deleted in 30 seconds. The Kubelet will react by sending a graceful termination signal to the containers in the pod. After that 30 seconds, the Kubelet will send a hard termination signal (SIGKILL) to the container and after cleanup, remove the pod from the API. In the presence of network partitions, this object may still exist after this timestamp, until an administrator or automated process can determine the resource is fully terminated. If not set, graceful deletion of the object has not been requested.
                        
                                  Populated by the system when a graceful deletion is requested. Read-only. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
                                type: string
                                format: date-time
                              finalizers:
                                description: 'Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.'
                                type: array
                                items:
                                  type: string
                                x-kubernetes-patch-strategy: merge
                              generateName:
                                description: |-
                                  GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server.
                        
                                  If this field is specified and the generated name exists, the server will NOT return a 409 - instead, it will either return 201 Created or 500 with Reason ServerTimeout indicating a unique name could not be found in the time allotted, and the client should retry (optionally after the time indicated in the Retry-After header).
                        
                                  Applied only if Name is not specified. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency
                                type: string
                              generation:
                                description: A sequence number representing a specific generation of the desired state. Populated by the system. Read-only.
                                type: integer
                              labels:
                                description: 'Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels'
                                type: object
                                additionalProperties:
                                  type: string
                              managedFields:
                                description: 'ManagedFields maps workflow-id and version to the set of fields that are managed by that workflow. This is mostly for internal housekeeping, and users typically shouldn''t need to set or understand this field. A workflow can be the user''s name, a controller''s name, or the name of a specific apply path like "ci-cd". The set of fields is always in the version that the workflow used when modifying the object.'
                                type: array
                                items:
                                  description: 'ManagedFieldsEntry is a workflow-id, a FieldSet and the group version of the resource that the fieldset applies to.'
                                  type: object
                                  properties:
                                    apiVersion:
                                      description: APIVersion defines the version of this resource that this field set applies to. The format is "group/version" just like the top-level APIVersion field. It is necessary to track the version of a field set because it cannot be automatically converted.
                                      type: string
                                    fieldsType:
                                      description: 'FieldsType is the discriminator for the different fields format and version. There is currently only one possible value: "FieldsV1"'
                                      type: string
                                    fieldsV1:
                                      description: FieldsV1 holds the first JSON version format as described in the "FieldsV1" type.
                                      type: object
                                    manager:
                                      description: Manager is an identifier of the workflow managing these fields.
                                      type: string
                                    operation:
                                      description: Operation is the type of operation which lead to this ManagedFieldsEntry being created. The only valid values for this field are 'Apply' and 'Update'.
                                      type: string
                                    time:
                                      description: Time is timestamp of when these fields were set. It should always be empty if Operation is 'Apply'
                                      type: string
                                      format: date-time
                              name:
                                description: 'Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names'
                                type: string
                              namespace:
                                description: |-
                                  Namespace defines the space within each name must be unique. An empty namespace is equivalent to the "default" namespace, but "default" is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.
                        
                                  Must be a DNS_LABEL. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/namespaces
                                type: string
                              ownerReferences:
                                description: 'List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.'
                                type: array
                                items:
                                  description: 'OwnerReference contains enough information to let you identify an owning object. An owning object must be in the same namespace as the dependent, or be cluster-scoped, so there is no namespace field.'
                                  type: object
                                  required:
                                    - apiVersion
                                    - kind
                                    - name
                                    - uid
                                  properties:
                                    apiVersion:
                                      description: API version of the referent.
                                      type: string
                                    blockOwnerDeletion:
                                      description: 'If true, AND if the owner has the "foregroundDeletion" finalizer, then the owner cannot be deleted from the key-value store until this reference is removed. Defaults to false. To set this field, a user needs "delete" permission of the owner, otherwise 422 (Unprocessable Entity) will be returned.'
                                      type: boolean
                                    controller:
                                      description: 'If true, this reference points to the managing controller.'
                                      type: boolean
                                    kind:
                                      description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                                      type: string
                                    name:
                                      description: 'Name of the referent. More info: http://kubernetes.io/docs/user-guide/identifiers#names'
                                      type: string
                                    uid:
                                      description: 'UID of the referent. More info: http://kubernetes.io/docs/user-guide/identifiers#uids'
                                      type: string
                                x-kubernetes-patch-merge-key: uid
                                x-kubernetes-patch-strategy: merge
                              resourceVersion:
                                description: |-
                                  An opaque value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server. They may only be valid for a particular resource or set of resources.
                        
                                  Populated by the system. Read-only. Value must be treated as opaque by clients and . More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency
                                type: string
                              selfLink:
                                description: |-
                                  SelfLink is a URL representing this object. Populated by the system. Read-only.
                        
                                  DEPRECATED Kubernetes will stop propagating this field in 1.20 release and the field is planned to be removed in 1.21 release.
                                type: string
                              uid:
                                description: |-
                                  UID is the unique in time and space value for this object. It is typically generated by the server on successful creation of a resource and is not allowed to change on PUT operations.
                        
                                  Populated by the system. Read-only. More info: http://kubernetes.io/docs/user-guide/identifiers#uids
                                type: string
                          spec:
                            description: 'Specification of the desired behavior of the pod. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#spec-and-status'                      
                            type: object
                            required:
                              - containers
                            properties:
                              activeDeadlineSeconds:
                                description: Optional duration in seconds the pod may be active on the node relative to StartTime before the system will actively try to mark it failed and kill associated containers. Value must be a positive integer.
                                type: integer
                                format: int64
                              affinity:
                                description: Affinity is a group of affinity scheduling rules.
                                type: object
                                properties:
                                  nodeAffinity:
                                    description: Node affinity is a group of node affinity scheduling rules.
                                    type: object
                                    properties:
                                      preferredDuringSchedulingIgnoredDuringExecution:
                                        description: 'The scheduler will prefer to schedule pods to nodes that satisfy the affinity expressions specified by this field, but it may choose a node that violates one or more of the expressions. The node that is most preferred is the one with the greatest sum of weights, i.e. for each node that meets all of the scheduling requirements (resource request, requiredDuringScheduling affinity expressions, etc.), compute a sum by iterating through the elements of this field and adding "weight" to the sum if the node matches the corresponding matchExpressions; the node(s) with the highest sum are the most preferred.'
                                        type: array
                                        items:
                                          description: An empty preferred scheduling term matches all objects with implicit weight 0 (i.e. it's a no-op). A null preferred scheduling term matches no objects (i.e. is also a no-op).
                                          type: object
                                          required:
                                            - weight
                                            - preference
                                          properties:
                                            preference:
                                              description: A null or empty node selector term matches no objects. The requirements of them are ANDed. The TopologySelectorTerm type implements a subset of the NodeSelectorTerm.
                                              type: object
                                              properties:
                                                matchExpressions:
                                                  description: A list of node selector requirements by node's labels.
                                                  type: array
                                                  items:
                                                    description: 'A node selector requirement is a selector that contains values, a key, and an operator that relates the key and values.'
                                                    type: object
                                                    required:
                                                      - key
                                                      - operator
                                                    properties:
                                                      key:
                                                        description: The label key that the selector applies to.
                                                        type: string
                                                      operator:
                                                        description: 'Represents a key''s relationship to a set of values. Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.'
                                                        type: string
                                                      values:
                                                        description: 'An array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. If the operator is Gt or Lt, the values array must have a single element, which will be interpreted as an integer. This array is replaced during a strategic merge patch.'
                                                        type: array
                                                        items:
                                                          type: string
                                                matchFields:
                                                  description: A list of node selector requirements by node's fields.
                                                  type: array
                                                  items:
                                                    description: 'A node selector requirement is a selector that contains values, a key, and an operator that relates the key and values.'
                                                    type: object
                                                    required:
                                                      - key
                                                      - operator
                                                    properties:
                                                      key:
                                                        description: The label key that the selector applies to.
                                                        type: string
                                                      operator:
                                                        description: 'Represents a key''s relationship to a set of values. Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.'
                                                        type: string
                                                      values:
                                                        description: 'An array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. If the operator is Gt or Lt, the values array must have a single element, which will be interpreted as an integer. This array is replaced during a strategic merge patch.'
                                                        type: array
                                                        items:
                                                          type: string
                                            weight:
                                              description: 'Weight associated with matching the corresponding nodeSelectorTerm, in the range 1-100.'
                                              type: integer
                                      requiredDuringSchedulingIgnoredDuringExecution:
                                        description: 'A node selector represents the union of the results of one or more label queries over a set of nodes; that is, it represents the OR of the selectors represented by the node selector terms.'
                                        type: object
                                        required:
                                          - nodeSelectorTerms
                                        properties:
                                          nodeSelectorTerms:
                                            description: Required. A list of node selector terms. The terms are ORed.
                                            type: array
                                            items:
                                              description: A null or empty node selector term matches no objects. The requirements of them are ANDed. The TopologySelectorTerm type implements a subset of the NodeSelectorTerm.
                                              type: object
                                              properties:
                                                matchExpressions:
                                                  description: A list of node selector requirements by node's labels.
                                                  type: array
                                                  items:
                                                    description: 'A node selector requirement is a selector that contains values, a key, and an operator that relates the key and values.'
                                                    type: object
                                                    required:
                                                      - key
                                                      - operator
                                                    properties:
                                                      key:
                                                        description: The label key that the selector applies to.
                                                        type: string
                                                      operator:
                                                        description: 'Represents a key''s relationship to a set of values. Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.'
                                                        type: string
                                                      values:
                                                        description: 'An array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. If the operator is Gt or Lt, the values array must have a single element, which will be interpreted as an integer. This array is replaced during a strategic merge patch.'
                                                        type: array
                                                        items:
                                                          type: string
                                                matchFields:
                                                  description: A list of node selector requirements by node's fields.
                                                  type: array
                                                  items:
                                                    description: 'A node selector requirement is a selector that contains values, a key, and an operator that relates the key and values.'
                                                    type: object
                                                    required:
                                                      - key
                                                      - operator
                                                    properties:
                                                      key:
                                                        description: The label key that the selector applies to.
                                                        type: string
                                                      operator:
                                                        description: 'Represents a key''s relationship to a set of values. Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.'
                                                        type: string
                                                      values:
                                                        description: 'An array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. If the operator is Gt or Lt, the values array must have a single element, which will be interpreted as an integer. This array is replaced during a strategic merge patch.'
                                                        type: array
                                                        items:
                                                          type: string              
                                  podAffinity:
                                    description: Pod affinity is a group of inter pod affinity scheduling rules.
                                    type: object
                                    properties:
                                      preferredDuringSchedulingIgnoredDuringExecution:
                                        description: 'The scheduler will prefer to schedule pods to nodes that satisfy the affinity expressions specified by this field, but it may choose a node that violates one or more of the expressions. The node that is most preferred is the one with the greatest sum of weights, i.e. for each node that meets all of the scheduling requirements (resource request, requiredDuringScheduling affinity expressions, etc.), compute a sum by iterating through the elements of this field and adding "weight" to the sum if the node has pods which matches the corresponding podAffinityTerm; the node(s) with the highest sum are the most preferred.'
                                        type: array
                                        items:
                                          description: The weights of all of the matched WeightedPodAffinityTerm fields are added per-node to find the most preferred node(s)
                                          type: object
                                          required:
                                            - weight
                                            - podAffinityTerm
                                          properties:
                                            podAffinityTerm:
                                              description: 'Defines a set of pods (namely those matching the labelSelector relative to the given namespace(s)) that this pod should be co-located (affinity) or not co-located (anti-affinity) with, where co-located is defined as running on a node whose value of the label with key <topologyKey> matches that of any node on which a pod of the set of pods is running'
                                              type: object
                                              required:
                                                - topologyKey
                                              properties:
                                                labelSelector:
                                                  description: A label selector is a label query over a set of resources. The result of matchLabels and matchExpressions are ANDed. An empty label selector matches all objects. A null label selector matches no objects.
                                                  type: object
                                                  properties:
                                                    matchExpressions:
                                                      description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                                                      type: array
                                                      items:
                                                        description: 'A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.'
                                                        type: object
                                                        required:
                                                          - key
                                                          - operator
                                                        properties:
                                                          key:
                                                            description: key is the label key that the selector applies to.
                                                            type: string
                                                            x-kubernetes-patch-merge-key: key
                                                            x-kubernetes-patch-strategy: merge
                                                          operator:
                                                            description: 'operator represents a key''s relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.'
                                                            type: string
                                                          values:
                                                            description: 'values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.'
                                                            type: array
                                                            items:
                                                              type: string
                                                    matchLabels:
                                                      description: 'matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.'
                                                      type: object
                                                      additionalProperties:
                                                        type: string
                                                namespaces:
                                                  description: namespaces specifies which namespaces the labelSelector applies to (matches against); null or empty list means "this pod's namespace"
                                                  type: array
                                                  items:
                                                    type: string
                                                topologyKey:
                                                  description: 'This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching the labelSelector in the specified namespaces, where co-located is defined as running on a node whose value of the label with key topologyKey matches that of any node on which any of the selected pods is running. Empty topologyKey is not allowed.'
                                                  type: string
                                            weight:
                                              description: 'weight associated with matching the corresponding podAffinityTerm, in the range 1-100.'
                                              type: integer
                                      requiredDuringSchedulingIgnoredDuringExecution:
                                        description: 'If the affinity requirements specified by this field are not met at scheduling time, the pod will not be scheduled onto the node. If the affinity requirements specified by this field cease to be met at some point during pod execution (e.g. due to a pod label update), the system may or may not try to eventually evict the pod from its node. When there are multiple elements, the lists of nodes corresponding to each podAffinityTerm are intersected, i.e. all terms must be satisfied.'
                                        type: array
                                        items:
                                          description: 'Defines a set of pods (namely those matching the labelSelector relative to the given namespace(s)) that this pod should be co-located (affinity) or not co-located (anti-affinity) with, where co-located is defined as running on a node whose value of the label with key <topologyKey> matches that of any node on which a pod of the set of pods is running'
                                          type: object
                                          required:
                                            - topologyKey
                                          properties:
                                            labelSelector:
                                              description: A label selector is a label query over a set of resources. The result of matchLabels and matchExpressions are ANDed. An empty label selector matches all objects. A null label selector matches no objects.
                                              type: object
                                              properties:
                                                matchExpressions:
                                                  description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                                                  type: array
                                                  items:
                                                    description: 'A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.'
                                                    type: object
                                                    required:
                                                      - key
                                                      - operator
                                                    properties:
                                                      key:
                                                        description: key is the label key that the selector applies to.
                                                        type: string
                                                        x-kubernetes-patch-merge-key: key
                                                        x-kubernetes-patch-strategy: merge
                                                      operator:
                                                        description: 'operator represents a key''s relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.'
                                                        type: string
                                                      values:
                                                        description: 'values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.'
                                                        type: array
                                                        items:
                                                          type: string
                                                matchLabels:
                                                  description: 'matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.'
                                                  type: object
                                                  additionalProperties:
                                                    type: string
                                            namespaces:
                                              description: namespaces specifies which namespaces the labelSelector applies to (matches against); null or empty list means "this pod's namespace"
                                              type: array
                                              items:
                                                type: string
                                            topologyKey:
                                              description: 'This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching the labelSelector in the specified namespaces, where co-located is defined as running on a node whose value of the label with key topologyKey matches that of any node on which any of the selected pods is running. Empty topologyKey is not allowed.'
                                              type: string
                                  podAntiAffinity:
                                    description: Pod anti affinity is a group of inter pod anti affinity scheduling rules.
                                    type: object
                                    properties:
                                      preferredDuringSchedulingIgnoredDuringExecution:
                                        description: 'The scheduler will prefer to schedule pods to nodes that satisfy the anti-affinity expressions specified by this field, but it may choose a node that violates one or more of the expressions. The node that is most preferred is the one with the greatest sum of weights, i.e. for each node that meets all of the scheduling requirements (resource request, requiredDuringScheduling anti-affinity expressions, etc.), compute a sum by iterating through the elements of this field and adding "weight" to the sum if the node has pods which matches the corresponding podAffinityTerm; the node(s) with the highest sum are the most preferred.'
                                        type: array
                                        items:
                                          description: The weights of all of the matched WeightedPodAffinityTerm fields are added per-node to find the most preferred node(s)
                                          type: object
                                          required:
                                            - weight
                                            - podAffinityTerm
                                          properties:
                                            podAffinityTerm:
                                              description: 'Defines a set of pods (namely those matching the labelSelector relative to the given namespace(s)) that this pod should be co-located (affinity) or not co-located (anti-affinity) with, where co-located is defined as running on a node whose value of the label with key <topologyKey> matches that of any node on which a pod of the set of pods is running'
                                              type: object
                                              required:
                                                - topologyKey
                                              properties:
                                                labelSelector:
                                                  description: A label selector is a label query over a set of resources. The result of matchLabels and matchExpressions are ANDed. An empty label selector matches all objects. A null label selector matches no objects.
                                                  type: object
                                                  properties:
                                                    matchExpressions:
                                                      description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                                                      type: array
                                                      items:
                                                        description: 'A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.'
                                                        type: object
                                                        required:
                                                          - key
                                                          - operator
                                                        properties:
                                                          key:
                                                            description: key is the label key that the selector applies to.
                                                            type: string
                                                            x-kubernetes-patch-merge-key: key
                                                            x-kubernetes-patch-strategy: merge
                                                          operator:
                                                            description: 'operator represents a key''s relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.'
                                                            type: string
                                                          values:
                                                            description: 'values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.'
                                                            type: array
                                                            items:
                                                              type: string
                                                    matchLabels:
                                                      description: 'matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.'
                                                      type: object
                                                      additionalProperties:
                                                        type: string
                                                namespaces:
                                                  description: namespaces specifies which namespaces the labelSelector applies to (matches against); null or empty list means "this pod's namespace"
                                                  type: array
                                                  items:
                                                    type: string
                                                topologyKey:
                                                  description: 'This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching the labelSelector in the specified namespaces, where co-located is defined as running on a node whose value of the label with key topologyKey matches that of any node on which any of the selected pods is running. Empty topologyKey is not allowed.'
                                                  type: string
                                            weight:
                                              description: 'weight associated with matching the corresponding podAffinityTerm, in the range 1-100.'
                                              type: integer
                                      requiredDuringSchedulingIgnoredDuringExecution:
                                        description: 'If the anti-affinity requirements specified by this field are not met at scheduling time, the pod will not be scheduled onto the node. If the anti-affinity requirements specified by this field cease to be met at some point during pod execution (e.g. due to a pod label update), the system may or may not try to eventually evict the pod from its node. When there are multiple elements, the lists of nodes corresponding to each podAffinityTerm are intersected, i.e. all terms must be satisfied.'
                                        type: array
                                        items:
                                          description: 'Defines a set of pods (namely those matching the labelSelector relative to the given namespace(s)) that this pod should be co-located (affinity) or not co-located (anti-affinity) with, where co-located is defined as running on a node whose value of the label with key <topologyKey> matches that of any node on which a pod of the set of pods is running'
                                          type: object
                                          required:
                                            - topologyKey
                                          properties:
                                            labelSelector:
                                              description: A label selector is a label query over a set of resources. The result of matchLabels and matchExpressions are ANDed. An empty label selector matches all objects. A null label selector matches no objects.
                                              type: object
                                              properties:
                                                matchExpressions:
                                                  description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                                                  type: array
                                                  items:
                                                    description: 'A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.'
                                                    type: object
                                                    required:
                                                      - key
                                                      - operator
                                                    properties:
                                                      key:
                                                        description: key is the label key that the selector applies to.
                                                        type: string
                                                        x-kubernetes-patch-merge-key: key
                                                        x-kubernetes-patch-strategy: merge
                                                      operator:
                                                        description: 'operator represents a key''s relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.'
                                                        type: string
                                                      values:
                                                        description: 'values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.'
                                                        type: array
                                                        items:
                                                          type: string
                                                matchLabels:
                                                  description: 'matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.'
                                                  type: object
                                                  additionalProperties:
                                                    type: string
                                            namespaces:
                                              description: namespaces specifies which namespaces the labelSelector applies to (matches against); null or empty list means "this pod's namespace"
                                              type: array
                                              items:
                                                type: string
                                            topologyKey:
                                              description: 'This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching the labelSelector in the specified namespaces, where co-located is defined as running on a node whose value of the label with key topologyKey matches that of any node on which any of the selected pods is running. Empty topologyKey is not allowed.'
                                              type: string
                              automountServiceAccountToken:
                                description: AutomountServiceAccountToken indicates whether a service account token should be automatically mounted.
                                type: boolean
                              containers:
                                description: List of containers belonging to the pod. Containers cannot currently be added or removed. There must be at least one container in a Pod. Cannot be updated.
                                type: array
                                items:                                  
                                  description: A single application container that you want to run within a pod.
                                  type: object
                                  required:
                                    - name
                                    - image
                                  properties:
                                    args:
                                      description: 'Arguments to the entrypoint. The docker image''s CMD is used if this is not provided. Variable references $(VAR_NAME) are expanded using the container''s environment. If a variable cannot be resolved, the reference in the input string will be unchanged. The $(VAR_NAME) syntax can be escaped with a double $$, ie: $$(VAR_NAME). Escaped references will never be expanded, regardless of whether the variable exists or not. Cannot be updated. More info: https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell'
                                      type: array
                                      items:
                                        type: string
                                    command:
                                      description: 'Entrypoint array. Not executed within a shell. The docker image''s ENTRYPOINT is used if this is not provided. Variable references $(VAR_NAME) are expanded using the container''s environment. If a variable cannot be resolved, the reference in the input string will be unchanged. The $(VAR_NAME) syntax can be escaped with a double $$, ie: $$(VAR_NAME). Escaped references will never be expanded, regardless of whether the variable exists or not. Cannot be updated. More info: https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell'
                                      type: array
                                      items:
                                        type: string                              
                                    env:
                                      description: List of environment variables to set in the container. Cannot be updated.
                                      type: array
                                      items:
                                        description: EnvVar represents an environment variable present in a Container.
                                        type: object
                                        required:
                                          - name
                                        properties:
                                          name:
                                            description: Name of the environment variable. Must be a C_IDENTIFIER.
                                            type: string
                                          value:
                                            description: 'Variable references $(VAR_NAME) are expanded using the previous defined environment variables in the container and any service environment variables. If a variable cannot be resolved, the reference in the input string will be unchanged. The $(VAR_NAME) syntax can be escaped with a double $$, ie: $$(VAR_NAME). Escaped references will never be expanded, regardless of whether the variable exists or not. Defaults to "".'
                                            type: string
                                          valueFrom:
                                            description: EnvVarSource represents a source for the value of an EnvVar.
                                            type: object
                                            properties:
                                              configMapKeyRef:
                                                description: Selects a key from a ConfigMap.
                                                type: object
                                                required:
                                                  - key
                                                properties:
                                                  key:
                                                    description: The key to select.
                                                    type: string
                                                  name:
                                                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                                    type: string
                                                  optional:
                                                    description: Specify whether the ConfigMap or its key must be defined
                                                    type: boolean 
                                              fieldRef:
                                                description: ObjectFieldSelector selects an APIVersioned field of an object.
                                                type: object
                                                required:
                                                  - fieldPath
                                                properties:
                                                  apiVersion:
                                                    description: 'Version of the schema the FieldPath is written in terms of, defaults to "v1".'
                                                    type: string
                                                  fieldPath:
                                                    description: Path of the field to select in the specified API version.
                                                    type: string  
                                              resourceFieldRef:
                                                description: 'ResourceFieldSelector represents container resources (cpu, memory) and their output format'
                                                type: object
                                                required:
                                                  - resource
                                                properties:
                                                  containerName:
                                                    description: 'Container name: required for volumes, optional for env vars'
                                                    type: string
                                                  divisor:
                                                    description: 'Specifies the output format of the exposed resources, defaults to "1"'
                                                    type: string
                                                  resource:
                                                    description: 'Required: resource to select'
                                                    type: string
                                              secretKeyRef:
                                                description: SecretKeySelector selects a key of a Secret.
                                                type: object
                                                required:
                                                  - key
                                                properties:
                                                  key:
                                                    description: The key of the secret to select from.  Must be a valid secret key.
                                                    type: string
                                                  name:
                                                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                                    type: string
                                                  optional:
                                                    description: Specify whether the Secret or its key must be defined
                                                    type: boolean
                                      x-kubernetes-patch-merge-key: name
                                      x-kubernetes-patch-strategy: merge
                                    envFrom:
                                      description: 'List of sources to populate environment variables in the container. The keys defined within a source must be a C_IDENTIFIER. All invalid keys will be reported as an event when the container is starting. When a key exists in multiple sources, the value associated with the last source will take precedence. Values defined by an Env with a duplicate key will take precedence. Cannot be updated.'
                                      type: array
                                      items:
                                        description: EnvFromSource represents the source of a set of ConfigMaps
                                        type: object
                                        properties:
                                          configMapRef:
                                            description: |-
                                              ConfigMapEnvSource selects a ConfigMap to populate the environment variables with.
                
                                              The contents of the target ConfigMap's Data field will represent the key-value pairs as environment variables.
                                            type: object
                                            properties:
                                              name:
                                                description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                                type: string
                                              optional:
                                                description: Specify whether the ConfigMap must be defined
                                                type: boolean                      
                                          prefix:
                                            description: An optional identifier to prepend to each key in the ConfigMap. Must be a C_IDENTIFIER.
                                            type: string
                                          secretRef:
                                            description: |-
                                              SecretEnvSource selects a Secret to populate the environment variables with.
                
                                              The contents of the target Secret's Data field will represent the key-value pairs as environment variables.
                                            type: object
                                            properties:
                                              name:
                                                description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                                type: string
                                              optional:
                                                description: Specify whether the Secret must be defined
                                                type: boolean
                                    image:
                                      description: 'Docker image name. More info: https://kubernetes.io/docs/concepts/containers/images This field is optional to allow higher level config management to default or override container images in workload controllers like Deployments and StatefulSets.'
                                      type: string
                                    imagePullPolicy:
                                      description: 'Image pull policy. One of Always, Never, IfNotPresent. Defaults to Always if :latest tag is specified, or IfNotPresent otherwise. Cannot be updated. More info: https://kubernetes.io/docs/concepts/containers/images#updating-images'
                                      type: string
                                    lifecycle:
                                      description: 'Lifecycle describes actions that the management system should take in response to container lifecycle events. For the PostStart and PreStop lifecycle handlers, management of the container blocks until the action is complete, unless the container process fails, in which case the handler is aborted.'
                                      type: object
                                      properties:
                                        postStart:
                                          description: 'PostStart is called immediately after a container is created. If the handler fails, the container is terminated and restarted according to its restart policy. Other management of the container blocks until the hook completes. More info: https://kubernetes.io/docs/concepts/containers/container-lifecycle-hooks/#container-hooks'                    
                                          type: object
                                          properties:
                                            exec:
                                              description: ExecAction describes a "run in container" action.
                                              type: object
                                              properties:
                                                command:
                                                  description: 'Command is the command line to execute inside the container, the working directory for the command  is root (''/'') in the container''s filesystem. The command is simply exec''d, it is not run inside a shell, so traditional shell instructions (''|'', etc) won''t work. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy.'
                                                  type: array
                                                  items:
                                                    type: string
                                            httpGet:
                                              description: HTTPGetAction describes an action based on HTTP Get requests.
                                              type: object
                                              required:
                                                - port
                                              properties:
                                                host:
                                                  description: 'Host name to connect to, defaults to the pod IP. You probably want to set "Host" in httpHeaders instead.'
                                                  type: string
                                                httpHeaders:
                                                  description: Custom headers to set in the request. HTTP allows repeated headers.
                                                  type: array
                                                  items:
                                                    description: HTTPHeader describes a custom header to be used in HTTP probes
                                                    type: object
                                                    required:
                                                      - name
                                                      - value
                                                    properties:
                                                      name:
                                                        description: The header field name
                                                        type: string
                                                      value:
                                                        description: The header field value
                                                        type: string
                                                path:
                                                  description: Path to access on the HTTP server.
                                                  type: string
                                                port:
                                                  description: Name or number of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.
                                                  type: string
                                                scheme:
                                                  description: Scheme to use for connecting to the host. Defaults to HTTP.
                                                  type: string
                                            tcpSocket:
                                              description: TCPSocketAction describes an action based on opening a socket
                                              type: object
                                              required:
                                                - port
                                              properties:
                                                host:
                                                  description: 'Optional: Host name to connect to, defaults to the pod IP.'
                                                  type: string
                                                port:
                                                  description: Number or name of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.
                                                  type: string
                                        preStop:
                                          description: 'PreStop is called immediately before a container is terminated due to an API request or management event such as liveness/startup probe failure, preemption, resource contention, etc. The handler is not called if the container crashes or exits. The reason for termination is passed to the handler. The Pod''s termination grace period countdown begins before the PreStop hooked is executed. Regardless of the outcome of the handler, the container will eventually terminate within the Pod''s termination grace period. Other management of the container blocks until the hook completes or until the termination grace period is reached. More info: https://kubernetes.io/docs/concepts/containers/container-lifecycle-hooks/#container-hooks'
                                          type: object
                                          properties:
                                            exec:
                                              description: ExecAction describes a "run in container" action.
                                              type: object
                                              properties:
                                                command:
                                                  description: 'Command is the command line to execute inside the container, the working directory for the command  is root (''/'') in the container''s filesystem. The command is simply exec''d, it is not run inside a shell, so traditional shell instructions (''|'', etc) won''t work. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy.'
                                                  type: array
                                                  items:
                                                    type: string
                                            httpGet:
                                              description: HTTPGetAction describes an action based on HTTP Get requests.
                                              type: object
                                              required:
                                                - port
                                              properties:
                                                host:
                                                  description: 'Host name to connect to, defaults to the pod IP. You probably want to set "Host" in httpHeaders instead.'
                                                  type: string
                                                httpHeaders:
                                                  description: Custom headers to set in the request. HTTP allows repeated headers.
                                                  type: array
                                                  items:
                                                    description: HTTPHeader describes a custom header to be used in HTTP probes
                                                    type: object
                                                    required:
                                                      - name
                                                      - value
                                                    properties:
                                                      name:
                                                        description: The header field name
                                                        type: string
                                                      value:
                                                        description: The header field value
                                                        type: string
                                                path:
                                                  description: Path to access on the HTTP server.
                                                  type: string
                                                port:
                                                  description: Name or number of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.
                                                  type: string
                                                scheme:
                                                  description: Scheme to use for connecting to the host. Defaults to HTTP.
                                                  type: string
                                            tcpSocket:
                                              description: TCPSocketAction describes an action based on opening a socket
                                              type: object
                                              required:
                                                - port
                                              properties:
                                                host:
                                                  description: 'Optional: Host name to connect to, defaults to the pod IP.'
                                                  type: string
                                                port:
                                                  description: Number or name of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.
                                                  type: string
                                    livenessProbe:
                                      description: Probe describes a health check to be performed against a container to determine whether it is alive or ready to receive traffic.
                                      type: object
                                      properties:
                                        exec:
                                          description: ExecAction describes a "run in container" action.
                                          type: object
                                          properties:
                                            command:
                                              description: 'Command is the command line to execute inside the container, the working directory for the command  is root (''/'') in the container''s filesystem. The command is simply exec''d, it is not run inside a shell, so traditional shell instructions (''|'', etc) won''t work. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy.'
                                              type: array
                                              items:
                                                type: string
                                        failureThreshold:
                                          description: Minimum consecutive failures for the probe to be considered failed after having succeeded. Defaults to 3. Minimum value is 1.
                                          type: integer
                                        httpGet:
                                          description: HTTPGetAction describes an action based on HTTP Get requests.
                                          type: object
                                          required:
                                            - port
                                          properties:
                                            host:
                                              description: 'Host name to connect to, defaults to the pod IP. You probably want to set "Host" in httpHeaders instead.'
                                              type: string
                                            httpHeaders:
                                              description: Custom headers to set in the request. HTTP allows repeated headers.
                                              type: array
                                              items:
                                                description: HTTPHeader describes a custom header to be used in HTTP probes
                                                type: object
                                                required:
                                                  - name
                                                  - value
                                                properties:
                                                  name:
                                                    description: The header field name
                                                    type: string
                                                  value:
                                                    description: The header field value
                                                    type: string
                                            path:
                                              description: Path to access on the HTTP server.
                                              type: string
                                            port:
                                              description: Name or number of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.
                                              type: string
                                            scheme:
                                              description: Scheme to use for connecting to the host. Defaults to HTTP.
                                              type: string
                                        initialDelaySeconds:
                                          description: 'Number of seconds after the container has started before liveness probes are initiated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                                          type: integer
                                        periodSeconds:
                                          description: How often (in seconds) to perform the probe. Default to 10 seconds. Minimum value is 1.
                                          type: integer
                                        successThreshold:
                                          description: Minimum consecutive successes for the probe to be considered successful after having failed. Defaults to 1. Must be 1 for liveness and startup. Minimum value is 1.
                                          type: integer
                                        tcpSocket:
                                          description: TCPSocketAction describes an action based on opening a socket
                                          type: object
                                          required:
                                            - port
                                          properties:
                                            host:
                                              description: 'Optional: Host name to connect to, defaults to the pod IP.'
                                              type: string
                                            port:
                                              description: Number or name of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.
                                              type: string
                                        timeoutSeconds:
                                          description: 'Number of seconds after which the probe times out. Defaults to 1 second. Minimum value is 1. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                                          type: integer                
                                    name:
                                      description: Name of the container specified as a DNS_LABEL. Each container in a pod must have a unique name (DNS_LABEL). Cannot be updated.
                                      type: string
                                    ports:
                                      description: 'List of ports to expose from the container. Exposing a port here gives the system additional information about the network connections a container uses, but is primarily informational. Not specifying a port here DOES NOT prevent that port from being exposed. Any port which is listening on the default "0.0.0.0" address inside a container will be accessible from the network. Cannot be updated.'
                                      type: array
                                      items:
                                        description: ContainerPort represents a network port in a single container.
                                        type: object
                                        required:
                                          - containerPort
                                        properties:
                                          containerPort:
                                            description: 'Number of port to expose on the pod''s IP address. This must be a valid port number, 0 < x < 65536.'
                                            type: integer
                                          hostIP:
                                            description: What host IP to bind the external port to.
                                            type: string
                                          hostPort:
                                            description: 'Number of port to expose on the host. If specified, this must be a valid port number, 0 < x < 65536. If HostNetwork is specified, this must match ContainerPort. Most containers do not need this.'
                                            type: integer
                                          name:
                                            description: 'If specified, this must be an IANA_SVC_NAME and unique within the pod. Each named port in a pod must have a unique name. Name for the port that can be referred to by services.'
                                            type: string
                                          protocol:
                                            description: 'Protocol for port. Must be UDP, TCP, or SCTP. Defaults to "TCP".'
                                            type: string                                
                                      x-kubernetes-patch-merge-key: containerPort
                                      x-kubernetes-patch-strategy: merge
                                    readinessProbe:
                                      description: Probe describes a health check to be performed against a container to determine whether it is alive or ready to receive traffic.
                                      type: object
                                      properties:
                                        exec:
                                          description: ExecAction describes a "run in container" action.
                                          type: object
                                          properties:
                                            command:
                                              description: 'Command is the command line to execute inside the container, the working directory for the command  is root (''/'') in the container''s filesystem. The command is simply exec''d, it is not run inside a shell, so traditional shell instructions (''|'', etc) won''t work. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy.'
                                              type: array
                                              items:
                                                type: string
                                        failureThreshold:
                                          description: Minimum consecutive failures for the probe to be considered failed after having succeeded. Defaults to 3. Minimum value is 1.
                                          type: integer
                                        httpGet:
                                          description: HTTPGetAction describes an action based on HTTP Get requests.
                                          type: object
                                          required:
                                            - port
                                          properties:
                                            host:
                                              description: 'Host name to connect to, defaults to the pod IP. You probably want to set "Host" in httpHeaders instead.'
                                              type: string
                                            httpHeaders:
                                              description: Custom headers to set in the request. HTTP allows repeated headers.
                                              type: array
                                              items:
                                                description: HTTPHeader describes a custom header to be used in HTTP probes
                                                type: object
                                                required:
                                                  - name
                                                  - value
                                                properties:
                                                  name:
                                                    description: The header field name
                                                    type: string
                                                  value:
                                                    description: The header field value
                                                    type: string
                                            path:
                                              description: Path to access on the HTTP server.
                                              type: string
                                            port:
                                              description: Name or number of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.
                                              type: string
                                            scheme:
                                              description: Scheme to use for connecting to the host. Defaults to HTTP.
                                              type: string
                                        initialDelaySeconds:
                                          description: 'Number of seconds after the container has started before liveness probes are initiated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                                          type: integer
                                        periodSeconds:
                                          description: How often (in seconds) to perform the probe. Default to 10 seconds. Minimum value is 1.
                                          type: integer
                                        successThreshold:
                                          description: Minimum consecutive successes for the probe to be considered successful after having failed. Defaults to 1. Must be 1 for liveness and startup. Minimum value is 1.
                                          type: integer
                                        tcpSocket:
                                          description: TCPSocketAction describes an action based on opening a socket
                                          type: object
                                          required:
                                            - port
                                          properties:
                                            host:
                                              description: 'Optional: Host name to connect to, defaults to the pod IP.'
                                              type: string
                                            port:
                                              description: Number or name of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.
                                              type: string
                                        timeoutSeconds:
                                          description: 'Number of seconds after which the probe times out. Defaults to 1 second. Minimum value is 1. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                                          type: integer
                                    resources:
                                      description: ResourceRequirements describes the compute resource requirements.
                                      type: object
                                      properties:
                                        limits:
                                          description: 'Limits describes the maximum amount of compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/'
                                          type: object
                                          additionalProperties:
                                            description: Quantity is a fixed-point representation of a number. It provides convenient marshaling/unmarshaling in JSON and YAML, in addition to String() and AsInt64() accessors.
                                            type: string
                                        requests:
                                          description: 'Requests describes the minimum amount of compute resources required. If Requests is omitted for a container, it defaults to Limits if that is explicitly specified, otherwise to an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/'
                                          type: object
                                          additionalProperties:
                                            description: Quantity is a fixed-point representation of a number. It provides convenient marshaling/unmarshaling in JSON and YAML, in addition to String() and AsInt64() accessors.
                                            type: string
                                    securityContext:
                                      description: 'SecurityContext holds security configuration that will be applied to a container. Some fields are present in both SecurityContext and PodSecurityContext.  When both are set, the values in SecurityContext take precedence.'
                                      type: object
                                      properties:
                                        allowPrivilegeEscalation:
                                          description: 'AllowPrivilegeEscalation controls whether a process can gain more privileges than its parent process. This bool directly controls if the no_new_privs flag will be set on the container process. AllowPrivilegeEscalation is true always when the container is: 1) run as Privileged 2) has CAP_SYS_ADMIN'
                                          type: boolean
                                        capabilities:
                                          description: Adds and removes POSIX capabilities from running containers.
                                          type: object
                                          properties:
                                            add:
                                              description: Added capabilities
                                              type: array
                                              items:
                                                type: string
                                            drop:
                                              description: Removed capabilities
                                              type: array
                                              items:
                                                type: string
                                        privileged:
                                          description: Run container in privileged mode. Processes in privileged containers are essentially equivalent to root on the host. Defaults to false.
                                          type: boolean
                                        procMount:
                                          description: procMount denotes the type of proc mount to use for the containers. The default is DefaultProcMount which uses the container runtime defaults for readonly paths and masked paths. This requires the ProcMountType feature flag to be enabled.
                                          type: string
                                        readOnlyRootFilesystem:
                                          description: Whether this container has a read-only root filesystem. Default is false.
                                          type: boolean
                                        runAsGroup:
                                          description: 'The GID to run the entrypoint of the container process. Uses runtime default if unset. May also be set in PodSecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.'
                                          type: integer
                                        runAsNonRoot:
                                          description: 'Indicates that the container must run as a non-root user. If true, the Kubelet will validate the image at runtime to ensure that it does not run as UID 0 (root) and fail to start the container if it does. If unset or false, no such validation will be performed. May also be set in PodSecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.'
                                          type: boolean
                                        runAsUser:
                                          description: 'The UID to run the entrypoint of the container process. Defaults to user specified in image metadata if unspecified. May also be set in PodSecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.'
                                          type: integer
                                        seLinuxOptions:
                                          description: SELinuxOptions are the labels to be applied to the container
                                          type: object
                                          properties:
                                            level:
                                              description: Level is SELinux level label that applies to the container.
                                              type: string
                                            role:
                                              description: Role is a SELinux role label that applies to the container.
                                              type: string
                                            type:
                                              description: Type is a SELinux type label that applies to the container.
                                              type: string
                                            user:
                                              description: User is a SELinux user label that applies to the container.
                                              type: string
                                        windowsOptions:
                                          description: WindowsSecurityContextOptions contain Windows-specific options and credentials.
                                          type: object
                                          properties:
                                            gmsaCredentialSpec:
                                              description: 'GMSACredentialSpec is where the GMSA admission webhook (https://github.com/kubernetes-sigs/windows-gmsa) inlines the contents of the GMSA credential spec named by the GMSACredentialSpecName field. This field is alpha-level and is only honored by servers that enable the WindowsGMSA feature flag.'
                                              type: string
                                            gmsaCredentialSpecName:
                                              description: GMSACredentialSpecName is the name of the GMSA credential spec to use. This field is alpha-level and is only honored by servers that enable the WindowsGMSA feature flag.
                                              type: string
                                            runAsUserName:
                                              description: 'The UserName in Windows to run the entrypoint of the container process. Defaults to the user specified in image metadata if unspecified. May also be set in PodSecurityContext. If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence. This field is beta-level and may be disabled with the WindowsRunAsUserName feature flag.'
                                              type: string                               
                                    stdin:
                                      description: 'Whether this container should allocate a buffer for stdin in the container runtime. If this is not set, reads from stdin in the container will always result in EOF. Default is false.'
                                      type: boolean
                                    stdinOnce:
                                      description: 'Whether the container runtime should close the stdin channel after it has been opened by a single attach. When stdin is true the stdin stream will remain open across multiple attach sessions. If stdinOnce is set to true, stdin is opened on container start, is empty until the first client attaches to stdin, and then remains open and accepts data until the client disconnects, at which time stdin is closed and remains closed until the container is restarted. If this flag is false, a container processes that reads from stdin will never receive an EOF. Default is false'
                                      type: boolean
                                    terminationMessagePath:
                                      description: 'Optional: Path at which the file to which the container''s termination message will be written is mounted into the container''s filesystem. Message written is intended to be brief final status, such as an assertion failure message. Will be truncated by the node if greater than 4096 bytes. The total message length across all containers will be limited to 12kb. Defaults to /dev/termination-log. Cannot be updated.'
                                      type: string
                                    terminationMessagePolicy:
                                      description: 'Indicate how the termination message should be populated. File will use the contents of terminationMessagePath to populate the container status message on both success and failure. FallbackToLogsOnError will use the last chunk of container log output if the termination message file is empty and the container exited with an error. The log output is limited to 2048 bytes or 80 lines, whichever is smaller. Defaults to File. Cannot be updated.'
                                      type: string
                                    tty:
                                      description: 'Whether this container should allocate a TTY for itself, also requires ''stdin'' to be true. Default is false.'
                                      type: boolean                              
                                    volumeMounts:
                                      description: Pod volumes to mount into the container's filesystem. Cannot be updated.
                                      type: array
                                      items:
                                        description: VolumeMount describes a mounting of a Volume within a container.
                                        type: object
                                        required:
                                          - name
                                          - mountPath
                                        properties:
                                          mountPath:
                                            description: 'Path within the container at which the volume should be mounted.  Must not contain '':''.'
                                            type: string
                                          mountPropagation:
                                            description: 'mountPropagation determines how mounts are propagated from the host to container and the other way around. When not set, MountPropagationNone is used. This field is beta in 1.10.'
                                            type: string
                                          name:
                                            description: This must match the Name of a Volume.
                                            type: string
                                          readOnly:
                                            description: 'Mounted read-only if true, read-write otherwise (false or unspecified). Defaults to false.'
                                            type: boolean
                                          subPath:
                                            description: Path within the volume from which the container's volume should be mounted. Defaults to "" (volume's root).
                                            type: string
                                          subPathExpr:
                                            description: Expanded path within the volume from which the container's volume should be mounted. Behaves similarly to SubPath but environment variable references $(VAR_NAME) are expanded using the container's environment. Defaults to "" (volume's root). SubPathExpr and SubPath are mutually exclusive.
                                            type: string
                                      x-kubernetes-patch-merge-key: mountPath
                                      x-kubernetes-patch-strategy: merge
                                    workingDir:
                                      description: 'Container''s working directory. If not specified, the container runtime''s default will be used, which might be configured in the container image. Cannot be updated.'
                                      type: string
                                x-kubernetes-patch-merge-key: name
                                x-kubernetes-patch-strategy: merge                          
                              dnsPolicy:
                                description: 'Set DNS policy for containers within the pod. One of ''ClusterFirstWithHostNet'', ''ClusterFirst'' or ''Default''. Defaults to "ClusterFirst". To have DNS options set along with hostNetwork, you have to specify DNS policy explicitly to ''ClusterFirstWithHostNet''.'
                                type: string
                              hostAliases:
                                description: HostAliases is an optional list of hosts and IPs that will be injected into the pod's hosts file if specified. This is only valid for non-hostNetwork pods.
                                type: array
                                items:
                                  description: HostAlias holds the mapping between IP and hostnames that will be injected as an entry in the pod's hosts file.
                                  type: object
                                  properties:
                                    hostnames:
                                      description: Hostnames for the above IP address.
                                      type: array
                                      items:
                                        type: string
                                    ip:
                                      description: IP address of the host file entry.
                                      type: string
                                x-kubernetes-patch-merge-key: ip
                                x-kubernetes-patch-strategy: merge
                              hostIPC:
                                description: 'Use the host''s ipc namespace. Optional: Default to false.'
                                type: boolean
                              hostNetwork:
                                description: 'Host networking requested for this pod. Use the host''s network namespace. If this option is set, the ports that will be used must be specified. Default to false.'
                                type: boolean
                              hostPID:
                                description: 'Use the host''s pid namespace. Optional: Default to false.'
                                type: boolean
                              hostname:
                                description: 'Specifies the hostname of the Pod If not specified, the pod''s hostname will be set to a system-defined value.'
                                type: string
                              imagePullSecrets:
                                description: 'ImagePullSecrets is an optional list of references to secrets in the same namespace to use for pulling any of the images used by this PodSpec. If specified, these secrets will be passed to individual puller implementations for them to use. For example, in the case of docker, only DockerConfig type secrets are honored. More info: https://kubernetes.io/docs/concepts/containers/images#specifying-imagepullsecrets-on-a-pod'
                                type: array
                                items:
                                  description: LocalObjectReference contains enough information to let you locate the referenced object inside the same namespace.
                                  type: object
                                  properties:
                                    name:
                                      description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                      type: string
                                x-kubernetes-patch-merge-key: name
                                x-kubernetes-patch-strategy: merge
                              initContainers:
                                description: 'List of initialization containers belonging to the pod. Init containers are executed in order prior to containers being started. If any init container fails, the pod is considered to have failed and is handled according to its restartPolicy. The name for an init container or normal container must be unique among all containers. Init containers may not have Lifecycle actions, Readiness probes, or Liveness probes. The resourceRequirements of an init container are taken into account during scheduling by finding the highest request/limit for each resource type, and then using the max of of that value or the sum of the normal containers. Limits are applied to init containers in a similar fashion. Init containers cannot currently be added or removed. Cannot be updated. More info: https://kubernetes.io/docs/concepts/workloads/pods/init-containers/'
                                type: array
                                items:
                                  description: A single application container that you want to run within a pod.
                                  type: object
                                  required:
                                    - name
                                    - image
                                  properties:
                                    args:
                                      description: 'Arguments to the entrypoint. The docker image''s CMD is used if this is not provided. Variable references $(VAR_NAME) are expanded using the container''s environment. If a variable cannot be resolved, the reference in the input string will be unchanged. The $(VAR_NAME) syntax can be escaped with a double $$, ie: $$(VAR_NAME). Escaped references will never be expanded, regardless of whether the variable exists or not. Cannot be updated. More info: https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell'
                                      type: array
                                      items:
                                        type: string
                                    command:
                                      description: 'Entrypoint array. Not executed within a shell. The docker image''s ENTRYPOINT is used if this is not provided. Variable references $(VAR_NAME) are expanded using the container''s environment. If a variable cannot be resolved, the reference in the input string will be unchanged. The $(VAR_NAME) syntax can be escaped with a double $$, ie: $$(VAR_NAME). Escaped references will never be expanded, regardless of whether the variable exists or not. Cannot be updated. More info: https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell'
                                      type: array
                                      items:
                                        type: string                              
                                    env:
                                      description: List of environment variables to set in the container. Cannot be updated.
                                      type: array
                                      items:
                                        description: EnvVar represents an environment variable present in a Container.
                                        type: object
                                        required:
                                          - name
                                        properties:
                                          name:
                                            description: Name of the environment variable. Must be a C_IDENTIFIER.
                                            type: string
                                          value:
                                            description: 'Variable references $(VAR_NAME) are expanded using the previous defined environment variables in the container and any service environment variables. If a variable cannot be resolved, the reference in the input string will be unchanged. The $(VAR_NAME) syntax can be escaped with a double $$, ie: $$(VAR_NAME). Escaped references will never be expanded, regardless of whether the variable exists or not. Defaults to "".'
                                            type: string
                                          valueFrom:
                                            description: EnvVarSource represents a source for the value of an EnvVar.
                                            type: object
                                            properties:
                                              configMapKeyRef:
                                                description: Selects a key from a ConfigMap.
                                                type: object
                                                required:
                                                  - key
                                                properties:
                                                  key:
                                                    description: The key to select.
                                                    type: string
                                                  name:
                                                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                                    type: string
                                                  optional:
                                                    description: Specify whether the ConfigMap or its key must be defined
                                                    type: boolean 
                                              fieldRef:
                                                description: ObjectFieldSelector selects an APIVersioned field of an object.
                                                type: object
                                                required:
                                                  - fieldPath
                                                properties:
                                                  apiVersion:
                                                    description: 'Version of the schema the FieldPath is written in terms of, defaults to "v1".'
                                                    type: string
                                                  fieldPath:
                                                    description: Path of the field to select in the specified API version.
                                                    type: string  
                                              resourceFieldRef:
                                                description: 'ResourceFieldSelector represents container resources (cpu, memory) and their output format'
                                                type: object
                                                required:
                                                  - resource
                                                properties:
                                                  containerName:
                                                    description: 'Container name: required for volumes, optional for env vars'
                                                    type: string
                                                  divisor:
                                                    description: 'Specifies the output format of the exposed resources, defaults to "1"'
                                                    type: string
                                                  resource:
                                                    description: 'Required: resource to select'
                                                    type: string
                                              secretKeyRef:
                                                description: SecretKeySelector selects a key of a Secret.
                                                type: object
                                                required:
                                                  - key
                                                properties:
                                                  key:
                                                    description: The key of the secret to select from.  Must be a valid secret key.
                                                    type: string
                                                  name:
                                                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                                    type: string
                                                  optional:
                                                    description: Specify whether the Secret or its key must be defined
                                                    type: boolean
                                      x-kubernetes-patch-merge-key: name
                                      x-kubernetes-patch-strategy: merge
                                    envFrom:
                                      description: 'List of sources to populate environment variables in the container. The keys defined within a source must be a C_IDENTIFIER. All invalid keys will be reported as an event when the container is starting. When a key exists in multiple sources, the value associated with the last source will take precedence. Values defined by an Env with a duplicate key will take precedence. Cannot be updated.'
                                      type: array
                                      items:
                                        description: EnvFromSource represents the source of a set of ConfigMaps
                                        type: object
                                        properties:
                                          configMapRef:
                                            description: |-
                                              ConfigMapEnvSource selects a ConfigMap to populate the environment variables with.
                
                                              The contents of the target ConfigMap's Data field will represent the key-value pairs as environment variables.
                                            type: object
                                            properties:
                                              name:
                                                description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                                type: string
                                              optional:
                                                description: Specify whether the ConfigMap must be defined
                                                type: boolean                      
                                          prefix:
                                            description: An optional identifier to prepend to each key in the ConfigMap. Must be a C_IDENTIFIER.
                                            type: string
                                          secretRef:
                                            description: |-
                                              SecretEnvSource selects a Secret to populate the environment variables with.
                
                                              The contents of the target Secret's Data field will represent the key-value pairs as environment variables.
                                            type: object
                                            properties:
                                              name:
                                                description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                                type: string
                                              optional:
                                                description: Specify whether the Secret must be defined
                                                type: boolean
                                    image:
                                      description: 'Docker image name. More info: https://kubernetes.io/docs/concepts/containers/images This field is optional to allow higher level config management to default or override container images in workload controllers like Deployments and StatefulSets.'
                                      type: string
                                    imagePullPolicy:
                                      description: 'Image pull policy. One of Always, Never, IfNotPresent. Defaults to Always if :latest tag is specified, or IfNotPresent otherwise. Cannot be updated. More info: https://kubernetes.io/docs/concepts/containers/images#updating-images'
                                      type: string
                                    lifecycle:
                                      description: 'Lifecycle describes actions that the management system should take in response to container lifecycle events. For the PostStart and PreStop lifecycle handlers, management of the container blocks until the action is complete, unless the container process fails, in which case the handler is aborted.'
                                      type: object
                                      properties:
                                        postStart:
                                          description: 'PostStart is called immediately after a container is created. If the handler fails, the container is terminated and restarted according to its restart policy. Other management of the container blocks until the hook completes. More info: https://kubernetes.io/docs/concepts/containers/container-lifecycle-hooks/#container-hooks'                    
                                          type: object
                                          properties:
                                            exec:
                                              description: ExecAction describes a "run in container" action.
                                              type: object
                                              properties:
                                                command:
                                                  description: 'Command is the command line to execute inside the container, the working directory for the command  is root (''/'') in the container''s filesystem. The command is simply exec''d, it is not run inside a shell, so traditional shell instructions (''|'', etc) won''t work. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy.'
                                                  type: array
                                                  items:
                                                    type: string
                                            httpGet:
                                              description: HTTPGetAction describes an action based on HTTP Get requests.
                                              type: object
                                              required:
                                                - port
                                              properties:
                                                host:
                                                  description: 'Host name to connect to, defaults to the pod IP. You probably want to set "Host" in httpHeaders instead.'
                                                  type: string
                                                httpHeaders:
                                                  description: Custom headers to set in the request. HTTP allows repeated headers.
                                                  type: array
                                                  items:
                                                    description: HTTPHeader describes a custom header to be used in HTTP probes
                                                    type: object
                                                    required:
                                                      - name
                                                      - value
                                                    properties:
                                                      name:
                                                        description: The header field name
                                                        type: string
                                                      value:
                                                        description: The header field value
                                                        type: string
                                                path:
                                                  description: Path to access on the HTTP server.
                                                  type: string
                                                port:
                                                  description: Name or number of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.
                                                  type: string
                                                scheme:
                                                  description: Scheme to use for connecting to the host. Defaults to HTTP.
                                                  type: string
                                            tcpSocket:
                                              description: TCPSocketAction describes an action based on opening a socket
                                              type: object
                                              required:
                                                - port
                                              properties:
                                                host:
                                                  description: 'Optional: Host name to connect to, defaults to the pod IP.'
                                                  type: string
                                                port:
                                                  description: Number or name of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.
                                                  type: string
                                        preStop:
                                          description: 'PreStop is called immediately before a container is terminated due to an API request or management event such as liveness/startup probe failure, preemption, resource contention, etc. The handler is not called if the container crashes or exits. The reason for termination is passed to the handler. The Pod''s termination grace period countdown begins before the PreStop hooked is executed. Regardless of the outcome of the handler, the container will eventually terminate within the Pod''s termination grace period. Other management of the container blocks until the hook completes or until the termination grace period is reached. More info: https://kubernetes.io/docs/concepts/containers/container-lifecycle-hooks/#container-hooks'
                                          type: object
                                          properties:
                                            exec:
                                              description: ExecAction describes a "run in container" action.
                                              type: object
                                              properties:
                                                command:
                                                  description: 'Command is the command line to execute inside the container, the working directory for the command  is root (''/'') in the container''s filesystem. The command is simply exec''d, it is not run inside a shell, so traditional shell instructions (''|'', etc) won''t work. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy.'
                                                  type: array
                                                  items:
                                                    type: string
                                            httpGet:
                                              description: HTTPGetAction describes an action based on HTTP Get requests.
                                              type: object
                                              required:
                                                - port
                                              properties:
                                                host:
                                                  description: 'Host name to connect to, defaults to the pod IP. You probably want to set "Host" in httpHeaders instead.'
                                                  type: string
                                                httpHeaders:
                                                  description: Custom headers to set in the request. HTTP allows repeated headers.
                                                  type: array
                                                  items:
                                                    description: HTTPHeader describes a custom header to be used in HTTP probes
                                                    type: object
                                                    required:
                                                      - name
                                                      - value
                                                    properties:
                                                      name:
                                                        description: The header field name
                                                        type: string
                                                      value:
                                                        description: The header field value
                                                        type: string
                                                path:
                                                  description: Path to access on the HTTP server.
                                                  type: string
                                                port:
                                                  description: Name or number of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.
                                                  type: string
                                                scheme:
                                                  description: Scheme to use for connecting to the host. Defaults to HTTP.
                                                  type: string
                                            tcpSocket:
                                              description: TCPSocketAction describes an action based on opening a socket
                                              type: object
                                              required:
                                                - port
                                              properties:
                                                host:
                                                  description: 'Optional: Host name to connect to, defaults to the pod IP.'
                                                  type: string
                                                port:
                                                  description: Number or name of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.
                                                  type: string
                                    livenessProbe:
                                      description: Probe describes a health check to be performed against a container to determine whether it is alive or ready to receive traffic.
                                      type: object
                                      properties:
                                        exec:
                                          description: ExecAction describes a "run in container" action.
                                          type: object
                                          properties:
                                            command:
                                              description: 'Command is the command line to execute inside the container, the working directory for the command  is root (''/'') in the container''s filesystem. The command is simply exec''d, it is not run inside a shell, so traditional shell instructions (''|'', etc) won''t work. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy.'
                                              type: array
                                              items:
                                                type: string
                                        failureThreshold:
                                          description: Minimum consecutive failures for the probe to be considered failed after having succeeded. Defaults to 3. Minimum value is 1.
                                          type: integer
                                        httpGet:
                                          description: HTTPGetAction describes an action based on HTTP Get requests.
                                          type: object
                                          required:
                                            - port
                                          properties:
                                            host:
                                              description: 'Host name to connect to, defaults to the pod IP. You probably want to set "Host" in httpHeaders instead.'
                                              type: string
                                            httpHeaders:
                                              description: Custom headers to set in the request. HTTP allows repeated headers.
                                              type: array
                                              items:
                                                description: HTTPHeader describes a custom header to be used in HTTP probes
                                                type: object
                                                required:
                                                  - name
                                                  - value
                                                properties:
                                                  name:
                                                    description: The header field name
                                                    type: string
                                                  value:
                                                    description: The header field value
                                                    type: string
                                            path:
                                              description: Path to access on the HTTP server.
                                              type: string
                                            port:
                                              description: Name or number of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.
                                              type: string
                                            scheme:
                                              description: Scheme to use for connecting to the host. Defaults to HTTP.
                                              type: string
                                        initialDelaySeconds:
                                          description: 'Number of seconds after the container has started before liveness probes are initiated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                                          type: integer
                                        periodSeconds:
                                          description: How often (in seconds) to perform the probe. Default to 10 seconds. Minimum value is 1.
                                          type: integer
                                        successThreshold:
                                          description: Minimum consecutive successes for the probe to be considered successful after having failed. Defaults to 1. Must be 1 for liveness and startup. Minimum value is 1.
                                          type: integer
                                        tcpSocket:
                                          description: TCPSocketAction describes an action based on opening a socket
                                          type: object
                                          required:
                                            - port
                                          properties:
                                            host:
                                              description: 'Optional: Host name to connect to, defaults to the pod IP.'
                                              type: string
                                            port:
                                              description: Number or name of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.
                                              type: string
                                        timeoutSeconds:
                                          description: 'Number of seconds after which the probe times out. Defaults to 1 second. Minimum value is 1. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                                          type: integer                
                                    name:
                                      description: Name of the container specified as a DNS_LABEL. Each container in a pod must have a unique name (DNS_LABEL). Cannot be updated.
                                      type: string
                                    ports:
                                      description: 'List of ports to expose from the container. Exposing a port here gives the system additional information about the network connections a container uses, but is primarily informational. Not specifying a port here DOES NOT prevent that port from being exposed. Any port which is listening on the default "0.0.0.0" address inside a container will be accessible from the network. Cannot be updated.'
                                      type: array
                                      items:
                                        description: ContainerPort represents a network port in a single container.
                                        type: object
                                        required:
                                          - containerPort
                                        properties:
                                          containerPort:
                                            description: 'Number of port to expose on the pod''s IP address. This must be a valid port number, 0 < x < 65536.'
                                            type: integer
                                          hostIP:
                                            description: What host IP to bind the external port to.
                                            type: string
                                          hostPort:
                                            description: 'Number of port to expose on the host. If specified, this must be a valid port number, 0 < x < 65536. If HostNetwork is specified, this must match ContainerPort. Most containers do not need this.'
                                            type: integer
                                          name:
                                            description: 'If specified, this must be an IANA_SVC_NAME and unique within the pod. Each named port in a pod must have a unique name. Name for the port that can be referred to by services.'
                                            type: string
                                          protocol:
                                            description: 'Protocol for port. Must be UDP, TCP, or SCTP. Defaults to "TCP".'
                                            type: string                                
                                      x-kubernetes-patch-merge-key: containerPort
                                      x-kubernetes-patch-strategy: merge
                                    readinessProbe:
                                      description: Probe describes a health check to be performed against a container to determine whether it is alive or ready to receive traffic.
                                      type: object
                                      properties:
                                        exec:
                                          description: ExecAction describes a "run in container" action.
                                          type: object
                                          properties:
                                            command:
                                              description: 'Command is the command line to execute inside the container, the working directory for the command  is root (''/'') in the container''s filesystem. The command is simply exec''d, it is not run inside a shell, so traditional shell instructions (''|'', etc) won''t work. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy.'
                                              type: array
                                              items:
                                                type: string
                                        failureThreshold:
                                          description: Minimum consecutive failures for the probe to be considered failed after having succeeded. Defaults to 3. Minimum value is 1.
                                          type: integer
                                        httpGet:
                                          description: HTTPGetAction describes an action based on HTTP Get requests.
                                          type: object
                                          required:
                                            - port
                                          properties:
                                            host:
                                              description: 'Host name to connect to, defaults to the pod IP. You probably want to set "Host" in httpHeaders instead.'
                                              type: string
                                            httpHeaders:
                                              description: Custom headers to set in the request. HTTP allows repeated headers.
                                              type: array
                                              items:
                                                description: HTTPHeader describes a custom header to be used in HTTP probes
                                                type: object
                                                required:
                                                  - name
                                                  - value
                                                properties:
                                                  name:
                                                    description: The header field name
                                                    type: string
                                                  value:
                                                    description: The header field value
                                                    type: string
                                            path:
                                              description: Path to access on the HTTP server.
                                              type: string
                                            port:
                                              description: Name or number of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.
                                              type: string
                                            scheme:
                                              description: Scheme to use for connecting to the host. Defaults to HTTP.
                                              type: string
                                        initialDelaySeconds:
                                          description: 'Number of seconds after the container has started before liveness probes are initiated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                                          type: integer
                                        periodSeconds:
                                          description: How often (in seconds) to perform the probe. Default to 10 seconds. Minimum value is 1.
                                          type: integer
                                        successThreshold:
                                          description: Minimum consecutive successes for the probe to be considered successful after having failed. Defaults to 1. Must be 1 for liveness and startup. Minimum value is 1.
                                          type: integer
                                        tcpSocket:
                                          description: TCPSocketAction describes an action based on opening a socket
                                          type: object
                                          required:
                                            - port
                                          properties:
                                            host:
                                              description: 'Optional: Host name to connect to, defaults to the pod IP.'
                                              type: string
                                            port:
                                              description: Number or name of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.
                                              type: string
                                        timeoutSeconds:
                                          description: 'Number of seconds after which the probe times out. Defaults to 1 second. Minimum value is 1. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                                          type: integer
                                    resources:
                                      description: ResourceRequirements describes the compute resource requirements.
                                      type: object
                                      properties:
                                        limits:
                                          description: 'Limits describes the maximum amount of compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/'
                                          type: object
                                          additionalProperties:
                                            description: Quantity is a fixed-point representation of a number. It provides convenient marshaling/unmarshaling in JSON and YAML, in addition to String() and AsInt64() accessors.
                                            type: string
                                        requests:
                                          description: 'Requests describes the minimum amount of compute resources required. If Requests is omitted for a container, it defaults to Limits if that is explicitly specified, otherwise to an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/'
                                          type: object
                                          additionalProperties:
                                            description: Quantity is a fixed-point representation of a number. It provides convenient marshaling/unmarshaling in JSON and YAML, in addition to String() and AsInt64() accessors.
                                            type: string
                                    securityContext:
                                      description: 'SecurityContext holds security configuration that will be applied to a container. Some fields are present in both SecurityContext and PodSecurityContext.  When both are set, the values in SecurityContext take precedence.'
                                      type: object
                                      properties:
                                        allowPrivilegeEscalation:
                                          description: 'AllowPrivilegeEscalation controls whether a process can gain more privileges than its parent process. This bool directly controls if the no_new_privs flag will be set on the container process. AllowPrivilegeEscalation is true always when the container is: 1) run as Privileged 2) has CAP_SYS_ADMIN'
                                          type: boolean
                                        capabilities:
                                          description: Adds and removes POSIX capabilities from running containers.
                                          type: object
                                          properties:
                                            add:
                                              description: Added capabilities
                                              type: array
                                              items:
                                                type: string
                                            drop:
                                              description: Removed capabilities
                                              type: array
                                              items:
                                                type: string
                                        privileged:
                                          description: Run container in privileged mode. Processes in privileged containers are essentially equivalent to root on the host. Defaults to false.
                                          type: boolean
                                        procMount:
                                          description: procMount denotes the type of proc mount to use for the containers. The default is DefaultProcMount which uses the container runtime defaults for readonly paths and masked paths. This requires the ProcMountType feature flag to be enabled.
                                          type: string
                                        readOnlyRootFilesystem:
                                          description: Whether this container has a read-only root filesystem. Default is false.
                                          type: boolean
                                        runAsGroup:
                                          description: 'The GID to run the entrypoint of the container process. Uses runtime default if unset. May also be set in PodSecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.'
                                          type: integer
                                        runAsNonRoot:
                                          description: 'Indicates that the container must run as a non-root user. If true, the Kubelet will validate the image at runtime to ensure that it does not run as UID 0 (root) and fail to start the container if it does. If unset or false, no such validation will be performed. May also be set in PodSecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.'
                                          type: boolean
                                        runAsUser:
                                          description: 'The UID to run the entrypoint of the container process. Defaults to user specified in image metadata if unspecified. May also be set in PodSecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.'
                                          type: integer
                                        seLinuxOptions:
                                          description: SELinuxOptions are the labels to be applied to the container
                                          type: object
                                          properties:
                                            level:
                                              description: Level is SELinux level label that applies to the container.
                                              type: string
                                            role:
                                              description: Role is a SELinux role label that applies to the container.
                                              type: string
                                            type:
                                              description: Type is a SELinux type label that applies to the container.
                                              type: string
                                            user:
                                              description: User is a SELinux user label that applies to the container.
                                              type: string
                                        windowsOptions:
                                          description: WindowsSecurityContextOptions contain Windows-specific options and credentials.
                                          type: object
                                          properties:
                                            gmsaCredentialSpec:
                                              description: 'GMSACredentialSpec is where the GMSA admission webhook (https://github.com/kubernetes-sigs/windows-gmsa) inlines the contents of the GMSA credential spec named by the GMSACredentialSpecName field. This field is alpha-level and is only honored by servers that enable the WindowsGMSA feature flag.'
                                              type: string
                                            gmsaCredentialSpecName:
                                              description: GMSACredentialSpecName is the name of the GMSA credential spec to use. This field is alpha-level and is only honored by servers that enable the WindowsGMSA feature flag.
                                              type: string
                                            runAsUserName:
                                              description: 'The UserName in Windows to run the entrypoint of the container process. Defaults to the user specified in image metadata if unspecified. May also be set in PodSecurityContext. If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence. This field is beta-level and may be disabled with the WindowsRunAsUserName feature flag.'
                                              type: string                               
                                    stdin:
                                      description: 'Whether this container should allocate a buffer for stdin in the container runtime. If this is not set, reads from stdin in the container will always result in EOF. Default is false.'
                                      type: boolean
                                    stdinOnce:
                                      description: 'Whether the container runtime should close the stdin channel after it has been opened by a single attach. When stdin is true the stdin stream will remain open across multiple attach sessions. If stdinOnce is set to true, stdin is opened on container start, is empty until the first client attaches to stdin, and then remains open and accepts data until the client disconnects, at which time stdin is closed and remains closed until the container is restarted. If this flag is false, a container processes that reads from stdin will never receive an EOF. Default is false'
                                      type: boolean
                                    terminationMessagePath:
                                      description: 'Optional: Path at which the file to which the container''s termination message will be written is mounted into the container''s filesystem. Message written is intended to be brief final status, such as an assertion failure message. Will be truncated by the node if greater than 4096 bytes. The total message length across all containers will be limited to 12kb. Defaults to /dev/termination-log. Cannot be updated.'
                                      type: string
                                    terminationMessagePolicy:
                                      description: 'Indicate how the termination message should be populated. File will use the contents of terminationMessagePath to populate the container status message on both success and failure. FallbackToLogsOnError will use the last chunk of container log output if the termination message file is empty and the container exited with an error. The log output is limited to 2048 bytes or 80 lines, whichever is smaller. Defaults to File. Cannot be updated.'
                                      type: string
                                    tty:
                                      description: 'Whether this container should allocate a TTY for itself, also requires ''stdin'' to be true. Default is false.'
                                      type: boolean                              
                                    volumeMounts:
                                      description: Pod volumes to mount into the container's filesystem. Cannot be updated.
                                      type: array
                                      items:
                                        description: VolumeMount describes a mounting of a Volume within a container.
                                        type: object
                                        required:
                                          - name
                                          - mountPath
                                        properties:
                                          mountPath:
                                            description: 'Path within the container at which the volume should be mounted.  Must not contain '':''.'
                                            type: string
                                          mountPropagation:
                                            description: 'mountPropagation determines how mounts are propagated from the host to container and the other way around. When not set, MountPropagationNone is used. This field is beta in 1.10.'
                                            type: string
                                          name:
                                            description: This must match the Name of a Volume.
                                            type: string
                                          readOnly:
                                            description: 'Mounted read-only if true, read-write otherwise (false or unspecified). Defaults to false.'
                                            type: boolean
                                          subPath:
                                            description: Path within the volume from which the container's volume should be mounted. Defaults to "" (volume's root).
                                            type: string
                                          subPathExpr:
                                            description: Expanded path within the volume from which the container's volume should be mounted. Behaves similarly to SubPath but environment variable references $(VAR_NAME) are expanded using the container's environment. Defaults to "" (volume's root). SubPathExpr and SubPath are mutually exclusive.
                                            type: string
                                      x-kubernetes-patch-merge-key: mountPath
                                      x-kubernetes-patch-strategy: merge
                                    workingDir:
                                      description: 'Container''s working directory. If not specified, the container runtime''s default will be used, which might be configured in the container image. Cannot be updated.'
                                      type: string
                                x-kubernetes-patch-merge-key: name
                                x-kubernetes-patch-strategy: merge
                              nodeName:
                                description: 'NodeName is a request to schedule this pod onto a specific node. If it is non-empty, the scheduler simply schedules this pod onto that node, assuming that it fits resource requirements.'
                                type: string
                              nodeSelector:
                                description: 'NodeSelector is a selector which must be true for the pod to fit on a node. Selector which must match a node''s labels for the pod to be scheduled on that node. More info: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/'
                                type: object
                                additionalProperties:
                                  type: string
                              restartPolicy:
                                description: 'Restart policy for all containers within the pod. One of Always, OnFailure, Never. Default to Always. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle/#restart-policy'
                                type: string
                              schedulerName:
                                description: 'If specified, the pod will be dispatched by specified scheduler. If not specified, the pod will be dispatched by default scheduler.'
                                type: string
                              securityContext:
                                description: PodSecurityContext holds pod-level security attributes and common container settings. Some fields are also present in container.securityContext.  Field values of container.securityContext take precedence over field values of PodSecurityContext.
                                type: object 
                                properties:
                                  fsGroup:
                                    description: |-
                                      A special supplemental group that applies to all containers in a pod. Some volume types allow the Kubelet to change the ownership of that volume to be owned by the pod:

                                      1. The owning GID will be the FSGroup 2. The setgid bit is set (new files created in the volume will be owned by FSGroup) 3. The permission bits are OR'd with rw-rw----

                                      If unset, the Kubelet will not modify the ownership and permissions of any volume.
                                    type: integer
                                    format: int64
                                  runAsNonRoot:
                                    description: 'Indicates that the container must run as a non-root user. If true, the Kubelet will validate the image at runtime to ensure that it does not run as UID 0 (root) and fail to start the container if it does. If unset or false, no such validation will be performed. May also be set in SecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.'
                                    type: boolean
                                  runAsUser:
                                    description: 'The UID to run the entrypoint of the container process. Defaults to user specified in image metadata if unspecified. May also be set in SecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence for that container.'
                                    type: integer
                                    format: int64
                                  seLinuxOptions:
                                    description: SELinuxOptions are the labels to be applied to the container
                                    type: object
                                    properties:
                                      level:
                                        description: Level is SELinux level label that applies to the container.
                                        type: string
                                      role:
                                        description: Role is a SELinux role label that applies to the container.
                                        type: string
                                      type:
                                        description: Type is a SELinux type label that applies to the container.
                                        type: string
                                      user:
                                        description: User is a SELinux user label that applies to the container.
                                        type: string
                                  supplementalGroups:
                                    description: 'A list of groups applied to the first process run in each container, in addition to the container''s primary GID.  If unspecified, no groups will be added to any container.'
                                    type: array
                                    items:
                                      type: integer
                                      format: int64
                              serviceAccount:
                                description: 'DeprecatedServiceAccount is a depreciated alias for ServiceAccountName. Deprecated: Use serviceAccountName instead.'
                                type: string
                              serviceAccountName:
                                description: 'ServiceAccountName is the name of the ServiceAccount to use to run this pod. More info: https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/'
                                type: string
                              subdomain:
                                description: 'If specified, the fully qualified Pod hostname will be "<hostname>.<subdomain>.<pod namespace>.svc.<cluster domain>". If not specified, the pod will not have a domainname at all.'
                                type: string
                              terminationGracePeriodSeconds:
                                description: 'Optional duration in seconds the pod needs to terminate gracefully. May be decreased in delete request. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period will be used instead. The grace period is the duration in seconds after the processes running in the pod are sent a termination signal and the time when the processes are forcibly halted with a kill signal. Set this value longer than the expected cleanup time for your process. Defaults to 30 seconds.'
                                type: integer
                                format: int64
                              tolerations:
                                description: 'If specified, the pod''s tolerations.'
                                type: array
                                items:
                                  description: 'The pod this Toleration is attached to tolerates any taint that matches the triple <key,value,effect> using the matching operator <operator>.'
                                  type: object
                                  properties:
                                    effect:
                                      description: 'Effect indicates the taint effect to match. Empty means match all taint effects. When specified, allowed values are NoSchedule, PreferNoSchedule and NoExecute.'
                                      type: string
                                    key:
                                      description: 'Key is the taint key that the toleration applies to. Empty means match all taint keys. If the key is empty, operator must be Exists; this combination means to match all values and all keys.'
                                      type: string
                                      x-kubernetes-patch-merge-key: key
                                      x-kubernetes-patch-strategy: merge
                                    operator:
                                      description: 'Operator represents a key''s relationship to the value. Valid operators are Exists and Equal. Defaults to Equal. Exists is equivalent to wildcard for value, so that a pod can tolerate all taints of a particular category.'
                                      type: string
                                    tolerationSeconds:
                                      description: 'TolerationSeconds represents the period of time the toleration (which must be of effect NoExecute, otherwise this field is ignored) tolerates the taint. By default, it is not set, which means tolerate the taint forever (do not evict). Zero and negative values will be treated as 0 (evict immediately) by the system.'
                                      type: integer
                                      format: int64
                                    value:
                                      description: 'Value is the taint value the toleration matches to. If the operator is Exists, the value should be empty, otherwise just a regular string.'
                                      type: string
                              volumes:
                                description: 'List of volumes that can be mounted by containers belonging to the pod. More info: https://kubernetes.io/docs/concepts/storage/volumes'
                                type: array
                                items:
                                  description: Volume represents a named volume in a pod that may be accessed by any container in the pod.
                                  type: object
                                  required:
                                    - name
                                  properties:
                                    awsElasticBlockStore:
                                      description: |-
                                        Represents a Persistent Disk resource in AWS.
                                  
                                        An AWS EBS disk must exist before mounting to a container. The disk must also be in the same AWS zone as the kubelet. An AWS EBS disk can only be mounted as read/write once. AWS EBS volumes support ownership management and SELinux relabeling.
                                      type: object
                                      required:
                                        - volumeID
                                      properties:
                                        fsType:
                                          description: 'Filesystem type of the volume that you want to mount. Tip: Ensure that the filesystem type is supported by the host operating system. Examples: "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified. More info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore'
                                          type: string
                                        partition:
                                          description: 'The partition in the volume that you want to mount. If omitted, the default is to mount by volume name. Examples: For volume /dev/sda1, you specify the partition as "1". Similarly, the volume partition for /dev/sda is "0" (or you can leave the property empty).'
                                          type: integer
                                        readOnly:
                                          description: 'Specify "true" to force and set the ReadOnly property in VolumeMounts to "true". If omitted, the default is "false". More info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore'
                                          type: boolean
                                        volumeID:
                                          description: 'Unique ID of the persistent disk resource in AWS (Amazon EBS volume). More info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore'
                                          type: string
                                    azureDisk:
                                      description: AzureDisk represents an Azure Data Disk mount on the host and bind mount to the pod.
                                      type: object
                                      required:
                                        - diskName
                                        - diskURI
                                      properties:
                                        cachingMode:
                                          description: 'Host Caching mode: None, Read Only, Read Write.'
                                          type: string
                                        diskName:
                                          description: The Name of the data disk in the blob storage
                                          type: string
                                        diskURI:
                                          description: The URI the data disk in the blob storage
                                          type: string
                                        fsType:
                                          description: 'Filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.'
                                          type: string
                                        kind:
                                          description: 'Expected values Shared: multiple blob disks per storage account  Dedicated: single blob disk per storage account  Managed: azure managed data disk (only in managed availability set). defaults to shared'
                                          type: string
                                        readOnly:
                                          description: Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.
                                          type: boolean
                                    azureFile:
                                      description: AzureFile represents an Azure File Service mount on the host and bind mount to the pod.
                                      type: object
                                      required:
                                        - secretName
                                        - shareName
                                      properties:
                                        readOnly:
                                          description: Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.
                                          type: boolean
                                        secretName:
                                          description: the name of secret that contains Azure Storage Account Name and Key
                                          type: string
                                        shareName:
                                          description: Share Name
                                          type: string
                                    cephfs:
                                      description: Represents a Ceph Filesystem mount that lasts the lifetime of a pod Cephfs volumes do not support ownership management or SELinux relabeling.
                                      type: object
                                      required:
                                        - monitors
                                      properties:
                                        monitors:
                                          description: 'Required: Monitors is a collection of Ceph monitors More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it'
                                          type: array
                                          items:
                                            type: string
                                        path:
                                          description: 'Optional: Used as the mounted root, rather than the full Ceph tree, default is /'
                                          type: string
                                        readOnly:
                                          description: 'Optional: Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts. More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it'
                                          type: boolean
                                        secretFile:
                                          description: 'Optional: SecretFile is the path to key ring for User, default is /etc/ceph/user.secret More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it'
                                          type: string
                                        secretRef:
                                          description: 'Optional: SecretRef is reference to the authentication secret for User, default is empty. More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it'
                                          type: object
                                          properties:
                                            name:
                                              description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                              type: string
                                        user:
                                          description: 'Optional: User is the rados user name, default is admin More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it'
                                          type: string
                                    cinder:
                                      description: Represents a cinder volume resource in Openstack. A Cinder volume must exist before mounting to a container. The volume must also be in the same region as the kubelet. Cinder volumes support ownership management and SELinux relabeling.
                                      type: object
                                      required:
                                        - volumeID
                                      properties:
                                        fsType:
                                          description: 'Filesystem type to mount. Must be a filesystem type supported by the host operating system. Examples: "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified. More info: https://examples.k8s.io/mysql-cinder-pd/README.md'
                                          type: string
                                        readOnly:
                                          description: 'Optional: Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts. More info: https://examples.k8s.io/mysql-cinder-pd/README.md'
                                          type: boolean
                                        secretRef:
                                          description: 'Optional: points to a secret object containing parameters used to connect to OpenStack.'
                                          type: object
                                          properties:
                                            name:
                                              description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                              type: string
                                        volumeID:
                                          description: 'volume id used to identify the volume in cinder. More info: https://examples.k8s.io/mysql-cinder-pd/README.md'
                                          type: string
                                    configMap:
                                      description: |-
                                        Adapts a ConfigMap into a volume.
                                  
                                        The contents of the target ConfigMap's Data field will be presented in a volume as files using the keys in the Data field as the file names, unless the items element is populated with specific mappings of keys to paths. ConfigMap volumes support ownership management and SELinux relabeling.
                                      type: object
                                      properties:
                                        defaultMode:
                                          description: 'Optional: mode bits to use on created files by default. Must be a value between 0 and 0777. Defaults to 0644. Directories within the path are not affected by this setting. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.'
                                          type: integer
                                        items:
                                          description: 'If unspecified, each key-value pair in the Data field of the referenced ConfigMap will be projected into the volume as a file whose name is the key and content is the value. If specified, the listed keys will be projected into the specified paths, and unlisted keys will not be present. If a key is specified which is not present in the ConfigMap, the volume setup will error unless it is marked optional. Paths must be relative and may not contain the ''..'' path or start with ''..''.'
                                          type: array
                                          items:
                                            description: Maps a string key to a path within a volume.
                                            type: object
                                            required:
                                              - key
                                              - path
                                            properties:
                                              key:
                                                description: The key to project.
                                                type: string
                                              mode:
                                                description: 'Optional: mode bits to use on this file, must be a value between 0 and 0777. If not specified, the volume defaultMode will be used. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.'
                                                type: integer
                                              path:
                                                description: The relative path of the file to map the key to. May not be an absolute path. May not contain the path element '..'. May not start with the string '..'.
                                                type: string
                                        name:
                                          description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                          type: string
                                        optional:
                                          description: Specify whether the ConfigMap or its keys must be defined
                                          type: boolean                              
                                    downwardAPI:
                                      description: DownwardAPIVolumeSource represents a volume containing downward API info. Downward API volumes support ownership management and SELinux relabeling.
                                      type: object
                                      properties:
                                        defaultMode:
                                          description: 'Optional: mode bits to use on created files by default. Must be a value between 0 and 0777. Defaults to 0644. Directories within the path are not affected by this setting. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.'
                                          type: integer
                                        items:
                                          description: Items is a list of downward API volume file
                                          type: array
                                          items:
                                            description: DownwardAPIVolumeFile represents information to create the file containing the pod field
                                            type: object
                                            required:
                                              - path
                                            properties:
                                              fieldRef:
                                                description: 'Required: Selects a field of the pod: only annotations, labels, name and namespace are supported.'
                                                type: object
                                                required:
                                                  - fieldPath
                                                properties:
                                                  apiVersion:
                                                    description: 'Version of the schema the FieldPath is written in terms of, defaults to "v1".'
                                                    type: string
                                                  fieldPath:
                                                    description: Path of the field to select in the specified API version.
                                                    type: string
                                              mode:
                                                description: 'Optional: mode bits to use on this file, must be a value between 0 and 0777. If not specified, the volume defaultMode will be used. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.'
                                                type: integer
                                              path:
                                                description: 'Required: Path is  the relative path name of the file to be created. Must not be absolute or contain the ''..'' path. Must be utf-8 encoded. The first item of the relative path must not start with ''..'''
                                                type: string
                                              resourceFieldRef:
                                                description: 'Selects a resource of the container: only resources limits and requests (limits.cpu, limits.memory, requests.cpu and requests.memory) are currently supported.'
                                                type: object
                                                required:
                                                  - resource
                                                properties:
                                                  containerName:
                                                    description: 'Container name: required for volumes, optional for env vars'
                                                    type: string
                                                  divisor:
                                                    description: 'Specifies the output format of the exposed resources, defaults to "1"'
                                                    type: string
                                                  resource:
                                                    description: 'Required: resource to select'
                                                    type: string
                                    emptyDir:
                                      description: Represents an empty directory for a pod. Empty directory volumes support ownership management and SELinux relabeling.
                                      type: object
                                      properties:
                                        medium:
                                          description: 'What type of storage medium should back this directory. The default is "" which means to use the node''s default medium. Must be an empty string (default) or Memory. More info: https://kubernetes.io/docs/concepts/storage/volumes#emptydir'
                                          type: string
                                        sizeLimit:
                                          description: 'Total amount of local storage required for this EmptyDir volume. The size limit is also applicable for memory medium. The maximum usage on memory medium EmptyDir would be the minimum value between the SizeLimit specified here and the sum of memory limits of all containers in a pod. The default is nil which means that the limit is undefined. More info: http://kubernetes.io/docs/user-guide/volumes#emptydir'
                                          type: string
                                    fc:
                                      description: Represents a Fibre Channel volume. Fibre Channel volumes can only be mounted as read/write once. Fibre Channel volumes support ownership management and SELinux relabeling.
                                      type: object
                                      properties:
                                        fsType:
                                          description: 'Filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.'
                                          type: string
                                        lun:
                                          description: 'Optional: FC target lun number'
                                          type: integer
                                        readOnly:
                                          description: 'Optional: Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.'
                                          type: boolean
                                        targetWWNs:
                                          description: 'Optional: FC target worldwide names (WWNs)'
                                          type: array
                                          items:
                                            type: string
                                        wwids:
                                          description: 'Optional: FC volume world wide identifiers (wwids) Either wwids or combination of targetWWNs and lun must be set, but not both simultaneously.'
                                          type: array
                                          items:
                                            type: string
                                    flexVolume:
                                      description: FlexVolume represents a generic volume resource that is provisioned/attached using an exec based plugin.
                                      type: object
                                      required:
                                        - driver
                                      properties:
                                        driver:
                                          description: Driver is the name of the driver to use for this volume.
                                          type: string
                                        fsType:
                                          description: 'Filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. "ext4", "xfs", "ntfs". The default filesystem depends on FlexVolume script.'
                                          type: string
                                        options:
                                          description: 'Optional: Extra command options if any.'
                                          type: object
                                          additionalProperties:
                                            type: string
                                        readOnly:
                                          description: 'Optional: Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.'
                                          type: boolean
                                        secretRef:
                                          description: 'Optional: SecretRef is reference to the secret object containing sensitive information to pass to the plugin scripts. This may be empty if no secret object is specified. If the secret object contains more than one secret, all secrets are passed to the plugin scripts.'
                                          type: object
                                          properties:
                                            name:
                                              description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                              type: string
                                    flocker:
                                      description: Represents a Flocker volume mounted by the Flocker agent. One and only one of datasetName and datasetUUID should be set. Flocker volumes do not support ownership management or SELinux relabeling.
                                      type: object
                                      properties:
                                        datasetName:
                                          description: Name of the dataset stored as metadata -> name on the dataset for Flocker should be considered as deprecated
                                          type: string
                                        datasetUUID:
                                          description: UUID of the dataset. This is unique identifier of a Flocker dataset
                                          type: string
                                    gcePersistentDisk:
                                      description: |-
                                        Represents a Persistent Disk resource in Google Compute Engine.
                                        A GCE PD must exist before mounting to a container. The disk must also be in the same GCE project and zone as the kubelet. A GCE PD can only be mounted as read/write once or read-only many times. GCE PDs support ownership management and SELinux relabeling.
                                      type: object
                                      required:
                                        - pdName
                                      properties:
                                        fsType:
                                          description: 'Filesystem type of the volume that you want to mount. Tip: Ensure that the filesystem type is supported by the host operating system. Examples: "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified. More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk'
                                          type: string
                                        partition:
                                          description: 'The partition in the volume that you want to mount. If omitted, the default is to mount by volume name. Examples: For volume /dev/sda1, you specify the partition as "1". Similarly, the volume partition for /dev/sda is "0" (or you can leave the property empty). More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk'
                                          type: integer
                                        pdName:
                                          description: 'Unique name of the PD resource in GCE. Used to identify the disk in GCE. More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk'
                                          type: string
                                        readOnly:
                                          description: 'ReadOnly here will force the ReadOnly setting in VolumeMounts. Defaults to false. More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk'
                                          type: boolean
                                    gitRepo:
                                      description: |-
                                        Represents a volume that is populated with the contents of a git repository. Git repo volumes do not support ownership management. Git repo volumes support SELinux relabeling.
                                  
                                        DEPRECATED: GitRepo is deprecated. To provision a container with a git repo, mount an EmptyDir into an InitContainer that clones the repo using git, then mount the EmptyDir into the Pod's container.
                                      type: object
                                      required:
                                        - repository
                                      properties:
                                        directory:
                                          description: 'Target directory name. Must not contain or start with ''..''.  If ''.'' is supplied, the volume directory will be the git repository.  Otherwise, if specified, the volume will contain the git repository in the subdirectory with the given name.'
                                          type: string
                                        repository:
                                          description: Repository URL
                                          type: string
                                        revision:
                                          description: Commit hash for the specified revision.
                                          type: string
                                    glusterfs:
                                      description: Represents a Glusterfs mount that lasts the lifetime of a pod. Glusterfs volumes do not support ownership management or SELinux relabeling.
                                      type: object
                                      required:
                                        - endpoints
                                        - path
                                      properties:
                                        endpoints:
                                          description: 'EndpointsName is the endpoint name that details Glusterfs topology. More info: https://examples.k8s.io/volumes/glusterfs/README.md#create-a-pod'
                                          type: string
                                        path:
                                          description: 'Path is the Glusterfs volume path. More info: https://examples.k8s.io/volumes/glusterfs/README.md#create-a-pod'
                                          type: string
                                        readOnly:
                                          description: 'ReadOnly here will force the Glusterfs volume to be mounted with read-only permissions. Defaults to false. More info: https://examples.k8s.io/volumes/glusterfs/README.md#create-a-pod'
                                          type: boolean
                                    hostPath:
                                      description: Represents a host path mapped into a pod. Host path volumes do not support ownership management or SELinux relabeling.
                                      type: object
                                      required:
                                        - path
                                      properties:
                                        path:
                                          description: 'Path of the directory on the host. If the path is a symlink, it will follow the link to the real path. More info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath'
                                          type: string
                                        type:
                                          description: 'Type for HostPath Volume Defaults to "" More info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath'
                                          type: string
                                    iscsi:
                                      description: Represents an ISCSI disk. ISCSI volumes can only be mounted as read/write once. ISCSI volumes support ownership management and SELinux relabeling.
                                      type: object
                                      required:
                                        - targetPortal
                                        - iqn
                                        - lun
                                      properties:
                                        chapAuthDiscovery:
                                          description: whether support iSCSI Discovery CHAP authentication
                                          type: boolean
                                        chapAuthSession:
                                          description: whether support iSCSI Session CHAP authentication
                                          type: boolean
                                        fsType:
                                          description: 'Filesystem type of the volume that you want to mount. Tip: Ensure that the filesystem type is supported by the host operating system. Examples: "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified. More info: https://kubernetes.io/docs/concepts/storage/volumes#iscsi'
                                          type: string
                                        initiatorName:
                                          description: 'Custom iSCSI Initiator Name. If initiatorName is specified with iscsiInterface simultaneously, new iSCSI interface <target portal>:<volume name> will be created for the connection.'
                                          type: string
                                        iqn:
                                          description: Target iSCSI Qualified Name.
                                          type: string
                                        iscsiInterface:
                                          description: iSCSI Interface Name that uses an iSCSI transport. Defaults to 'default' (tcp).
                                          type: string
                                        lun:
                                          description: iSCSI Target Lun number.
                                          type: integer
                                        portals:
                                          description: 'iSCSI Target Portal List. The portal is either an IP or ip_addr:port if the port is other than default (typically TCP ports 860 and 3260).'
                                          type: array
                                          items:
                                            type: string
                                        readOnly:
                                          description: ReadOnly here will force the ReadOnly setting in VolumeMounts. Defaults to false.
                                          type: boolean
                                        secretRef:
                                          description: CHAP Secret for iSCSI target and initiator authentication
                                          type: object
                                          properties:
                                            name:
                                              description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                              type: string
                                        targetPortal:
                                          description: 'iSCSI Target Portal. The Portal is either an IP or ip_addr:port if the port is other than default (typically TCP ports 860 and 3260).'
                                          type: string
                                    name:
                                      description: 'Volume''s name. Must be a DNS_LABEL and unique within the pod. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                      type: string
                                    nfs:
                                      description: Represents an NFS mount that lasts the lifetime of a pod. NFS volumes do not support ownership management or SELinux relabeling.
                                      type: object
                                      required:
                                        - server
                                        - path
                                      properties:
                                        path:
                                          description: 'Path that is exported by the NFS server. More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs'
                                          type: string
                                        readOnly:
                                          description: 'ReadOnly here will force the NFS export to be mounted with read-only permissions. Defaults to false. More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs'
                                          type: boolean
                                        server:
                                          description: 'Server is the hostname or IP address of the NFS server. More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs'
                                          type: string
                                    persistentVolumeClaim:
                                      description: 'PersistentVolumeClaimVolumeSource references the user''s PVC in the same namespace. This volume finds the bound PV and mounts that volume for the pod. A PersistentVolumeClaimVolumeSource is, essentially, a wrapper around another type of volume that is owned by someone else (the system).'
                                      type: object
                                      required:
                                        - claimName
                                      properties:
                                        claimName:
                                          description: 'ClaimName is the name of a PersistentVolumeClaim in the same namespace as the pod using this volume. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims'
                                          type: string
                                        readOnly:
                                          description: Will force the ReadOnly setting in VolumeMounts. Default false.
                                          type: boolean
                                    photonPersistentDisk:
                                      description: Represents a Photon Controller persistent disk resource.
                                      type: object
                                      required:
                                        - pdID
                                      properties:
                                        fsType:
                                          description: 'Filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.'
                                          type: string
                                        pdID:
                                          description: ID that identifies Photon Controller persistent disk
                                          type: string
                                    portworxVolume:
                                      description: PortworxVolumeSource represents a Portworx volume resource.
                                      type: object
                                      required:
                                        - volumeID
                                      properties:
                                        fsType:
                                          description: 'FSType represents the filesystem type to mount Must be a filesystem type supported by the host operating system. Ex. "ext4", "xfs". Implicitly inferred to be "ext4" if unspecified.'
                                          type: string
                                        readOnly:
                                          description: Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.
                                          type: boolean
                                        volumeID:
                                          description: VolumeID uniquely identifies a Portworx volume
                                          type: string
                                    projected:
                                      description: Represents a projected volume source
                                      type: object
                                      required:
                                        - sources
                                      properties:
                                        defaultMode:
                                          description: 'Mode bits to use on created files by default. Must be a value between 0 and 0777. Directories within the path are not affected by this setting. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.'
                                          type: integer
                                        sources:
                                          description: list of volume projections
                                          type: array
                                          items:
                                            description: Projection that may be projected along with other supported volume types
                                            type: object
                                            properties:
                                              configMap:
                                                description: information about the configMap data to project
                                                type: object
                                                properties:
                                                  items:
                                                    description: 'If unspecified, each key-value pair in the Data field of the referenced ConfigMap will be projected into the volume as a file whose name is the key and content is the value. If specified, the listed keys will be projected into the specified paths, and unlisted keys will not be present. If a key is specified which is not present in the ConfigMap, the volume setup will error unless it is marked optional. Paths must be relative and may not contain the ''..'' path or start with ''..''.'
                                                    type: array
                                                    items:
                                                      description: Maps a string key to a path within a volume.
                                                      type: object
                                                      required:
                                                        - key
                                                        - path
                                                      properties:
                                                        key:
                                                          description: The key to project.
                                                          type: string
                                                        mode:
                                                          description: 'Optional: mode bits to use on this file, must be a value between 0 and 0777. If not specified, the volume defaultMode will be used. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.'
                                                          type: integer
                                                        path:
                                                          description: The relative path of the file to map the key to. May not be an absolute path. May not contain the path element '..'. May not start with the string '..'.
                                                          type: string
                                                  name:
                                                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                                    type: string
                                                  optional:
                                                    description: Specify whether the ConfigMap or its keys must be defined
                                                    type: boolean
                                              downwardAPI:
                                                description: Represents downward API info for projecting into a projected volume. Note that this is identical to a downwardAPI volume source without the default mode.
                                                type: object
                                                properties:
                                                  items:
                                                    description: Items is a list of DownwardAPIVolume file
                                                    type: array
                                                    items:
                                                      description: DownwardAPIVolumeFile represents information to create the file containing the pod field
                                                      type: object
                                                      required:
                                                        - path
                                                      properties:
                                                        fieldRef:
                                                          description: 'Required: Selects a field of the pod: only annotations, labels, name and namespace are supported.'
                                                          type: object
                                                          required:
                                                            - fieldPath
                                                          properties:
                                                            apiVersion:
                                                              description: 'Version of the schema the FieldPath is written in terms of, defaults to "v1".'
                                                              type: string
                                                            fieldPath:
                                                              description: Path of the field to select in the specified API version.
                                                              type: string
                                                        mode:
                                                          description: 'Optional: mode bits to use on this file, must be a value between 0 and 0777. If not specified, the volume defaultMode will be used. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.'
                                                          type: integer
                                                        path:
                                                          description: 'Required: Path is  the relative path name of the file to be created. Must not be absolute or contain the ''..'' path. Must be utf-8 encoded. The first item of the relative path must not start with ''..'''
                                                          type: string
                                                        resourceFieldRef:
                                                          description: 'Selects a resource of the container: only resources limits and requests (limits.cpu, limits.memory, requests.cpu and requests.memory) are currently supported.'
                                                          type: object
                                                          required:
                                                            - resource
                                                          properties:
                                                            containerName:
                                                              description: 'Container name: required for volumes, optional for env vars'
                                                              type: string
                                                            divisor:
                                                              description: 'Specifies the output format of the exposed resources, defaults to "1"'
                                                              type: string
                                                            resource:
                                                              description: 'Required: resource to select'
                                                              type: string
                                              secret:
                                                description: information about the secret data to project
                                                type: object
                                                properties:
                                                  items:
                                                    description: 'If unspecified, each key-value pair in the Data field of the referenced Secret will be projected into the volume as a file whose name is the key and content is the value. If specified, the listed keys will be projected into the specified paths, and unlisted keys will not be present. If a key is specified which is not present in the Secret, the volume setup will error unless it is marked optional. Paths must be relative and may not contain the ''..'' path or start with ''..''.'
                                                    type: array
                                                    items:
                                                      description: Maps a string key to a path within a volume.
                                                      type: object
                                                      required:
                                                        - key
                                                        - path
                                                      properties:
                                                        key:
                                                          description: The key to project.
                                                          type: string
                                                        mode:
                                                          description: 'Optional: mode bits to use on this file, must be a value between 0 and 0777. If not specified, the volume defaultMode will be used. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.'
                                                          type: integer
                                                        path:
                                                          description: The relative path of the file to map the key to. May not be an absolute path. May not contain the path element '..'. May not start with the string '..'.
                                                          type: string
                                                  name:
                                                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                                    type: string
                                                  optional:
                                                    description: Specify whether the Secret or its key must be defined
                                                    type: boolean
                                              serviceAccountToken:
                                                description: information about the serviceAccountToken data to project
                                                type: object
                                                required:
                                                  - path
                                                properties:
                                                  audience:
                                                    description: 'Audience is the intended audience of the token. A recipient of a token must identify itself with an identifier specified in the audience of the token, and otherwise should reject the token. The audience defaults to the identifier of the apiserver.'
                                                    type: string
                                                  expirationSeconds:
                                                    description: 'ExpirationSeconds is the requested duration of validity of the service account token. As the token approaches expiration, the kubelet volume plugin will proactively rotate the service account token. The kubelet will start trying to rotate the token if the token is older than 80 percent of its time to live or if the token is older than 24 hours.Defaults to 1 hour and must be at least 10 minutes.'
                                                    type: integer
                                                  path:
                                                    description: Path is the path relative to the mount point of the file to project the token into.
                                                    type: string
                                    quobyte:
                                      description: Represents a Quobyte mount that lasts the lifetime of a pod. Quobyte volumes do not support ownership management or SELinux relabeling.
                                      type: object
                                      required:
                                        - registry
                                        - volume
                                      properties:
                                        group:
                                          description: Group to map volume access to Default is no group
                                          type: string
                                        readOnly:
                                          description: ReadOnly here will force the Quobyte volume to be mounted with read-only permissions. Defaults to false.
                                          type: boolean
                                        registry:
                                          description: 'Registry represents a single or multiple Quobyte Registry services specified as a string as host:port pair (multiple entries are separated with commas) which acts as the central registry for volumes'
                                          type: string
                                        tenant:
                                          description: 'Tenant owning the given Quobyte volume in the Backend Used with dynamically provisioned Quobyte volumes, value is set by the plugin'
                                          type: string
                                        user:
                                          description: User to map volume access to Defaults to serivceaccount user
                                          type: string
                                        volume:
                                          description: Volume is a string that references an already created Quobyte volume by name.
                                          type: string
                                    rbd:
                                      description: Represents a Rados Block Device mount that lasts the lifetime of a pod. RBD volumes support ownership management and SELinux relabeling.
                                      type: object
                                      required:
                                        - monitors
                                        - image
                                      properties:
                                        fsType:
                                          description: 'Filesystem type of the volume that you want to mount. Tip: Ensure that the filesystem type is supported by the host operating system. Examples: "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified. More info: https://kubernetes.io/docs/concepts/storage/volumes#rbd'
                                          type: string
                                        image:
                                          description: 'The rados image name. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it'
                                          type: string
                                        keyring:
                                          description: 'Keyring is the path to key ring for RBDUser. Default is /etc/ceph/keyring. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it'
                                          type: string
                                        monitors:
                                          description: 'A collection of Ceph monitors. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it'
                                          type: array
                                          items:
                                            type: string
                                        pool:
                                          description: 'The rados pool name. Default is rbd. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it'
                                          type: string
                                        readOnly:
                                          description: 'ReadOnly here will force the ReadOnly setting in VolumeMounts. Defaults to false. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it'
                                          type: boolean
                                        secretRef:
                                          description: 'SecretRef is name of the authentication secret for RBDUser. If provided overrides keyring. Default is nil. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it'
                                          type: object
                                          properties:
                                            name:
                                              description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                              type: string
                                        user:
                                          description: 'The rados user name. Default is admin. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it'
                                          type: string
                                    scaleIO:
                                      description: ScaleIO represents a ScaleIO persistent volume attached and mounted on Kubernetes nodes.
                                      type: object
                                      required:
                                        - gateway
                                        - system
                                        - secretRef
                                      properties:
                                        fsType:
                                          description: 'Filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. "ext4", "xfs", "ntfs". Default is "xfs".'
                                          type: string
                                        gateway:
                                          description: The host address of the ScaleIO API Gateway.
                                          type: string
                                        protectionDomain:
                                          description: The name of the ScaleIO Protection Domain for the configured storage.
                                          type: string
                                        readOnly:
                                          description: Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.
                                          type: boolean
                                        secretRef:
                                          description: 'SecretRef references to the secret for ScaleIO user and other sensitive information. If this is not provided, Login operation will fail.'
                                          type: object
                                          properties:
                                            name:
                                              description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                              type: string
                                        sslEnabled:
                                          description: 'Flag to enable/disable SSL communication with Gateway, default false'
                                          type: boolean
                                        storageMode:
                                          description: Indicates whether the storage for a volume should be ThickProvisioned or ThinProvisioned. Default is ThinProvisioned.
                                          type: string
                                        storagePool:
                                          description: The ScaleIO Storage Pool associated with the protection domain.
                                          type: string
                                        system:
                                          description: The name of the storage system as configured in ScaleIO.
                                          type: string
                                        volumeName:
                                          description: The name of a volume already created in the ScaleIO system that is associated with this volume source.
                                          type: string
                                    secret:
                                      description: 'Secret represents a secret that should populate this volume. More info: https://kubernetes.io/docs/concepts/storage/volumes#secret'
                                      type: object
                                      properties:
                                        defaultMode:
                                          description: 'Optional: mode bits to use on created files by default. Must be a value between 0 and 0777. Defaults to 0644. Directories within the path are not affected by this setting. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.'
                                          type: integer
                                        items:
                                          description: 'If unspecified, each key-value pair in the Data field of the referenced Secret will be projected into the volume as a file whose name is the key and content is the value. If specified, the listed keys will be projected into the specified paths, and unlisted keys will not be present. If a key is specified which is not present in the Secret, the volume setup will error unless it is marked optional. Paths must be relative and may not contain the ''..'' path or start with ''..''.'
                                          type: array
                                          items:
                                            description: Maps a string key to a path within a volume.
                                            type: object
                                            required:
                                              - key
                                              - path
                                            properties:
                                              key:
                                                description: The key to project.
                                                type: string
                                              mode:
                                                description: 'Optional: mode bits to use on this file, must be a value between 0 and 0777. If not specified, the volume defaultMode will be used. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.'
                                                type: integer
                                              path:
                                                description: The relative path of the file to map the key to. May not be an absolute path. May not contain the path element '..'. May not start with the string '..'.
                                                type: string
                                        optional:
                                          description: Specify whether the Secret or its keys must be defined
                                          type: boolean
                                        secretName:
                                          description: 'Name of the secret in the pod''s namespace to use. More info: https://kubernetes.io/docs/concepts/storage/volumes#secret'
                                          type: string
                                    storageos:
                                      description: Represents a StorageOS persistent volume resource.
                                      type: object
                                      properties:
                                        fsType:
                                          description: 'Filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.'
                                          type: string
                                        readOnly:
                                          description: Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.
                                          type: boolean
                                        secretRef:
                                          description: 'SecretRef specifies the secret to use for obtaining the StorageOS API credentials.  If not specified, default values will be attempted.'
                                          type: object
                                          properties:
                                            name:
                                              description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                              type: string
                                        volumeName:
                                          description: VolumeName is the human-readable name of the StorageOS volume.  Volume names are only unique within a namespace.
                                          type: string
                                        volumeNamespace:
                                          description: VolumeNamespace specifies the scope of the volume within StorageOS.  If no namespace is specified then the Pod's namespace will be used.  This allows the Kubernetes name scoping to be mirrored within StorageOS for tighter integration. Set VolumeName to any name to override the default behaviour. Set to "default" if you are not using namespaces within StorageOS. Namespaces that do not pre-exist within StorageOS will be created.
                                          type: string
                                    vsphereVolume:
                                      description: Represents a vSphere volume resource.
                                      type: object
                                      required:
                                        - volumePath
                                      properties:
                                        fsType:
                                          description: 'Filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.'
                                          type: string
                                        storagePolicyID:
                                          description: Storage Policy Based Management (SPBM) profile ID associated with the StoragePolicyName.
                                          type: string
                                        storagePolicyName:
                                          description: Storage Policy Based Management (SPBM) profile name.
                                          type: string
                                        volumePath:
                                          description: Path that identifies vSphere volume vmdk
                                          type: string
                                x-kubernetes-patch-merge-key: name
                                x-kubernetes-patch-strategy: merge                 
                Worker:
                  type: object
                  additionalProperties:                  
                    description: ReplicaSpec is a description of the replica
                    type: object
                    properties:                      
                      replicas:
                        description: 'Replicas is the desired number of replicas of the given template. If unspecified, defaults to 1.'                      
                        minimum: 1
                        type: integer                      
                      restartPolicy:
                        description: 'Restart policy for all replicas within the job. One of Always, OnFailure, Never and ExitCode. Default to Never.'
                        type: string
                      template:
                        description: Template is the object that describes the pod that will be created for this replica. RestartPolicy in PodTemplateSpec will be overide by RestartPolicy in ReplicaSpec
                        type: object
                        properties:
                          metadata:
                            description: 'Standard object''s metadata. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata'
                            type: object
                            properties:
                              annotations:
                                description: 'Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations'
                                type: object
                                additionalProperties:
                                  type: string
                              clusterName:
                                description: The name of the cluster which the object belongs to. This is used to distinguish resources with same name and namespace in different clusters. This field is not set anywhere right now and apiserver is going to ignore it if set in create or update request.
                                type: string
                              creationTimestamp:
                                description: |-
                                  CreationTimestamp is a timestamp representing the server time when this object was created. It is not guaranteed to be set in happens-before order across separate operations. Clients may not set this value. It is represented in RFC3339 form and is in UTC.
                        
                                  Populated by the system. Read-only. Null for lists. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
                                type: string
                                format: date-time
                              deletionGracePeriodSeconds:
                                description: Number of seconds allowed for this object to gracefully terminate before it will be removed from the system. Only set when deletionTimestamp is also set. May only be shortened. Read-only.
                                type: integer
                              deletionTimestamp:
                                description: |-
                                  DeletionTimestamp is RFC 3339 date and time at which this resource will be deleted. This field is set by the server when a graceful deletion is requested by the user, and is not directly settable by a client. The resource is expected to be deleted (no longer visible from resource lists, and not reachable by name) after the time in this field, once the finalizers list is empty. As long as the finalizers list contains items, deletion is blocked. Once the deletionTimestamp is set, this value may not be unset or be set further into the future, although it may be shortened or the resource may be deleted prior to this time. For example, a user may request that a pod is deleted in 30 seconds. The Kubelet will react by sending a graceful termination signal to the containers in the pod. After that 30 seconds, the Kubelet will send a hard termination signal (SIGKILL) to the container and after cleanup, remove the pod from the API. In the presence of network partitions, this object may still exist after this timestamp, until an administrator or automated process can determine the resource is fully terminated. If not set, graceful deletion of the object has not been requested.
                        
                                  Populated by the system when a graceful deletion is requested. Read-only. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
                                type: string
                                format: date-time
                              finalizers:
                                description: 'Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.'
                                type: array
                                items:
                                  type: string
                                x-kubernetes-patch-strategy: merge
                              generateName:
                                description: |-
                                  GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server.
                        
                                  If this field is specified and the generated name exists, the server will NOT return a 409 - instead, it will either return 201 Created or 500 with Reason ServerTimeout indicating a unique name could not be found in the time allotted, and the client should retry (optionally after the time indicated in the Retry-After header).
                        
                                  Applied only if Name is not specified. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency
                                type: string
                              generation:
                                description: A sequence number representing a specific generation of the desired state. Populated by the system. Read-only.
                                type: integer
                              labels:
                                description: 'Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels'
                                type: object
                                additionalProperties:
                                  type: string
                              managedFields:
                                description: 'ManagedFields maps workflow-id and version to the set of fields that are managed by that workflow. This is mostly for internal housekeeping, and users typically shouldn''t need to set or understand this field. A workflow can be the user''s name, a controller''s name, or the name of a specific apply path like "ci-cd". The set of fields is always in the version that the workflow used when modifying the object.'
                                type: array
                                items:
                                  description: 'ManagedFieldsEntry is a workflow-id, a FieldSet and the group version of the resource that the fieldset applies to.'
                                  type: object
                                  properties:
                                    apiVersion:
                                      description: APIVersion defines the version of this resource that this field set applies to. The format is "group/version" just like the top-level APIVersion field. It is necessary to track the version of a field set because it cannot be automatically converted.
                                      type: string
                                    fieldsType:
                                      description: 'FieldsType is the discriminator for the different fields format and version. There is currently only one possible value: "FieldsV1"'
                                      type: string
                                    fieldsV1:
                                      description: FieldsV1 holds the first JSON version format as described in the "FieldsV1" type.
                                      type: object
                                    manager:
                                      description: Manager is an identifier of the workflow managing these fields.
                                      type: string
                                    operation:
                                      description: Operation is the type of operation which lead to this ManagedFieldsEntry being created. The only valid values for this field are 'Apply' and 'Update'.
                                      type: string
                                    time:
                                      description: Time is timestamp of when these fields were set. It should always be empty if Operation is 'Apply'
                                      type: string
                                      format: date-time
                              name:
                                description: 'Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names'
                                type: string
                              namespace:
                                description: |-
                                  Namespace defines the space within each name must be unique. An empty namespace is equivalent to the "default" namespace, but "default" is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.
                        
                                  Must be a DNS_LABEL. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/namespaces
                                type: string
                              ownerReferences:
                                description: 'List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.'
                                type: array
                                items:
                                  description: 'OwnerReference contains enough information to let you identify an owning object. An owning object must be in the same namespace as the dependent, or be cluster-scoped, so there is no namespace field.'
                                  type: object
                                  required:
                                    - apiVersion
                                    - kind
                                    - name
                                    - uid
                                  properties:
                                    apiVersion:
                                      description: API version of the referent.
                                      type: string
                                    blockOwnerDeletion:
                                      description: 'If true, AND if the owner has the "foregroundDeletion" finalizer, then the owner cannot be deleted from the key-value store until this reference is removed. Defaults to false. To set this field, a user needs "delete" permission of the owner, otherwise 422 (Unprocessable Entity) will be returned.'
                                      type: boolean
                                    controller:
                                      description: 'If true, this reference points to the managing controller.'
                                      type: boolean
                                    kind:
                                      description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                                      type: string
                                    name:
                                      description: 'Name of the referent. More info: http://kubernetes.io/docs/user-guide/identifiers#names'
                                      type: string
                                    uid:
                                      description: 'UID of the referent. More info: http://kubernetes.io/docs/user-guide/identifiers#uids'
                                      type: string
                                x-kubernetes-patch-merge-key: uid
                                x-kubernetes-patch-strategy: merge
                              resourceVersion:
                                description: |-
                                  An opaque value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server. They may only be valid for a particular resource or set of resources.
                        
                                  Populated by the system. Read-only. Value must be treated as opaque by clients and . More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency
                                type: string
                              selfLink:
                                description: |-
                                  SelfLink is a URL representing this object. Populated by the system. Read-only.
                        
                                  DEPRECATED Kubernetes will stop propagating this field in 1.20 release and the field is planned to be removed in 1.21 release.
                                type: string
                              uid:
                                description: |-
                                  UID is the unique in time and space value for this object. It is typically generated by the server on successful creation of a resource and is not allowed to change on PUT operations.
                        
                                  Populated by the system. Read-only. More info: http://kubernetes.io/docs/user-guide/identifiers#uids
                                type: string
                          spec:
                            description: 'Specification of the desired behavior of the pod. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#spec-and-status'                      
                            type: object
                            required:
                              - containers
                            properties:
                              activeDeadlineSeconds:
                                description: Optional duration in seconds the pod may be active on the node relative to StartTime before the system will actively try to mark it failed and kill associated containers. Value must be a positive integer.
                                type: integer
                                format: int64
                              affinity:
                                description: Affinity is a group of affinity scheduling rules.
                                type: object
                                properties:
                                  nodeAffinity:
                                    description: Node affinity is a group of node affinity scheduling rules.
                                    type: object
                                    properties:
                                      preferredDuringSchedulingIgnoredDuringExecution:
                                        description: 'The scheduler will prefer to schedule pods to nodes that satisfy the affinity expressions specified by this field, but it may choose a node that violates one or more of the expressions. The node that is most preferred is the one with the greatest sum of weights, i.e. for each node that meets all of the scheduling requirements (resource request, requiredDuringScheduling affinity expressions, etc.), compute a sum by iterating through the elements of this field and adding "weight" to the sum if the node matches the corresponding matchExpressions; the node(s) with the highest sum are the most preferred.'
                                        type: array
                                        items:
                                          description: An empty preferred scheduling term matches all objects with implicit weight 0 (i.e. it's a no-op). A null preferred scheduling term matches no objects (i.e. is also a no-op).
                                          type: object
                                          required:
                                            - weight
                                            - preference
                                          properties:
                                            preference:
                                              description: A null or empty node selector term matches no objects. The requirements of them are ANDed. The TopologySelectorTerm type implements a subset of the NodeSelectorTerm.
                                              type: object
                                              properties:
                                                matchExpressions:
                                                  description: A list of node selector requirements by node's labels.
                                                  type: array
                                                  items:
                                                    description: 'A node selector requirement is a selector that contains values, a key, and an operator that relates the key and values.'
                                                    type: object
                                                    required:
                                                      - key
                                                      - operator
                                                    properties:
                                                      key:
                                                        description: The label key that the selector applies to.
                                                        type: string
                                                      operator:
                                                        description: 'Represents a key''s relationship to a set of values. Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.'
                                                        type: string
                                                      values:
                                                        description: 'An array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. If the operator is Gt or Lt, the values array must have a single element, which will be interpreted as an integer. This array is replaced during a strategic merge patch.'
                                                        type: array
                                                        items:
                                                          type: string
                                                matchFields:
                                                  description: A list of node selector requirements by node's fields.
                                                  type: array
                                                  items:
                                                    description: 'A node selector requirement is a selector that contains values, a key, and an operator that relates the key and values.'
                                                    type: object
                                                    required:
                                                      - key
                                                      - operator
                                                    properties:
                                                      key:
                                                        description: The label key that the selector applies to.
                                                        type: string
                                                      operator:
                                                        description: 'Represents a key''s relationship to a set of values. Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.'
                                                        type: string
                                                      values:
                                                        description: 'An array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. If the operator is Gt or Lt, the values array must have a single element, which will be interpreted as an integer. This array is replaced during a strategic merge patch.'
                                                        type: array
                                                        items:
                                                          type: string
                                            weight:
                                              description: 'Weight associated with matching the corresponding nodeSelectorTerm, in the range 1-100.'
                                              type: integer
                                      requiredDuringSchedulingIgnoredDuringExecution:
                                        description: 'A node selector represents the union of the results of one or more label queries over a set of nodes; that is, it represents the OR of the selectors represented by the node selector terms.'
                                        type: object
                                        required:
                                          - nodeSelectorTerms
                                        properties:
                                          nodeSelectorTerms:
                                            description: Required. A list of node selector terms. The terms are ORed.
                                            type: array
                                            items:
                                              description: A null or empty node selector term matches no objects. The requirements of them are ANDed. The TopologySelectorTerm type implements a subset of the NodeSelectorTerm.
                                              type: object
                                              properties:
                                                matchExpressions:
                                                  description: A list of node selector requirements by node's labels.
                                                  type: array
                                                  items:
                                                    description: 'A node selector requirement is a selector that contains values, a key, and an operator that relates the key and values.'
                                                    type: object
                                                    required:
                                                      - key
                                                      - operator
                                                    properties:
                                                      key:
                                                        description: The label key that the selector applies to.
                                                        type: string
                                                      operator:
                                                        description: 'Represents a key''s relationship to a set of values. Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.'
                                                        type: string
                                                      values:
                                                        description: 'An array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. If the operator is Gt or Lt, the values array must have a single element, which will be interpreted as an integer. This array is replaced during a strategic merge patch.'
                                                        type: array
                                                        items:
                                                          type: string
                                                matchFields:
                                                  description: A list of node selector requirements by node's fields.
                                                  type: array
                                                  items:
                                                    description: 'A node selector requirement is a selector that contains values, a key, and an operator that relates the key and values.'
                                                    type: object
                                                    required:
                                                      - key
                                                      - operator
                                                    properties:
                                                      key:
                                                        description: The label key that the selector applies to.
                                                        type: string
                                                      operator:
                                                        description: 'Represents a key''s relationship to a set of values. Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.'
                                                        type: string
                                                      values:
                                                        description: 'An array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. If the operator is Gt or Lt, the values array must have a single element, which will be interpreted as an integer. This array is replaced during a strategic merge patch.'
                                                        type: array
                                                        items:
                                                          type: string              
                                  podAffinity:
                                    description: Pod affinity is a group of inter pod affinity scheduling rules.
                                    type: object
                                    properties:
                                      preferredDuringSchedulingIgnoredDuringExecution:
                                        description: 'The scheduler will prefer to schedule pods to nodes that satisfy the affinity expressions specified by this field, but it may choose a node that violates one or more of the expressions. The node that is most preferred is the one with the greatest sum of weights, i.e. for each node that meets all of the scheduling requirements (resource request, requiredDuringScheduling affinity expressions, etc.), compute a sum by iterating through the elements of this field and adding "weight" to the sum if the node has pods which matches the corresponding podAffinityTerm; the node(s) with the highest sum are the most preferred.'
                                        type: array
                                        items:
                                          description: The weights of all of the matched WeightedPodAffinityTerm fields are added per-node to find the most preferred node(s)
                                          type: object
                                          required:
                                            - weight
                                            - podAffinityTerm
                                          properties:
                                            podAffinityTerm:
                                              description: 'Defines a set of pods (namely those matching the labelSelector relative to the given namespace(s)) that this pod should be co-located (affinity) or not co-located (anti-affinity) with, where co-located is defined as running on a node whose value of the label with key <topologyKey> matches that of any node on which a pod of the set of pods is running'
                                              type: object
                                              required:
                                                - topologyKey
                                              properties:
                                                labelSelector:
                                                  description: A label selector is a label query over a set of resources. The result of matchLabels and matchExpressions are ANDed. An empty label selector matches all objects. A null label selector matches no objects.
                                                  type: object
                                                  properties:
                                                    matchExpressions:
                                                      description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                                                      type: array
                                                      items:
                                                        description: 'A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.'
                                                        type: object
                                                        required:
                                                          - key
                                                          - operator
                                                        properties:
                                                          key:
                                                            description: key is the label key that the selector applies to.
                                                            type: string
                                                            x-kubernetes-patch-merge-key: key
                                                            x-kubernetes-patch-strategy: merge
                                                          operator:
                                                            description: 'operator represents a key''s relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.'
                                                            type: string
                                                          values:
                                                            description: 'values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.'
                                                            type: array
                                                            items:
                                                              type: string
                                                    matchLabels:
                                                      description: 'matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.'
                                                      type: object
                                                      additionalProperties:
                                                        type: string
                                                namespaces:
                                                  description: namespaces specifies which namespaces the labelSelector applies to (matches against); null or empty list means "this pod's namespace"
                                                  type: array
                                                  items:
                                                    type: string
                                                topologyKey:
                                                  description: 'This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching the labelSelector in the specified namespaces, where co-located is defined as running on a node whose value of the label with key topologyKey matches that of any node on which any of the selected pods is running. Empty topologyKey is not allowed.'
                                                  type: string
                                            weight:
                                              description: 'weight associated with matching the corresponding podAffinityTerm, in the range 1-100.'
                                              type: integer
                                      requiredDuringSchedulingIgnoredDuringExecution:
                                        description: 'If the affinity requirements specified by this field are not met at scheduling time, the pod will not be scheduled onto the node. If the affinity requirements specified by this field cease to be met at some point during pod execution (e.g. due to a pod label update), the system may or may not try to eventually evict the pod from its node. When there are multiple elements, the lists of nodes corresponding to each podAffinityTerm are intersected, i.e. all terms must be satisfied.'
                                        type: array
                                        items:
                                          description: 'Defines a set of pods (namely those matching the labelSelector relative to the given namespace(s)) that this pod should be co-located (affinity) or not co-located (anti-affinity) with, where co-located is defined as running on a node whose value of the label with key <topologyKey> matches that of any node on which a pod of the set of pods is running'
                                          type: object
                                          required:
                                            - topologyKey
                                          properties:
                                            labelSelector:
                                              description: A label selector is a label query over a set of resources. The result of matchLabels and matchExpressions are ANDed. An empty label selector matches all objects. A null label selector matches no objects.
                                              type: object
                                              properties:
                                                matchExpressions:
                                                  description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                                                  type: array
                                                  items:
                                                    description: 'A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.'
                                                    type: object
                                                    required:
                                                      - key
                                                      - operator
                                                    properties:
                                                      key:
                                                        description: key is the label key that the selector applies to.
                                                        type: string
                                                        x-kubernetes-patch-merge-key: key
                                                        x-kubernetes-patch-strategy: merge
                                                      operator:
                                                        description: 'operator represents a key''s relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.'
                                                        type: string
                                                      values:
                                                        description: 'values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.'
                                                        type: array
                                                        items:
                                                          type: string
                                                matchLabels:
                                                  description: 'matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.'
                                                  type: object
                                                  additionalProperties:
                                                    type: string
                                            namespaces:
                                              description: namespaces specifies which namespaces the labelSelector applies to (matches against); null or empty list means "this pod's namespace"
                                              type: array
                                              items:
                                                type: string
                                            topologyKey:
                                              description: 'This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching the labelSelector in the specified namespaces, where co-located is defined as running on a node whose value of the label with key topologyKey matches that of any node on which any of the selected pods is running. Empty topologyKey is not allowed.'
                                              type: string
                                  podAntiAffinity:
                                    description: Pod anti affinity is a group of inter pod anti affinity scheduling rules.
                                    type: object
                                    properties:
                                      preferredDuringSchedulingIgnoredDuringExecution:
                                        description: 'The scheduler will prefer to schedule pods to nodes that satisfy the anti-affinity expressions specified by this field, but it may choose a node that violates one or more of the expressions. The node that is most preferred is the one with the greatest sum of weights, i.e. for each node that meets all of the scheduling requirements (resource request, requiredDuringScheduling anti-affinity expressions, etc.), compute a sum by iterating through the elements of this field and adding "weight" to the sum if the node has pods which matches the corresponding podAffinityTerm; the node(s) with the highest sum are the most preferred.'
                                        type: array
                                        items:
                                          description: The weights of all of the matched WeightedPodAffinityTerm fields are added per-node to find the most preferred node(s)
                                          type: object
                                          required:
                                            - weight
                                            - podAffinityTerm
                                          properties:
                                            podAffinityTerm:
                                              description: 'Defines a set of pods (namely those matching the labelSelector relative to the given namespace(s)) that this pod should be co-located (affinity) or not co-located (anti-affinity) with, where co-located is defined as running on a node whose value of the label with key <topologyKey> matches that of any node on which a pod of the set of pods is running'
                                              type: object
                                              required:
                                                - topologyKey
                                              properties:
                                                labelSelector:
                                                  description: A label selector is a label query over a set of resources. The result of matchLabels and matchExpressions are ANDed. An empty label selector matches all objects. A null label selector matches no objects.
                                                  type: object
                                                  properties:
                                                    matchExpressions:
                                                      description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                                                      type: array
                                                      items:
                                                        description: 'A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.'
                                                        type: object
                                                        required:
                                                          - key
                                                          - operator
                                                        properties:
                                                          key:
                                                            description: key is the label key that the selector applies to.
                                                            type: string
                                                            x-kubernetes-patch-merge-key: key
                                                            x-kubernetes-patch-strategy: merge
                                                          operator:
                                                            description: 'operator represents a key''s relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.'
                                                            type: string
                                                          values:
                                                            description: 'values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.'
                                                            type: array
                                                            items:
                                                              type: string
                                                    matchLabels:
                                                      description: 'matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.'
                                                      type: object
                                                      additionalProperties:
                                                        type: string
                                                namespaces:
                                                  description: namespaces specifies which namespaces the labelSelector applies to (matches against); null or empty list means "this pod's namespace"
                                                  type: array
                                                  items:
                                                    type: string
                                                topologyKey:
                                                  description: 'This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching the labelSelector in the specified namespaces, where co-located is defined as running on a node whose value of the label with key topologyKey matches that of any node on which any of the selected pods is running. Empty topologyKey is not allowed.'
                                                  type: string
                                            weight:
                                              description: 'weight associated with matching the corresponding podAffinityTerm, in the range 1-100.'
                                              type: integer
                                      requiredDuringSchedulingIgnoredDuringExecution:
                                        description: 'If the anti-affinity requirements specified by this field are not met at scheduling time, the pod will not be scheduled onto the node. If the anti-affinity requirements specified by this field cease to be met at some point during pod execution (e.g. due to a pod label update), the system may or may not try to eventually evict the pod from its node. When there are multiple elements, the lists of nodes corresponding to each podAffinityTerm are intersected, i.e. all terms must be satisfied.'
                                        type: array
                                        items:
                                          description: 'Defines a set of pods (namely those matching the labelSelector relative to the given namespace(s)) that this pod should be co-located (affinity) or not co-located (anti-affinity) with, where co-located is defined as running on a node whose value of the label with key <topologyKey> matches that of any node on which a pod of the set of pods is running'
                                          type: object
                                          required:
                                            - topologyKey
                                          properties:
                                            labelSelector:
                                              description: A label selector is a label query over a set of resources. The result of matchLabels and matchExpressions are ANDed. An empty label selector matches all objects. A null label selector matches no objects.
                                              type: object
                                              properties:
                                                matchExpressions:
                                                  description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                                                  type: array
                                                  items:
                                                    description: 'A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.'
                                                    type: object
                                                    required:
                                                      - key
                                                      - operator
                                                    properties:
                                                      key:
                                                        description: key is the label key that the selector applies to.
                                                        type: string
                                                        x-kubernetes-patch-merge-key: key
                                                        x-kubernetes-patch-strategy: merge
                                                      operator:
                                                        description: 'operator represents a key''s relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.'
                                                        type: string
                                                      values:
                                                        description: 'values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.'
                                                        type: array
                                                        items:
                                                          type: string
                                                matchLabels:
                                                  description: 'matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.'
                                                  type: object
                                                  additionalProperties:
                                                    type: string
                                            namespaces:
                                              description: namespaces specifies which namespaces the labelSelector applies to (matches against); null or empty list means "this pod's namespace"
                                              type: array
                                              items:
                                                type: string
                                            topologyKey:
                                              description: 'This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching the labelSelector in the specified namespaces, where co-located is defined as running on a node whose value of the label with key topologyKey matches that of any node on which any of the selected pods is running. Empty topologyKey is not allowed.'
                                              type: string
                              automountServiceAccountToken:
                                description: AutomountServiceAccountToken indicates whether a service account token should be automatically mounted.
                                type: boolean
                              containers:
                                description: List of containers belonging to the pod. Containers cannot currently be added or removed. There must be at least one container in a Pod. Cannot be updated.
                                type: array
                                items:
                                  description: A single application container that you want to run within a pod.
                                  type: object
                                  required:
                                    - name
                                    - image
                                  properties:
                                    args:
                                      description: 'Arguments to the entrypoint. The docker image''s CMD is used if this is not provided. Variable references $(VAR_NAME) are expanded using the container''s environment. If a variable cannot be resolved, the reference in the input string will be unchanged. The $(VAR_NAME) syntax can be escaped with a double $$, ie: $$(VAR_NAME). Escaped references will never be expanded, regardless of whether the variable exists or not. Cannot be updated. More info: https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell'
                                      type: array
                                      items:
                                        type: string
                                    command:
                                      description: 'Entrypoint array. Not executed within a shell. The docker image''s ENTRYPOINT is used if this is not provided. Variable references $(VAR_NAME) are expanded using the container''s environment. If a variable cannot be resolved, the reference in the input string will be unchanged. The $(VAR_NAME) syntax can be escaped with a double $$, ie: $$(VAR_NAME). Escaped references will never be expanded, regardless of whether the variable exists or not. Cannot be updated. More info: https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell'
                                      type: array
                                      items:
                                        type: string                              
                                    env:
                                      description: List of environment variables to set in the container. Cannot be updated.
                                      type: array
                                      items:
                                        description: EnvVar represents an environment variable present in a Container.
                                        type: object
                                        required:
                                          - name
                                        properties:
                                          name:
                                            description: Name of the environment variable. Must be a C_IDENTIFIER.
                                            type: string
                                          value:
                                            description: 'Variable references $(VAR_NAME) are expanded using the previous defined environment variables in the container and any service environment variables. If a variable cannot be resolved, the reference in the input string will be unchanged. The $(VAR_NAME) syntax can be escaped with a double $$, ie: $$(VAR_NAME). Escaped references will never be expanded, regardless of whether the variable exists or not. Defaults to "".'
                                            type: string
                                          valueFrom:
                                            description: EnvVarSource represents a source for the value of an EnvVar.
                                            type: object
                                            properties:
                                              configMapKeyRef:
                                                description: Selects a key from a ConfigMap.
                                                type: object
                                                required:
                                                  - key
                                                properties:
                                                  key:
                                                    description: The key to select.
                                                    type: string
                                                  name:
                                                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                                    type: string
                                                  optional:
                                                    description: Specify whether the ConfigMap or its key must be defined
                                                    type: boolean 
                                              fieldRef:
                                                description: ObjectFieldSelector selects an APIVersioned field of an object.
                                                type: object
                                                required:
                                                  - fieldPath
                                                properties:
                                                  apiVersion:
                                                    description: 'Version of the schema the FieldPath is written in terms of, defaults to "v1".'
                                                    type: string
                                                  fieldPath:
                                                    description: Path of the field to select in the specified API version.
                                                    type: string  
                                              resourceFieldRef:
                                                description: 'ResourceFieldSelector represents container resources (cpu, memory) and their output format'
                                                type: object
                                                required:
                                                  - resource
                                                properties:
                                                  containerName:
                                                    description: 'Container name: required for volumes, optional for env vars'
                                                    type: string
                                                  divisor:
                                                    description: 'Specifies the output format of the exposed resources, defaults to "1"'
                                                    type: string
                                                  resource:
                                                    description: 'Required: resource to select'
                                                    type: string
                                              secretKeyRef:
                                                description: SecretKeySelector selects a key of a Secret.
                                                type: object
                                                required:
                                                  - key
                                                properties:
                                                  key:
                                                    description: The key of the secret to select from.  Must be a valid secret key.
                                                    type: string
                                                  name:
                                                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                                    type: string
                                                  optional:
                                                    description: Specify whether the Secret or its key must be defined
                                                    type: boolean
                                      x-kubernetes-patch-merge-key: name
                                      x-kubernetes-patch-strategy: merge
                                    envFrom:
                                      description: 'List of sources to populate environment variables in the container. The keys defined within a source must be a C_IDENTIFIER. All invalid keys will be reported as an event when the container is starting. When a key exists in multiple sources, the value associated with the last source will take precedence. Values defined by an Env with a duplicate key will take precedence. Cannot be updated.'
                                      type: array
                                      items:
                                        description: EnvFromSource represents the source of a set of ConfigMaps
                                        type: object
                                        properties:
                                          configMapRef:
                                            description: |-
                                              ConfigMapEnvSource selects a ConfigMap to populate the environment variables with.
                
                                              The contents of the target ConfigMap's Data field will represent the key-value pairs as environment variables.
                                            type: object
                                            properties:
                                              name:
                                                description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                                type: string
                                              optional:
                                                description: Specify whether the ConfigMap must be defined
                                                type: boolean                      
                                          prefix:
                                            description: An optional identifier to prepend to each key in the ConfigMap. Must be a C_IDENTIFIER.
                                            type: string
                                          secretRef:
                                            description: |-
                                              SecretEnvSource selects a Secret to populate the environment variables with.
                
                                              The contents of the target Secret's Data field will represent the key-value pairs as environment variables.
                                            type: object
                                            properties:
                                              name:
                                                description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                                type: string
                                              optional:
                                                description: Specify whether the Secret must be defined
                                                type: boolean
                                    image:
                                      description: 'Docker image name. More info: https://kubernetes.io/docs/concepts/containers/images This field is optional to allow higher level config management to default or override container images in workload controllers like Deployments and StatefulSets.'
                                      type: string
                                    imagePullPolicy:
                                      description: 'Image pull policy. One of Always, Never, IfNotPresent. Defaults to Always if :latest tag is specified, or IfNotPresent otherwise. Cannot be updated. More info: https://kubernetes.io/docs/concepts/containers/images#updating-images'
                                      type: string
                                    lifecycle:
                                      description: 'Lifecycle describes actions that the management system should take in response to container lifecycle events. For the PostStart and PreStop lifecycle handlers, management of the container blocks until the action is complete, unless the container process fails, in which case the handler is aborted.'
                                      type: object
                                      properties:
                                        postStart:
                                          description: 'PostStart is called immediately after a container is created. If the handler fails, the container is terminated and restarted according to its restart policy. Other management of the container blocks until the hook completes. More info: https://kubernetes.io/docs/concepts/containers/container-lifecycle-hooks/#container-hooks'                    
                                          type: object
                                          properties:
                                            exec:
                                              description: ExecAction describes a "run in container" action.
                                              type: object
                                              properties:
                                                command:
                                                  description: 'Command is the command line to execute inside the container, the working directory for the command  is root (''/'') in the container''s filesystem. The command is simply exec''d, it is not run inside a shell, so traditional shell instructions (''|'', etc) won''t work. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy.'
                                                  type: array
                                                  items:
                                                    type: string
                                            httpGet:
                                              description: HTTPGetAction describes an action based on HTTP Get requests.
                                              type: object
                                              required:
                                                - port
                                              properties:
                                                host:
                                                  description: 'Host name to connect to, defaults to the pod IP. You probably want to set "Host" in httpHeaders instead.'
                                                  type: string
                                                httpHeaders:
                                                  description: Custom headers to set in the request. HTTP allows repeated headers.
                                                  type: array
                                                  items:
                                                    description: HTTPHeader describes a custom header to be used in HTTP probes
                                                    type: object
                                                    required:
                                                      - name
                                                      - value
                                                    properties:
                                                      name:
                                                        description: The header field name
                                                        type: string
                                                      value:
                                                        description: The header field value
                                                        type: string
                                                path:
                                                  description: Path to access on the HTTP server.
                                                  type: string
                                                port:
                                                  description: Name or number of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.
                                                  type: string
                                                scheme:
                                                  description: Scheme to use for connecting to the host. Defaults to HTTP.
                                                  type: string
                                            tcpSocket:
                                              description: TCPSocketAction describes an action based on opening a socket
                                              type: object
                                              required:
                                                - port
                                              properties:
                                                host:
                                                  description: 'Optional: Host name to connect to, defaults to the pod IP.'
                                                  type: string
                                                port:
                                                  description: Number or name of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.
                                                  type: string
                                        preStop:
                                          description: 'PreStop is called immediately before a container is terminated due to an API request or management event such as liveness/startup probe failure, preemption, resource contention, etc. The handler is not called if the container crashes or exits. The reason for termination is passed to the handler. The Pod''s termination grace period countdown begins before the PreStop hooked is executed. Regardless of the outcome of the handler, the container will eventually terminate within the Pod''s termination grace period. Other management of the container blocks until the hook completes or until the termination grace period is reached. More info: https://kubernetes.io/docs/concepts/containers/container-lifecycle-hooks/#container-hooks'
                                          type: object
                                          properties:
                                            exec:
                                              description: ExecAction describes a "run in container" action.
                                              type: object
                                              properties:
                                                command:
                                                  description: 'Command is the command line to execute inside the container, the working directory for the command  is root (''/'') in the container''s filesystem. The command is simply exec''d, it is not run inside a shell, so traditional shell instructions (''|'', etc) won''t work. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy.'
                                                  type: array
                                                  items:
                                                    type: string
                                            httpGet:
                                              description: HTTPGetAction describes an action based on HTTP Get requests.
                                              type: object
                                              required:
                                                - port
                                              properties:
                                                host:
                                                  description: 'Host name to connect to, defaults to the pod IP. You probably want to set "Host" in httpHeaders instead.'
                                                  type: string
                                                httpHeaders:
                                                  description: Custom headers to set in the request. HTTP allows repeated headers.
                                                  type: array
                                                  items:
                                                    description: HTTPHeader describes a custom header to be used in HTTP probes
                                                    type: object
                                                    required:
                                                      - name
                                                      - value
                                                    properties:
                                                      name:
                                                        description: The header field name
                                                        type: string
                                                      value:
                                                        description: The header field value
                                                        type: string
                                                path:
                                                  description: Path to access on the HTTP server.
                                                  type: string
                                                port:
                                                  description: Name or number of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.
                                                  type: string
                                                scheme:
                                                  description: Scheme to use for connecting to the host. Defaults to HTTP.
                                                  type: string
                                            tcpSocket:
                                              description: TCPSocketAction describes an action based on opening a socket
                                              type: object
                                              required:
                                                - port
                                              properties:
                                                host:
                                                  description: 'Optional: Host name to connect to, defaults to the pod IP.'
                                                  type: string
                                                port:
                                                  description: Number or name of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.
                                                  type: string
                                    livenessProbe:
                                      description: Probe describes a health check to be performed against a container to determine whether it is alive or ready to receive traffic.
                                      type: object
                                      properties:
                                        exec:
                                          description: ExecAction describes a "run in container" action.
                                          type: object
                                          properties:
                                            command:
                                              description: 'Command is the command line to execute inside the container, the working directory for the command  is root (''/'') in the container''s filesystem. The command is simply exec''d, it is not run inside a shell, so traditional shell instructions (''|'', etc) won''t work. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy.'
                                              type: array
                                              items:
                                                type: string
                                        failureThreshold:
                                          description: Minimum consecutive failures for the probe to be considered failed after having succeeded. Defaults to 3. Minimum value is 1.
                                          type: integer
                                        httpGet:
                                          description: HTTPGetAction describes an action based on HTTP Get requests.
                                          type: object
                                          required:
                                            - port
                                          properties:
                                            host:
                                              description: 'Host name to connect to, defaults to the pod IP. You probably want to set "Host" in httpHeaders instead.'
                                              type: string
                                            httpHeaders:
                                              description: Custom headers to set in the request. HTTP allows repeated headers.
                                              type: array
                                              items:
                                                description: HTTPHeader describes a custom header to be used in HTTP probes
                                                type: object
                                                required:
                                                  - name
                                                  - value
                                                properties:
                                                  name:
                                                    description: The header field name
                                                    type: string
                                                  value:
                                                    description: The header field value
                                                    type: string
                                            path:
                                              description: Path to access on the HTTP server.
                                              type: string
                                            port:
                                              description: Name or number of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.
                                              type: string
                                            scheme:
                                              description: Scheme to use for connecting to the host. Defaults to HTTP.
                                              type: string
                                        initialDelaySeconds:
                                          description: 'Number of seconds after the container has started before liveness probes are initiated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                                          type: integer
                                        periodSeconds:
                                          description: How often (in seconds) to perform the probe. Default to 10 seconds. Minimum value is 1.
                                          type: integer
                                        successThreshold:
                                          description: Minimum consecutive successes for the probe to be considered successful after having failed. Defaults to 1. Must be 1 for liveness and startup. Minimum value is 1.
                                          type: integer
                                        tcpSocket:
                                          description: TCPSocketAction describes an action based on opening a socket
                                          type: object
                                          required:
                                            - port
                                          properties:
                                            host:
                                              description: 'Optional: Host name to connect to, defaults to the pod IP.'
                                              type: string
                                            port:
                                              description: Number or name of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.
                                              type: string
                                        timeoutSeconds:
                                          description: 'Number of seconds after which the probe times out. Defaults to 1 second. Minimum value is 1. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                                          type: integer                
                                    name:
                                      description: Name of the container specified as a DNS_LABEL. Each container in a pod must have a unique name (DNS_LABEL). Cannot be updated.
                                      type: string
                                    ports:
                                      description: 'List of ports to expose from the container. Exposing a port here gives the system additional information about the network connections a container uses, but is primarily informational. Not specifying a port here DOES NOT prevent that port from being exposed. Any port which is listening on the default "0.0.0.0" address inside a container will be accessible from the network. Cannot be updated.'
                                      type: array
                                      items:
                                        description: ContainerPort represents a network port in a single container.
                                        type: object
                                        required:
                                          - containerPort
                                        properties:
                                          containerPort:
                                            description: 'Number of port to expose on the pod''s IP address. This must be a valid port number, 0 < x < 65536.'
                                            type: integer
                                          hostIP:
                                            description: What host IP to bind the external port to.
                                            type: string
                                          hostPort:
                                            description: 'Number of port to expose on the host. If specified, this must be a valid port number, 0 < x < 65536. If HostNetwork is specified, this must match ContainerPort. Most containers do not need this.'
                                            type: integer
                                          name:
                                            description: 'If specified, this must be an IANA_SVC_NAME and unique within the pod. Each named port in a pod must have a unique name. Name for the port that can be referred to by services.'
                                            type: string
                                          protocol:
                                            description: 'Protocol for port. Must be UDP, TCP, or SCTP. Defaults to "TCP".'
                                            type: string                                
                                      x-kubernetes-patch-merge-key: containerPort
                                      x-kubernetes-patch-strategy: merge
                                    readinessProbe:
                                      description: Probe describes a health check to be performed against a container to determine whether it is alive or ready to receive traffic.
                                      type: object
                                      properties:
                                        exec:
                                          description: ExecAction describes a "run in container" action.
                                          type: object
                                          properties:
                                            command:
                                              description: 'Command is the command line to execute inside the container, the working directory for the command  is root (''/'') in the container''s filesystem. The command is simply exec''d, it is not run inside a shell, so traditional shell instructions (''|'', etc) won''t work. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy.'
                                              type: array
                                              items:
                                                type: string
                                        failureThreshold:
                                          description: Minimum consecutive failures for the probe to be considered failed after having succeeded. Defaults to 3. Minimum value is 1.
                                          type: integer
                                        httpGet:
                                          description: HTTPGetAction describes an action based on HTTP Get requests.
                                          type: object
                                          required:
                                            - port
                                          properties:
                                            host:
                                              description: 'Host name to connect to, defaults to the pod IP. You probably want to set "Host" in httpHeaders instead.'
                                              type: string
                                            httpHeaders:
                                              description: Custom headers to set in the request. HTTP allows repeated headers.
                                              type: array
                                              items:
                                                description: HTTPHeader describes a custom header to be used in HTTP probes
                                                type: object
                                                required:
                                                  - name
                                                  - value
                                                properties:
                                                  name:
                                                    description: The header field name
                                                    type: string
                                                  value:
                                                    description: The header field value
                                                    type: string
                                            path:
                                              description: Path to access on the HTTP server.
                                              type: string
                                            port:
                                              description: Name or number of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.
                                              type: string
                                            scheme:
                                              description: Scheme to use for connecting to the host. Defaults to HTTP.
                                              type: string
                                        initialDelaySeconds:
                                          description: 'Number of seconds after the container has started before liveness probes are initiated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                                          type: integer
                                        periodSeconds:
                                          description: How often (in seconds) to perform the probe. Default to 10 seconds. Minimum value is 1.
                                          type: integer
                                        successThreshold:
                                          description: Minimum consecutive successes for the probe to be considered successful after having failed. Defaults to 1. Must be 1 for liveness and startup. Minimum value is 1.
                                          type: integer
                                        tcpSocket:
                                          description: TCPSocketAction describes an action based on opening a socket
                                          type: object
                                          required:
                                            - port
                                          properties:
                                            host:
                                              description: 'Optional: Host name to connect to, defaults to the pod IP.'
                                              type: string
                                            port:
                                              description: Number or name of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.
                                              type: string
                                        timeoutSeconds:
                                          description: 'Number of seconds after which the probe times out. Defaults to 1 second. Minimum value is 1. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                                          type: integer
                                    resources:
                                      description: ResourceRequirements describes the compute resource requirements.
                                      type: object
                                      properties:
                                        limits:
                                          description: 'Limits describes the maximum amount of compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/'
                                          type: object
                                          additionalProperties:
                                            description: Quantity is a fixed-point representation of a number. It provides convenient marshaling/unmarshaling in JSON and YAML, in addition to String() and AsInt64() accessors.
                                            type: string
                                        requests:
                                          description: 'Requests describes the minimum amount of compute resources required. If Requests is omitted for a container, it defaults to Limits if that is explicitly specified, otherwise to an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/'
                                          type: object
                                          additionalProperties:
                                            description: Quantity is a fixed-point representation of a number. It provides convenient marshaling/unmarshaling in JSON and YAML, in addition to String() and AsInt64() accessors.
                                            type: string
                                    securityContext:
                                      description: 'SecurityContext holds security configuration that will be applied to a container. Some fields are present in both SecurityContext and PodSecurityContext.  When both are set, the values in SecurityContext take precedence.'
                                      type: object
                                      properties:
                                        allowPrivilegeEscalation:
                                          description: 'AllowPrivilegeEscalation controls whether a process can gain more privileges than its parent process. This bool directly controls if the no_new_privs flag will be set on the container process. AllowPrivilegeEscalation is true always when the container is: 1) run as Privileged 2) has CAP_SYS_ADMIN'
                                          type: boolean
                                        capabilities:
                                          description: Adds and removes POSIX capabilities from running containers.
                                          type: object
                                          properties:
                                            add:
                                              description: Added capabilities
                                              type: array
                                              items:
                                                type: string
                                            drop:
                                              description: Removed capabilities
                                              type: array
                                              items:
                                                type: string
                                        privileged:
                                          description: Run container in privileged mode. Processes in privileged containers are essentially equivalent to root on the host. Defaults to false.
                                          type: boolean
                                        procMount:
                                          description: procMount denotes the type of proc mount to use for the containers. The default is DefaultProcMount which uses the container runtime defaults for readonly paths and masked paths. This requires the ProcMountType feature flag to be enabled.
                                          type: string
                                        readOnlyRootFilesystem:
                                          description: Whether this container has a read-only root filesystem. Default is false.
                                          type: boolean
                                        runAsGroup:
                                          description: 'The GID to run the entrypoint of the container process. Uses runtime default if unset. May also be set in PodSecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.'
                                          type: integer
                                        runAsNonRoot:
                                          description: 'Indicates that the container must run as a non-root user. If true, the Kubelet will validate the image at runtime to ensure that it does not run as UID 0 (root) and fail to start the container if it does. If unset or false, no such validation will be performed. May also be set in PodSecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.'
                                          type: boolean
                                        runAsUser:
                                          description: 'The UID to run the entrypoint of the container process. Defaults to user specified in image metadata if unspecified. May also be set in PodSecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.'
                                          type: integer
                                        seLinuxOptions:
                                          description: SELinuxOptions are the labels to be applied to the container
                                          type: object
                                          properties:
                                            level:
                                              description: Level is SELinux level label that applies to the container.
                                              type: string
                                            role:
                                              description: Role is a SELinux role label that applies to the container.
                                              type: string
                                            type:
                                              description: Type is a SELinux type label that applies to the container.
                                              type: string
                                            user:
                                              description: User is a SELinux user label that applies to the container.
                                              type: string
                                        windowsOptions:
                                          description: WindowsSecurityContextOptions contain Windows-specific options and credentials.
                                          type: object
                                          properties:
                                            gmsaCredentialSpec:
                                              description: 'GMSACredentialSpec is where the GMSA admission webhook (https://github.com/kubernetes-sigs/windows-gmsa) inlines the contents of the GMSA credential spec named by the GMSACredentialSpecName field. This field is alpha-level and is only honored by servers that enable the WindowsGMSA feature flag.'
                                              type: string
                                            gmsaCredentialSpecName:
                                              description: GMSACredentialSpecName is the name of the GMSA credential spec to use. This field is alpha-level and is only honored by servers that enable the WindowsGMSA feature flag.
                                              type: string
                                            runAsUserName:
                                              description: 'The UserName in Windows to run the entrypoint of the container process. Defaults to the user specified in image metadata if unspecified. May also be set in PodSecurityContext. If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence. This field is beta-level and may be disabled with the WindowsRunAsUserName feature flag.'
                                              type: string                               
                                    stdin:
                                      description: 'Whether this container should allocate a buffer for stdin in the container runtime. If this is not set, reads from stdin in the container will always result in EOF. Default is false.'
                                      type: boolean
                                    stdinOnce:
                                      description: 'Whether the container runtime should close the stdin channel after it has been opened by a single attach. When stdin is true the stdin stream will remain open across multiple attach sessions. If stdinOnce is set to true, stdin is opened on container start, is empty until the first client attaches to stdin, and then remains open and accepts data until the client disconnects, at which time stdin is closed and remains closed until the container is restarted. If this flag is false, a container processes that reads from stdin will never receive an EOF. Default is false'
                                      type: boolean
                                    terminationMessagePath:
                                      description: 'Optional: Path at which the file to which the container''s termination message will be written is mounted into the container''s filesystem. Message written is intended to be brief final status, such as an assertion failure message. Will be truncated by the node if greater than 4096 bytes. The total message length across all containers will be limited to 12kb. Defaults to /dev/termination-log. Cannot be updated.'
                                      type: string
                                    terminationMessagePolicy:
                                      description: 'Indicate how the termination message should be populated. File will use the contents of terminationMessagePath to populate the container status message on both success and failure. FallbackToLogsOnError will use the last chunk of container log output if the termination message file is empty and the container exited with an error. The log output is limited to 2048 bytes or 80 lines, whichever is smaller. Defaults to File. Cannot be updated.'
                                      type: string
                                    tty:
                                      description: 'Whether this container should allocate a TTY for itself, also requires ''stdin'' to be true. Default is false.'
                                      type: boolean                              
                                    volumeMounts:
                                      description: Pod volumes to mount into the container's filesystem. Cannot be updated.
                                      type: array
                                      items:
                                        description: VolumeMount describes a mounting of a Volume within a container.
                                        type: object
                                        required:
                                          - name
                                          - mountPath
                                        properties:
                                          mountPath:
                                            description: 'Path within the container at which the volume should be mounted.  Must not contain '':''.'
                                            type: string
                                          mountPropagation:
                                            description: 'mountPropagation determines how mounts are propagated from the host to container and the other way around. When not set, MountPropagationNone is used. This field is beta in 1.10.'
                                            type: string
                                          name:
                                            description: This must match the Name of a Volume.
                                            type: string
                                          readOnly:
                                            description: 'Mounted read-only if true, read-write otherwise (false or unspecified). Defaults to false.'
                                            type: boolean
                                          subPath:
                                            description: Path within the volume from which the container's volume should be mounted. Defaults to "" (volume's root).
                                            type: string
                                          subPathExpr:
                                            description: Expanded path within the volume from which the container's volume should be mounted. Behaves similarly to SubPath but environment variable references $(VAR_NAME) are expanded using the container's environment. Defaults to "" (volume's root). SubPathExpr and SubPath are mutually exclusive.
                                            type: string
                                      x-kubernetes-patch-merge-key: mountPath
                                      x-kubernetes-patch-strategy: merge
                                    workingDir:
                                      description: 'Container''s working directory. If not specified, the container runtime''s default will be used, which might be configured in the container image. Cannot be updated.'
                                      type: string
                                x-kubernetes-patch-merge-key: name
                                x-kubernetes-patch-strategy: merge                          
                              dnsPolicy:
                                description: 'Set DNS policy for containers within the pod. One of ''ClusterFirstWithHostNet'', ''ClusterFirst'' or ''Default''. Defaults to "ClusterFirst". To have DNS options set along with hostNetwork, you have to specify DNS policy explicitly to ''ClusterFirstWithHostNet''.'
                                type: string
                              hostAliases:
                                description: HostAliases is an optional list of hosts and IPs that will be injected into the pod's hosts file if specified. This is only valid for non-hostNetwork pods.
                                type: array
                                items:
                                  description: HostAlias holds the mapping between IP and hostnames that will be injected as an entry in the pod's hosts file.
                                  type: object
                                  properties:
                                    hostnames:
                                      description: Hostnames for the above IP address.
                                      type: array
                                      items:
                                        type: string
                                    ip:
                                      description: IP address of the host file entry.
                                      type: string
                                x-kubernetes-patch-merge-key: ip
                                x-kubernetes-patch-strategy: merge
                              hostIPC:
                                description: 'Use the host''s ipc namespace. Optional: Default to false.'
                                type: boolean
                              hostNetwork:
                                description: 'Host networking requested for this pod. Use the host''s network namespace. If this option is set, the ports that will be used must be specified. Default to false.'
                                type: boolean
                              hostPID:
                                description: 'Use the host''s pid namespace. Optional: Default to false.'
                                type: boolean
                              hostname:
                                description: 'Specifies the hostname of the Pod If not specified, the pod''s hostname will be set to a system-defined value.'
                                type: string
                              imagePullSecrets:
                                description: 'ImagePullSecrets is an optional list of references to secrets in the same namespace to use for pulling any of the images used by this PodSpec. If specified, these secrets will be passed to individual puller implementations for them to use. For example, in the case of docker, only DockerConfig type secrets are honored. More info: https://kubernetes.io/docs/concepts/containers/images#specifying-imagepullsecrets-on-a-pod'
                                type: array
                                items:
                                  description: LocalObjectReference contains enough information to let you locate the referenced object inside the same namespace.
                                  type: object
                                  properties:
                                    name:
                                      description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                      type: string
                                x-kubernetes-patch-merge-key: name
                                x-kubernetes-patch-strategy: merge
                              initContainers:
                                description: 'List of initialization containers belonging to the pod. Init containers are executed in order prior to containers being started. If any init container fails, the pod is considered to have failed and is handled according to its restartPolicy. The name for an init container or normal container must be unique among all containers. Init containers may not have Lifecycle actions, Readiness probes, or Liveness probes. The resourceRequirements of an init container are taken into account during scheduling by finding the highest request/limit for each resource type, and then using the max of of that value or the sum of the normal containers. Limits are applied to init containers in a similar fashion. Init containers cannot currently be added or removed. Cannot be updated. More info: https://kubernetes.io/docs/concepts/workloads/pods/init-containers/'
                                type: array
                                items:
                                  description: A single application container that you want to run within a pod.
                                  type: object
                                  required:
                                    - name
                                    - image
                                  properties:
                                    args:
                                      description: 'Arguments to the entrypoint. The docker image''s CMD is used if this is not provided. Variable references $(VAR_NAME) are expanded using the container''s environment. If a variable cannot be resolved, the reference in the input string will be unchanged. The $(VAR_NAME) syntax can be escaped with a double $$, ie: $$(VAR_NAME). Escaped references will never be expanded, regardless of whether the variable exists or not. Cannot be updated. More info: https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell'
                                      type: array
                                      items:
                                        type: string
                                    command:
                                      description: 'Entrypoint array. Not executed within a shell. The docker image''s ENTRYPOINT is used if this is not provided. Variable references $(VAR_NAME) are expanded using the container''s environment. If a variable cannot be resolved, the reference in the input string will be unchanged. The $(VAR_NAME) syntax can be escaped with a double $$, ie: $$(VAR_NAME). Escaped references will never be expanded, regardless of whether the variable exists or not. Cannot be updated. More info: https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell'
                                      type: array
                                      items:
                                        type: string                              
                                    env:
                                      description: List of environment variables to set in the container. Cannot be updated.
                                      type: array
                                      items:
                                        description: EnvVar represents an environment variable present in a Container.
                                        type: object
                                        required:
                                          - name
                                        properties:
                                          name:
                                            description: Name of the environment variable. Must be a C_IDENTIFIER.
                                            type: string
                                          value:
                                            description: 'Variable references $(VAR_NAME) are expanded using the previous defined environment variables in the container and any service environment variables. If a variable cannot be resolved, the reference in the input string will be unchanged. The $(VAR_NAME) syntax can be escaped with a double $$, ie: $$(VAR_NAME). Escaped references will never be expanded, regardless of whether the variable exists or not. Defaults to "".'
                                            type: string
                                          valueFrom:
                                            description: EnvVarSource represents a source for the value of an EnvVar.
                                            type: object
                                            properties:
                                              configMapKeyRef:
                                                description: Selects a key from a ConfigMap.
                                                type: object
                                                required:
                                                  - key
                                                properties:
                                                  key:
                                                    description: The key to select.
                                                    type: string
                                                  name:
                                                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                                    type: string
                                                  optional:
                                                    description: Specify whether the ConfigMap or its key must be defined
                                                    type: boolean 
                                              fieldRef:
                                                description: ObjectFieldSelector selects an APIVersioned field of an object.
                                                type: object
                                                required:
                                                  - fieldPath
                                                properties:
                                                  apiVersion:
                                                    description: 'Version of the schema the FieldPath is written in terms of, defaults to "v1".'
                                                    type: string
                                                  fieldPath:
                                                    description: Path of the field to select in the specified API version.
                                                    type: string  
                                              resourceFieldRef:
                                                description: 'ResourceFieldSelector represents container resources (cpu, memory) and their output format'
                                                type: object
                                                required:
                                                  - resource
                                                properties:
                                                  containerName:
                                                    description: 'Container name: required for volumes, optional for env vars'
                                                    type: string
                                                  divisor:
                                                    description: 'Specifies the output format of the exposed resources, defaults to "1"'
                                                    type: string
                                                  resource:
                                                    description: 'Required: resource to select'
                                                    type: string
                                              secretKeyRef:
                                                description: SecretKeySelector selects a key of a Secret.
                                                type: object
                                                required:
                                                  - key
                                                properties:
                                                  key:
                                                    description: The key of the secret to select from.  Must be a valid secret key.
                                                    type: string
                                                  name:
                                                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                                    type: string
                                                  optional:
                                                    description: Specify whether the Secret or its key must be defined
                                                    type: boolean
                                      x-kubernetes-patch-merge-key: name
                                      x-kubernetes-patch-strategy: merge
                                    envFrom:
                                      description: 'List of sources to populate environment variables in the container. The keys defined within a source must be a C_IDENTIFIER. All invalid keys will be reported as an event when the container is starting. When a key exists in multiple sources, the value associated with the last source will take precedence. Values defined by an Env with a duplicate key will take precedence. Cannot be updated.'
                                      type: array
                                      items:
                                        description: EnvFromSource represents the source of a set of ConfigMaps
                                        type: object
                                        properties:
                                          configMapRef:
                                            description: |-
                                              ConfigMapEnvSource selects a ConfigMap to populate the environment variables with.
                
                                              The contents of the target ConfigMap's Data field will represent the key-value pairs as environment variables.
                                            type: object
                                            properties:
                                              name:
                                                description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                                type: string
                                              optional:
                                                description: Specify whether the ConfigMap must be defined
                                                type: boolean                      
                                          prefix:
                                            description: An optional identifier to prepend to each key in the ConfigMap. Must be a C_IDENTIFIER.
                                            type: string
                                          secretRef:
                                            description: |-
                                              SecretEnvSource selects a Secret to populate the environment variables with.
                
                                              The contents of the target Secret's Data field will represent the key-value pairs as environment variables.
                                            type: object
                                            properties:
                                              name:
                                                description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                                type: string
                                              optional:
                                                description: Specify whether the Secret must be defined
                                                type: boolean
                                    image:
                                      description: 'Docker image name. More info: https://kubernetes.io/docs/concepts/containers/images This field is optional to allow higher level config management to default or override container images in workload controllers like Deployments and StatefulSets.'
                                      type: string
                                    imagePullPolicy:
                                      description: 'Image pull policy. One of Always, Never, IfNotPresent. Defaults to Always if :latest tag is specified, or IfNotPresent otherwise. Cannot be updated. More info: https://kubernetes.io/docs/concepts/containers/images#updating-images'
                                      type: string
                                    lifecycle:
                                      description: 'Lifecycle describes actions that the management system should take in response to container lifecycle events. For the PostStart and PreStop lifecycle handlers, management of the container blocks until the action is complete, unless the container process fails, in which case the handler is aborted.'
                                      type: object
                                      properties:
                                        postStart:
                                          description: 'PostStart is called immediately after a container is created. If the handler fails, the container is terminated and restarted according to its restart policy. Other management of the container blocks until the hook completes. More info: https://kubernetes.io/docs/concepts/containers/container-lifecycle-hooks/#container-hooks'                    
                                          type: object
                                          properties:
                                            exec:
                                              description: ExecAction describes a "run in container" action.
                                              type: object
                                              properties:
                                                command:
                                                  description: 'Command is the command line to execute inside the container, the working directory for the command  is root (''/'') in the container''s filesystem. The command is simply exec''d, it is not run inside a shell, so traditional shell instructions (''|'', etc) won''t work. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy.'
                                                  type: array
                                                  items:
                                                    type: string
                                            httpGet:
                                              description: HTTPGetAction describes an action based on HTTP Get requests.
                                              type: object
                                              required:
                                                - port
                                              properties:
                                                host:
                                                  description: 'Host name to connect to, defaults to the pod IP. You probably want to set "Host" in httpHeaders instead.'
                                                  type: string
                                                httpHeaders:
                                                  description: Custom headers to set in the request. HTTP allows repeated headers.
                                                  type: array
                                                  items:
                                                    description: HTTPHeader describes a custom header to be used in HTTP probes
                                                    type: object
                                                    required:
                                                      - name
                                                      - value
                                                    properties:
                                                      name:
                                                        description: The header field name
                                                        type: string
                                                      value:
                                                        description: The header field value
                                                        type: string
                                                path:
                                                  description: Path to access on the HTTP server.
                                                  type: string
                                                port:
                                                  description: Name or number of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.
                                                  type: string
                                                scheme:
                                                  description: Scheme to use for connecting to the host. Defaults to HTTP.
                                                  type: string
                                            tcpSocket:
                                              description: TCPSocketAction describes an action based on opening a socket
                                              type: object
                                              required:
                                                - port
                                              properties:
                                                host:
                                                  description: 'Optional: Host name to connect to, defaults to the pod IP.'
                                                  type: string
                                                port:
                                                  description: Number or name of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.
                                                  type: string
                                        preStop:
                                          description: 'PreStop is called immediately before a container is terminated due to an API request or management event such as liveness/startup probe failure, preemption, resource contention, etc. The handler is not called if the container crashes or exits. The reason for termination is passed to the handler. The Pod''s termination grace period countdown begins before the PreStop hooked is executed. Regardless of the outcome of the handler, the container will eventually terminate within the Pod''s termination grace period. Other management of the container blocks until the hook completes or until the termination grace period is reached. More info: https://kubernetes.io/docs/concepts/containers/container-lifecycle-hooks/#container-hooks'
                                          type: object
                                          properties:
                                            exec:
                                              description: ExecAction describes a "run in container" action.
                                              type: object
                                              properties:
                                                command:
                                                  description: 'Command is the command line to execute inside the container, the working directory for the command  is root (''/'') in the container''s filesystem. The command is simply exec''d, it is not run inside a shell, so traditional shell instructions (''|'', etc) won''t work. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy.'
                                                  type: array
                                                  items:
                                                    type: string
                                            httpGet:
                                              description: HTTPGetAction describes an action based on HTTP Get requests.
                                              type: object
                                              required:
                                                - port
                                              properties:
                                                host:
                                                  description: 'Host name to connect to, defaults to the pod IP. You probably want to set "Host" in httpHeaders instead.'
                                                  type: string
                                                httpHeaders:
                                                  description: Custom headers to set in the request. HTTP allows repeated headers.
                                                  type: array
                                                  items:
                                                    description: HTTPHeader describes a custom header to be used in HTTP probes
                                                    type: object
                                                    required:
                                                      - name
                                                      - value
                                                    properties:
                                                      name:
                                                        description: The header field name
                                                        type: string
                                                      value:
                                                        description: The header field value
                                                        type: string
                                                path:
                                                  description: Path to access on the HTTP server.
                                                  type: string
                                                port:
                                                  description: Name or number of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.
                                                  type: string
                                                scheme:
                                                  description: Scheme to use for connecting to the host. Defaults to HTTP.
                                                  type: string
                                            tcpSocket:
                                              description: TCPSocketAction describes an action based on opening a socket
                                              type: object
                                              required:
                                                - port
                                              properties:
                                                host:
                                                  description: 'Optional: Host name to connect to, defaults to the pod IP.'
                                                  type: string
                                                port:
                                                  description: Number or name of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.
                                                  type: string
                                    livenessProbe:
                                      description: Probe describes a health check to be performed against a container to determine whether it is alive or ready to receive traffic.
                                      type: object
                                      properties:
                                        exec:
                                          description: ExecAction describes a "run in container" action.
                                          type: object
                                          properties:
                                            command:
                                              description: 'Command is the command line to execute inside the container, the working directory for the command  is root (''/'') in the container''s filesystem. The command is simply exec''d, it is not run inside a shell, so traditional shell instructions (''|'', etc) won''t work. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy.'
                                              type: array
                                              items:
                                                type: string
                                        failureThreshold:
                                          description: Minimum consecutive failures for the probe to be considered failed after having succeeded. Defaults to 3. Minimum value is 1.
                                          type: integer
                                        httpGet:
                                          description: HTTPGetAction describes an action based on HTTP Get requests.
                                          type: object
                                          required:
                                            - port
                                          properties:
                                            host:
                                              description: 'Host name to connect to, defaults to the pod IP. You probably want to set "Host" in httpHeaders instead.'
                                              type: string
                                            httpHeaders:
                                              description: Custom headers to set in the request. HTTP allows repeated headers.
                                              type: array
                                              items:
                                                description: HTTPHeader describes a custom header to be used in HTTP probes
                                                type: object
                                                required:
                                                  - name
                                                  - value
                                                properties:
                                                  name:
                                                    description: The header field name
                                                    type: string
                                                  value:
                                                    description: The header field value
                                                    type: string
                                            path:
                                              description: Path to access on the HTTP server.
                                              type: string
                                            port:
                                              description: Name or number of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.
                                              type: string
                                            scheme:
                                              description: Scheme to use for connecting to the host. Defaults to HTTP.
                                              type: string
                                        initialDelaySeconds:
                                          description: 'Number of seconds after the container has started before liveness probes are initiated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                                          type: integer
                                        periodSeconds:
                                          description: How often (in seconds) to perform the probe. Default to 10 seconds. Minimum value is 1.
                                          type: integer
                                        successThreshold:
                                          description: Minimum consecutive successes for the probe to be considered successful after having failed. Defaults to 1. Must be 1 for liveness and startup. Minimum value is 1.
                                          type: integer
                                        tcpSocket:
                                          description: TCPSocketAction describes an action based on opening a socket
                                          type: object
                                          required:
                                            - port
                                          properties:
                                            host:
                                              description: 'Optional: Host name to connect to, defaults to the pod IP.'
                                              type: string
                                            port:
                                              description: Number or name of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.
                                              type: string
                                        timeoutSeconds:
                                          description: 'Number of seconds after which the probe times out. Defaults to 1 second. Minimum value is 1. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                                          type: integer                
                                    name:
                                      description: Name of the container specified as a DNS_LABEL. Each container in a pod must have a unique name (DNS_LABEL). Cannot be updated.
                                      type: string
                                    ports:
                                      description: 'List of ports to expose from the container. Exposing a port here gives the system additional information about the network connections a container uses, but is primarily informational. Not specifying a port here DOES NOT prevent that port from being exposed. Any port which is listening on the default "0.0.0.0" address inside a container will be accessible from the network. Cannot be updated.'
                                      type: array
                                      items:
                                        description: ContainerPort represents a network port in a single container.
                                        type: object
                                        required:
                                          - containerPort
                                        properties:
                                          containerPort:
                                            description: 'Number of port to expose on the pod''s IP address. This must be a valid port number, 0 < x < 65536.'
                                            type: integer
                                          hostIP:
                                            description: What host IP to bind the external port to.
                                            type: string
                                          hostPort:
                                            description: 'Number of port to expose on the host. If specified, this must be a valid port number, 0 < x < 65536. If HostNetwork is specified, this must match ContainerPort. Most containers do not need this.'
                                            type: integer
                                          name:
                                            description: 'If specified, this must be an IANA_SVC_NAME and unique within the pod. Each named port in a pod must have a unique name. Name for the port that can be referred to by services.'
                                            type: string
                                          protocol:
                                            description: 'Protocol for port. Must be UDP, TCP, or SCTP. Defaults to "TCP".'
                                            type: string                                
                                      x-kubernetes-patch-merge-key: containerPort
                                      x-kubernetes-patch-strategy: merge
                                    readinessProbe:
                                      description: Probe describes a health check to be performed against a container to determine whether it is alive or ready to receive traffic.
                                      type: object
                                      properties:
                                        exec:
                                          description: ExecAction describes a "run in container" action.
                                          type: object
                                          properties:
                                            command:
                                              description: 'Command is the command line to execute inside the container, the working directory for the command  is root (''/'') in the container''s filesystem. The command is simply exec''d, it is not run inside a shell, so traditional shell instructions (''|'', etc) won''t work. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy.'
                                              type: array
                                              items:
                                                type: string
                                        failureThreshold:
                                          description: Minimum consecutive failures for the probe to be considered failed after having succeeded. Defaults to 3. Minimum value is 1.
                                          type: integer
                                        httpGet:
                                          description: HTTPGetAction describes an action based on HTTP Get requests.
                                          type: object
                                          required:
                                            - port
                                          properties:
                                            host:
                                              description: 'Host name to connect to, defaults to the pod IP. You probably want to set "Host" in httpHeaders instead.'
                                              type: string
                                            httpHeaders:
                                              description: Custom headers to set in the request. HTTP allows repeated headers.
                                              type: array
                                              items:
                                                description: HTTPHeader describes a custom header to be used in HTTP probes
                                                type: object
                                                required:
                                                  - name
                                                  - value
                                                properties:
                                                  name:
                                                    description: The header field name
                                                    type: string
                                                  value:
                                                    description: The header field value
                                                    type: string
                                            path:
                                              description: Path to access on the HTTP server.
                                              type: string
                                            port:
                                              description: Name or number of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.
                                              type: string
                                            scheme:
                                              description: Scheme to use for connecting to the host. Defaults to HTTP.
                                              type: string
                                        initialDelaySeconds:
                                          description: 'Number of seconds after the container has started before liveness probes are initiated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                                          type: integer
                                        periodSeconds:
                                          description: How often (in seconds) to perform the probe. Default to 10 seconds. Minimum value is 1.
                                          type: integer
                                        successThreshold:
                                          description: Minimum consecutive successes for the probe to be considered successful after having failed. Defaults to 1. Must be 1 for liveness and startup. Minimum value is 1.
                                          type: integer
                                        tcpSocket:
                                          description: TCPSocketAction describes an action based on opening a socket
                                          type: object
                                          required:
                                            - port
                                          properties:
                                            host:
                                              description: 'Optional: Host name to connect to, defaults to the pod IP.'
                                              type: string
                                            port:
                                              description: Number or name of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.
                                              type: string
                                        timeoutSeconds:
                                          description: 'Number of seconds after which the probe times out. Defaults to 1 second. Minimum value is 1. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                                          type: integer
                                    resources:
                                      description: ResourceRequirements describes the compute resource requirements.
                                      type: object
                                      properties:
                                        limits:
                                          description: 'Limits describes the maximum amount of compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/'
                                          type: object
                                          additionalProperties:
                                            description: Quantity is a fixed-point representation of a number. It provides convenient marshaling/unmarshaling in JSON and YAML, in addition to String() and AsInt64() accessors.
                                            type: string
                                        requests:
                                          description: 'Requests describes the minimum amount of compute resources required. If Requests is omitted for a container, it defaults to Limits if that is explicitly specified, otherwise to an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/'
                                          type: object
                                          additionalProperties:
                                            description: Quantity is a fixed-point representation of a number. It provides convenient marshaling/unmarshaling in JSON and YAML, in addition to String() and AsInt64() accessors.
                                            type: string
                                    securityContext:
                                      description: 'SecurityContext holds security configuration that will be applied to a container. Some fields are present in both SecurityContext and PodSecurityContext.  When both are set, the values in SecurityContext take precedence.'
                                      type: object
                                      properties:
                                        allowPrivilegeEscalation:
                                          description: 'AllowPrivilegeEscalation controls whether a process can gain more privileges than its parent process. This bool directly controls if the no_new_privs flag will be set on the container process. AllowPrivilegeEscalation is true always when the container is: 1) run as Privileged 2) has CAP_SYS_ADMIN'
                                          type: boolean
                                        capabilities:
                                          description: Adds and removes POSIX capabilities from running containers.
                                          type: object
                                          properties:
                                            add:
                                              description: Added capabilities
                                              type: array
                                              items:
                                                type: string
                                            drop:
                                              description: Removed capabilities
                                              type: array
                                              items:
                                                type: string
                                        privileged:
                                          description: Run container in privileged mode. Processes in privileged containers are essentially equivalent to root on the host. Defaults to false.
                                          type: boolean
                                        procMount:
                                          description: procMount denotes the type of proc mount to use for the containers. The default is DefaultProcMount which uses the container runtime defaults for readonly paths and masked paths. This requires the ProcMountType feature flag to be enabled.
                                          type: string
                                        readOnlyRootFilesystem:
                                          description: Whether this container has a read-only root filesystem. Default is false.
                                          type: boolean
                                        runAsGroup:
                                          description: 'The GID to run the entrypoint of the container process. Uses runtime default if unset. May also be set in PodSecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.'
                                          type: integer
                                        runAsNonRoot:
                                          description: 'Indicates that the container must run as a non-root user. If true, the Kubelet will validate the image at runtime to ensure that it does not run as UID 0 (root) and fail to start the container if it does. If unset or false, no such validation will be performed. May also be set in PodSecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.'
                                          type: boolean
                                        runAsUser:
                                          description: 'The UID to run the entrypoint of the container process. Defaults to user specified in image metadata if unspecified. May also be set in PodSecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.'
                                          type: integer
                                        seLinuxOptions:
                                          description: SELinuxOptions are the labels to be applied to the container
                                          type: object
                                          properties:
                                            level:
                                              description: Level is SELinux level label that applies to the container.
                                              type: string
                                            role:
                                              description: Role is a SELinux role label that applies to the container.
                                              type: string
                                            type:
                                              description: Type is a SELinux type label that applies to the container.
                                              type: string
                                            user:
                                              description: User is a SELinux user label that applies to the container.
                                              type: string
                                        windowsOptions:
                                          description: WindowsSecurityContextOptions contain Windows-specific options and credentials.
                                          type: object
                                          properties:
                                            gmsaCredentialSpec:
                                              description: 'GMSACredentialSpec is where the GMSA admission webhook (https://github.com/kubernetes-sigs/windows-gmsa) inlines the contents of the GMSA credential spec named by the GMSACredentialSpecName field. This field is alpha-level and is only honored by servers that enable the WindowsGMSA feature flag.'
                                              type: string
                                            gmsaCredentialSpecName:
                                              description: GMSACredentialSpecName is the name of the GMSA credential spec to use. This field is alpha-level and is only honored by servers that enable the WindowsGMSA feature flag.
                                              type: string
                                            runAsUserName:
                                              description: 'The UserName in Windows to run the entrypoint of the container process. Defaults to the user specified in image metadata if unspecified. May also be set in PodSecurityContext. If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence. This field is beta-level and may be disabled with the WindowsRunAsUserName feature flag.'
                                              type: string                               
                                    stdin:
                                      description: 'Whether this container should allocate a buffer for stdin in the container runtime. If this is not set, reads from stdin in the container will always result in EOF. Default is false.'
                                      type: boolean
                                    stdinOnce:
                                      description: 'Whether the container runtime should close the stdin channel after it has been opened by a single attach. When stdin is true the stdin stream will remain open across multiple attach sessions. If stdinOnce is set to true, stdin is opened on container start, is empty until the first client attaches to stdin, and then remains open and accepts data until the client disconnects, at which time stdin is closed and remains closed until the container is restarted. If this flag is false, a container processes that reads from stdin will never receive an EOF. Default is false'
                                      type: boolean
                                    terminationMessagePath:
                                      description: 'Optional: Path at which the file to which the container''s termination message will be written is mounted into the container''s filesystem. Message written is intended to be brief final status, such as an assertion failure message. Will be truncated by the node if greater than 4096 bytes. The total message length across all containers will be limited to 12kb. Defaults to /dev/termination-log. Cannot be updated.'
                                      type: string
                                    terminationMessagePolicy:
                                      description: 'Indicate how the termination message should be populated. File will use the contents of terminationMessagePath to populate the container status message on both success and failure. FallbackToLogsOnError will use the last chunk of container log output if the termination message file is empty and the container exited with an error. The log output is limited to 2048 bytes or 80 lines, whichever is smaller. Defaults to File. Cannot be updated.'
                                      type: string
                                    tty:
                                      description: 'Whether this container should allocate a TTY for itself, also requires ''stdin'' to be true. Default is false.'
                                      type: boolean                              
                                    volumeMounts:
                                      description: Pod volumes to mount into the container's filesystem. Cannot be updated.
                                      type: array
                                      items:
                                        description: VolumeMount describes a mounting of a Volume within a container.
                                        type: object
                                        required:
                                          - name
                                          - mountPath
                                        properties:
                                          mountPath:
                                            description: 'Path within the container at which the volume should be mounted.  Must not contain '':''.'
                                            type: string
                                          mountPropagation:
                                            description: 'mountPropagation determines how mounts are propagated from the host to container and the other way around. When not set, MountPropagationNone is used. This field is beta in 1.10.'
                                            type: string
                                          name:
                                            description: This must match the Name of a Volume.
                                            type: string
                                          readOnly:
                                            description: 'Mounted read-only if true, read-write otherwise (false or unspecified). Defaults to false.'
                                            type: boolean
                                          subPath:
                                            description: Path within the volume from which the container's volume should be mounted. Defaults to "" (volume's root).
                                            type: string
                                          subPathExpr:
                                            description: Expanded path within the volume from which the container's volume should be mounted. Behaves similarly to SubPath but environment variable references $(VAR_NAME) are expanded using the container's environment. Defaults to "" (volume's root). SubPathExpr and SubPath are mutually exclusive.
                                            type: string
                                      x-kubernetes-patch-merge-key: mountPath
                                      x-kubernetes-patch-strategy: merge
                                    workingDir:
                                      description: 'Container''s working directory. If not specified, the container runtime''s default will be used, which might be configured in the container image. Cannot be updated.'
                                      type: string
                                x-kubernetes-patch-merge-key: name
                                x-kubernetes-patch-strategy: merge
                              nodeName:
                                description: 'NodeName is a request to schedule this pod onto a specific node. If it is non-empty, the scheduler simply schedules this pod onto that node, assuming that it fits resource requirements.'
                                type: string
                              nodeSelector:
                                description: 'NodeSelector is a selector which must be true for the pod to fit on a node. Selector which must match a node''s labels for the pod to be scheduled on that node. More info: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/'
                                type: object
                                additionalProperties:
                                  type: string
                              restartPolicy:
                                description: 'Restart policy for all containers within the pod. One of Always, OnFailure, Never. Default to Always. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle/#restart-policy'
                                type: string
                              schedulerName:
                                description: 'If specified, the pod will be dispatched by specified scheduler. If not specified, the pod will be dispatched by default scheduler.'
                                type: string
                              securityContext:
                                description: PodSecurityContext holds pod-level security attributes and common container settings. Some fields are also present in container.securityContext.  Field values of container.securityContext take precedence over field values of PodSecurityContext.
                                type: object
                                properties:
                                  fsGroup:
                                    description: |-
                                      A special supplemental group that applies to all containers in a pod. Some volume types allow the Kubelet to change the ownership of that volume to be owned by the pod:

                                      1. The owning GID will be the FSGroup 2. The setgid bit is set (new files created in the volume will be owned by FSGroup) 3. The permission bits are OR'd with rw-rw----

                                      If unset, the Kubelet will not modify the ownership and permissions of any volume.
                                    type: integer
                                    format: int64
                                  runAsNonRoot:
                                    description: 'Indicates that the container must run as a non-root user. If true, the Kubelet will validate the image at runtime to ensure that it does not run as UID 0 (root) and fail to start the container if it does. If unset or false, no such validation will be performed. May also be set in SecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.'
                                    type: boolean
                                  runAsUser:
                                    description: 'The UID to run the entrypoint of the container process. Defaults to user specified in image metadata if unspecified. May also be set in SecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence for that container.'
                                    type: integer
                                    format: int64
                                  seLinuxOptions:
                                    description: SELinuxOptions are the labels to be applied to the container
                                    type: object
                                    properties:
                                      level:
                                        description: Level is SELinux level label that applies to the container.
                                        type: string
                                      role:
                                        description: Role is a SELinux role label that applies to the container.
                                        type: string
                                      type:
                                        description: Type is a SELinux type label that applies to the container.
                                        type: string
                                      user:
                                        description: User is a SELinux user label that applies to the container.
                                        type: string
                                  supplementalGroups:
                                    description: 'A list of groups applied to the first process run in each container, in addition to the container''s primary GID.  If unspecified, no groups will be added to any container.'
                                    type: array
                                    items:
                                      type: integer
                                      format: int64
                              serviceAccount:
                                description: 'DeprecatedServiceAccount is a depreciated alias for ServiceAccountName. Deprecated: Use serviceAccountName instead.'
                                type: string
                              serviceAccountName:
                                description: 'ServiceAccountName is the name of the ServiceAccount to use to run this pod. More info: https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/'
                                type: string
                              subdomain:
                                description: 'If specified, the fully qualified Pod hostname will be "<hostname>.<subdomain>.<pod namespace>.svc.<cluster domain>". If not specified, the pod will not have a domainname at all.'
                                type: string
                              terminationGracePeriodSeconds:
                                description: 'Optional duration in seconds the pod needs to terminate gracefully. May be decreased in delete request. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period will be used instead. The grace period is the duration in seconds after the processes running in the pod are sent a termination signal and the time when the processes are forcibly halted with a kill signal. Set this value longer than the expected cleanup time for your process. Defaults to 30 seconds.'
                                type: integer
                                format: int64
                              tolerations:
                                description: 'If specified, the pod''s tolerations.'
                                type: array
                                items:
                                  description: 'The pod this Toleration is attached to tolerates any taint that matches the triple <key,value,effect> using the matching operator <operator>.'
                                  type: object
                                  properties:
                                    effect:
                                      description: 'Effect indicates the taint effect to match. Empty means match all taint effects. When specified, allowed values are NoSchedule, PreferNoSchedule and NoExecute.'
                                      type: string
                                    key:
                                      description: 'Key is the taint key that the toleration applies to. Empty means match all taint keys. If the key is empty, operator must be Exists; this combination means to match all values and all keys.'
                                      type: string
                                      x-kubernetes-patch-merge-key: key
                                      x-kubernetes-patch-strategy: merge
                                    operator:
                                      description: 'Operator represents a key''s relationship to the value. Valid operators are Exists and Equal. Defaults to Equal. Exists is equivalent to wildcard for value, so that a pod can tolerate all taints of a particular category.'
                                      type: string
                                    tolerationSeconds:
                                      description: 'TolerationSeconds represents the period of time the toleration (which must be of effect NoExecute, otherwise this field is ignored) tolerates the taint. By default, it is not set, which means tolerate the taint forever (do not evict). Zero and negative values will be treated as 0 (evict immediately) by the system.'
                                      type: integer
                                      format: int64
                                    value:
                                      description: 'Value is the taint value the toleration matches to. If the operator is Exists, the value should be empty, otherwise just a regular string.'
                                      type: string
                              volumes:
                                description: 'List of volumes that can be mounted by containers belonging to the pod. More info: https://kubernetes.io/docs/concepts/storage/volumes'
                                type: array
                                items:
                                  description: Volume represents a named volume in a pod that may be accessed by any container in the pod.
                                  type: object
                                  required:
                                    - name
                                  properties:
                                    awsElasticBlockStore:
                                      description: |-
                                        Represents a Persistent Disk resource in AWS.
                                  
                                        An AWS EBS disk must exist before mounting to a container. The disk must also be in the same AWS zone as the kubelet. An AWS EBS disk can only be mounted as read/write once. AWS EBS volumes support ownership management and SELinux relabeling.
                                      type: object
                                      required:
                                        - volumeID
                                      properties:
                                        fsType:
                                          description: 'Filesystem type of the volume that you want to mount. Tip: Ensure that the filesystem type is supported by the host operating system. Examples: "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified. More info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore'
                                          type: string
                                        partition:
                                          description: 'The partition in the volume that you want to mount. If omitted, the default is to mount by volume name. Examples: For volume /dev/sda1, you specify the partition as "1". Similarly, the volume partition for /dev/sda is "0" (or you can leave the property empty).'
                                          type: integer
                                        readOnly:
                                          description: 'Specify "true" to force and set the ReadOnly property in VolumeMounts to "true". If omitted, the default is "false". More info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore'
                                          type: boolean
                                        volumeID:
                                          description: 'Unique ID of the persistent disk resource in AWS (Amazon EBS volume). More info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore'
                                          type: string
                                    azureDisk:
                                      description: AzureDisk represents an Azure Data Disk mount on the host and bind mount to the pod.
                                      type: object
                                      required:
                                        - diskName
                                        - diskURI
                                      properties:
                                        cachingMode:
                                          description: 'Host Caching mode: None, Read Only, Read Write.'
                                          type: string
                                        diskName:
                                          description: The Name of the data disk in the blob storage
                                          type: string
                                        diskURI:
                                          description: The URI the data disk in the blob storage
                                          type: string
                                        fsType:
                                          description: 'Filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.'
                                          type: string
                                        kind:
                                          description: 'Expected values Shared: multiple blob disks per storage account  Dedicated: single blob disk per storage account  Managed: azure managed data disk (only in managed availability set). defaults to shared'
                                          type: string
                                        readOnly:
                                          description: Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.
                                          type: boolean
                                    azureFile:
                                      description: AzureFile represents an Azure File Service mount on the host and bind mount to the pod.
                                      type: object
                                      required:
                                        - secretName
                                        - shareName
                                      properties:
                                        readOnly:
                                          description: Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.
                                          type: boolean
                                        secretName:
                                          description: the name of secret that contains Azure Storage Account Name and Key
                                          type: string
                                        shareName:
                                          description: Share Name
                                          type: string
                                    cephfs:
                                      description: Represents a Ceph Filesystem mount that lasts the lifetime of a pod Cephfs volumes do not support ownership management or SELinux relabeling.
                                      type: object
                                      required:
                                        - monitors
                                      properties:
                                        monitors:
                                          description: 'Required: Monitors is a collection of Ceph monitors More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it'
                                          type: array
                                          items:
                                            type: string
                                        path:
                                          description: 'Optional: Used as the mounted root, rather than the full Ceph tree, default is /'
                                          type: string
                                        readOnly:
                                          description: 'Optional: Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts. More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it'
                                          type: boolean
                                        secretFile:
                                          description: 'Optional: SecretFile is the path to key ring for User, default is /etc/ceph/user.secret More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it'
                                          type: string
                                        secretRef:
                                          description: 'Optional: SecretRef is reference to the authentication secret for User, default is empty. More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it'
                                          type: object
                                          properties:
                                            name:
                                              description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                              type: string
                                        user:
                                          description: 'Optional: User is the rados user name, default is admin More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it'
                                          type: string
                                    cinder:
                                      description: Represents a cinder volume resource in Openstack. A Cinder volume must exist before mounting to a container. The volume must also be in the same region as the kubelet. Cinder volumes support ownership management and SELinux relabeling.
                                      type: object
                                      required:
                                        - volumeID
                                      properties:
                                        fsType:
                                          description: 'Filesystem type to mount. Must be a filesystem type supported by the host operating system. Examples: "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified. More info: https://examples.k8s.io/mysql-cinder-pd/README.md'
                                          type: string
                                        readOnly:
                                          description: 'Optional: Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts. More info: https://examples.k8s.io/mysql-cinder-pd/README.md'
                                          type: boolean
                                        secretRef:
                                          description: 'Optional: points to a secret object containing parameters used to connect to OpenStack.'
                                          type: object
                                          properties:
                                            name:
                                              description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                              type: string
                                        volumeID:
                                          description: 'volume id used to identify the volume in cinder. More info: https://examples.k8s.io/mysql-cinder-pd/README.md'
                                          type: string
                                    configMap:
                                      description: |-
                                        Adapts a ConfigMap into a volume.
                                  
                                        The contents of the target ConfigMap's Data field will be presented in a volume as files using the keys in the Data field as the file names, unless the items element is populated with specific mappings of keys to paths. ConfigMap volumes support ownership management and SELinux relabeling.
                                      type: object
                                      properties:
                                        defaultMode:
                                          description: 'Optional: mode bits to use on created files by default. Must be a value between 0 and 0777. Defaults to 0644. Directories within the path are not affected by this setting. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.'
                                          type: integer
                                        items:
                                          description: 'If unspecified, each key-value pair in the Data field of the referenced ConfigMap will be projected into the volume as a file whose name is the key and content is the value. If specified, the listed keys will be projected into the specified paths, and unlisted keys will not be present. If a key is specified which is not present in the ConfigMap, the volume setup will error unless it is marked optional. Paths must be relative and may not contain the ''..'' path or start with ''..''.'
                                          type: array
                                          items:
                                            description: Maps a string key to a path within a volume.
                                            type: object
                                            required:
                                              - key
                                              - path
                                            properties:
                                              key:
                                                description: The key to project.
                                                type: string
                                              mode:
                                                description: 'Optional: mode bits to use on this file, must be a value between 0 and 0777. If not specified, the volume defaultMode will be used. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.'
                                                type: integer
                                              path:
                                                description: The relative path of the file to map the key to. May not be an absolute path. May not contain the path element '..'. May not start with the string '..'.
                                                type: string
                                        name:
                                          description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                          type: string
                                        optional:
                                          description: Specify whether the ConfigMap or its keys must be defined
                                          type: boolean                              
                                    downwardAPI:
                                      description: DownwardAPIVolumeSource represents a volume containing downward API info. Downward API volumes support ownership management and SELinux relabeling.
                                      type: object
                                      properties:
                                        defaultMode:
                                          description: 'Optional: mode bits to use on created files by default. Must be a value between 0 and 0777. Defaults to 0644. Directories within the path are not affected by this setting. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.'
                                          type: integer
                                        items:
                                          description: Items is a list of downward API volume file
                                          type: array
                                          items:
                                            description: DownwardAPIVolumeFile represents information to create the file containing the pod field
                                            type: object
                                            required:
                                              - path
                                            properties:
                                              fieldRef:
                                                description: 'Required: Selects a field of the pod: only annotations, labels, name and namespace are supported.'
                                                type: object
                                                required:
                                                  - fieldPath
                                                properties:
                                                  apiVersion:
                                                    description: 'Version of the schema the FieldPath is written in terms of, defaults to "v1".'
                                                    type: string
                                                  fieldPath:
                                                    description: Path of the field to select in the specified API version.
                                                    type: string
                                              mode:
                                                description: 'Optional: mode bits to use on this file, must be a value between 0 and 0777. If not specified, the volume defaultMode will be used. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.'
                                                type: integer
                                              path:
                                                description: 'Required: Path is  the relative path name of the file to be created. Must not be absolute or contain the ''..'' path. Must be utf-8 encoded. The first item of the relative path must not start with ''..'''
                                                type: string
                                              resourceFieldRef:
                                                description: 'Selects a resource of the container: only resources limits and requests (limits.cpu, limits.memory, requests.cpu and requests.memory) are currently supported.'
                                                type: object
                                                required:
                                                  - resource
                                                properties:
                                                  containerName:
                                                    description: 'Container name: required for volumes, optional for env vars'
                                                    type: string
                                                  divisor:
                                                    description: 'Specifies the output format of the exposed resources, defaults to "1"'
                                                    type: string
                                                  resource:
                                                    description: 'Required: resource to select'
                                                    type: string
                                    emptyDir:
                                      description: Represents an empty directory for a pod. Empty directory volumes support ownership management and SELinux relabeling.
                                      type: object
                                      properties:
                                        medium:
                                          description: 'What type of storage medium should back this directory. The default is "" which means to use the node''s default medium. Must be an empty string (default) or Memory. More info: https://kubernetes.io/docs/concepts/storage/volumes#emptydir'
                                          type: string
                                        sizeLimit:
                                          description: 'Total amount of local storage required for this EmptyDir volume. The size limit is also applicable for memory medium. The maximum usage on memory medium EmptyDir would be the minimum value between the SizeLimit specified here and the sum of memory limits of all containers in a pod. The default is nil which means that the limit is undefined. More info: http://kubernetes.io/docs/user-guide/volumes#emptydir'
                                          type: string
                                    fc:
                                      description: Represents a Fibre Channel volume. Fibre Channel volumes can only be mounted as read/write once. Fibre Channel volumes support ownership management and SELinux relabeling.
                                      type: object
                                      properties:
                                        fsType:
                                          description: 'Filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.'
                                          type: string
                                        lun:
                                          description: 'Optional: FC target lun number'
                                          type: integer
                                        readOnly:
                                          description: 'Optional: Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.'
                                          type: boolean
                                        targetWWNs:
                                          description: 'Optional: FC target worldwide names (WWNs)'
                                          type: array
                                          items:
                                            type: string
                                        wwids:
                                          description: 'Optional: FC volume world wide identifiers (wwids) Either wwids or combination of targetWWNs and lun must be set, but not both simultaneously.'
                                          type: array
                                          items:
                                            type: string
                                    flexVolume:
                                      description: FlexVolume represents a generic volume resource that is provisioned/attached using an exec based plugin.
                                      type: object
                                      required:
                                        - driver
                                      properties:
                                        driver:
                                          description: Driver is the name of the driver to use for this volume.
                                          type: string
                                        fsType:
                                          description: 'Filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. "ext4", "xfs", "ntfs". The default filesystem depends on FlexVolume script.'
                                          type: string
                                        options:
                                          description: 'Optional: Extra command options if any.'
                                          type: object
                                          additionalProperties:
                                            type: string
                                        readOnly:
                                          description: 'Optional: Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.'
                                          type: boolean
                                        secretRef:
                                          description: 'Optional: SecretRef is reference to the secret object containing sensitive information to pass to the plugin scripts. This may be empty if no secret object is specified. If the secret object contains more than one secret, all secrets are passed to the plugin scripts.'
                                          type: object
                                          properties:
                                            name:
                                              description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                              type: string
                                    flocker:
                                      description: Represents a Flocker volume mounted by the Flocker agent. One and only one of datasetName and datasetUUID should be set. Flocker volumes do not support ownership management or SELinux relabeling.
                                      type: object
                                      properties:
                                        datasetName:
                                          description: Name of the dataset stored as metadata -> name on the dataset for Flocker should be considered as deprecated
                                          type: string
                                        datasetUUID:
                                          description: UUID of the dataset. This is unique identifier of a Flocker dataset
                                          type: string
                                    gcePersistentDisk:
                                      description: |-
                                        Represents a Persistent Disk resource in Google Compute Engine.
                                        A GCE PD must exist before mounting to a container. The disk must also be in the same GCE project and zone as the kubelet. A GCE PD can only be mounted as read/write once or read-only many times. GCE PDs support ownership management and SELinux relabeling.
                                      type: object
                                      required:
                                        - pdName
                                      properties:
                                        fsType:
                                          description: 'Filesystem type of the volume that you want to mount. Tip: Ensure that the filesystem type is supported by the host operating system. Examples: "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified. More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk'
                                          type: string
                                        partition:
                                          description: 'The partition in the volume that you want to mount. If omitted, the default is to mount by volume name. Examples: For volume /dev/sda1, you specify the partition as "1". Similarly, the volume partition for /dev/sda is "0" (or you can leave the property empty). More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk'
                                          type: integer
                                        pdName:
                                          description: 'Unique name of the PD resource in GCE. Used to identify the disk in GCE. More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk'
                                          type: string
                                        readOnly:
                                          description: 'ReadOnly here will force the ReadOnly setting in VolumeMounts. Defaults to false. More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk'
                                          type: boolean
                                    gitRepo:
                                      description: |-
                                        Represents a volume that is populated with the contents of a git repository. Git repo volumes do not support ownership management. Git repo volumes support SELinux relabeling.
                                  
                                        DEPRECATED: GitRepo is deprecated. To provision a container with a git repo, mount an EmptyDir into an InitContainer that clones the repo using git, then mount the EmptyDir into the Pod's container.
                                      type: object
                                      required:
                                        - repository
                                      properties:
                                        directory:
                                          description: 'Target directory name. Must not contain or start with ''..''.  If ''.'' is supplied, the volume directory will be the git repository.  Otherwise, if specified, the volume will contain the git repository in the subdirectory with the given name.'
                                          type: string
                                        repository:
                                          description: Repository URL
                                          type: string
                                        revision:
                                          description: Commit hash for the specified revision.
                                          type: string
                                    glusterfs:
                                      description: Represents a Glusterfs mount that lasts the lifetime of a pod. Glusterfs volumes do not support ownership management or SELinux relabeling.
                                      type: object
                                      required:
                                        - endpoints
                                        - path
                                      properties:
                                        endpoints:
                                          description: 'EndpointsName is the endpoint name that details Glusterfs topology. More info: https://examples.k8s.io/volumes/glusterfs/README.md#create-a-pod'
                                          type: string
                                        path:
                                          description: 'Path is the Glusterfs volume path. More info: https://examples.k8s.io/volumes/glusterfs/README.md#create-a-pod'
                                          type: string
                                        readOnly:
                                          description: 'ReadOnly here will force the Glusterfs volume to be mounted with read-only permissions. Defaults to false. More info: https://examples.k8s.io/volumes/glusterfs/README.md#create-a-pod'
                                          type: boolean
                                    hostPath:
                                      description: Represents a host path mapped into a pod. Host path volumes do not support ownership management or SELinux relabeling.
                                      type: object
                                      required:
                                        - path
                                      properties:
                                        path:
                                          description: 'Path of the directory on the host. If the path is a symlink, it will follow the link to the real path. More info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath'
                                          type: string
                                        type:
                                          description: 'Type for HostPath Volume Defaults to "" More info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath'
                                          type: string
                                    iscsi:
                                      description: Represents an ISCSI disk. ISCSI volumes can only be mounted as read/write once. ISCSI volumes support ownership management and SELinux relabeling.
                                      type: object
                                      required:
                                        - targetPortal
                                        - iqn
                                        - lun
                                      properties:
                                        chapAuthDiscovery:
                                          description: whether support iSCSI Discovery CHAP authentication
                                          type: boolean
                                        chapAuthSession:
                                          description: whether support iSCSI Session CHAP authentication
                                          type: boolean
                                        fsType:
                                          description: 'Filesystem type of the volume that you want to mount. Tip: Ensure that the filesystem type is supported by the host operating system. Examples: "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified. More info: https://kubernetes.io/docs/concepts/storage/volumes#iscsi'
                                          type: string
                                        initiatorName:
                                          description: 'Custom iSCSI Initiator Name. If initiatorName is specified with iscsiInterface simultaneously, new iSCSI interface <target portal>:<volume name> will be created for the connection.'
                                          type: string
                                        iqn:
                                          description: Target iSCSI Qualified Name.
                                          type: string
                                        iscsiInterface:
                                          description: iSCSI Interface Name that uses an iSCSI transport. Defaults to 'default' (tcp).
                                          type: string
                                        lun:
                                          description: iSCSI Target Lun number.
                                          type: integer
                                        portals:
                                          description: 'iSCSI Target Portal List. The portal is either an IP or ip_addr:port if the port is other than default (typically TCP ports 860 and 3260).'
                                          type: array
                                          items:
                                            type: string
                                        readOnly:
                                          description: ReadOnly here will force the ReadOnly setting in VolumeMounts. Defaults to false.
                                          type: boolean
                                        secretRef:
                                          description: CHAP Secret for iSCSI target and initiator authentication
                                          type: object
                                          properties:
                                            name:
                                              description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                              type: string
                                        targetPortal:
                                          description: 'iSCSI Target Portal. The Portal is either an IP or ip_addr:port if the port is other than default (typically TCP ports 860 and 3260).'
                                          type: string
                                    name:
                                      description: 'Volume''s name. Must be a DNS_LABEL and unique within the pod. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                      type: string
                                    nfs:
                                      description: Represents an NFS mount that lasts the lifetime of a pod. NFS volumes do not support ownership management or SELinux relabeling.
                                      type: object
                                      required:
                                        - server
                                        - path
                                      properties:
                                        path:
                                          description: 'Path that is exported by the NFS server. More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs'
                                          type: string
                                        readOnly:
                                          description: 'ReadOnly here will force the NFS export to be mounted with read-only permissions. Defaults to false. More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs'
                                          type: boolean
                                        server:
                                          description: 'Server is the hostname or IP address of the NFS server. More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs'
                                          type: string
                                    persistentVolumeClaim:
                                      description: 'PersistentVolumeClaimVolumeSource references the user''s PVC in the same namespace. This volume finds the bound PV and mounts that volume for the pod. A PersistentVolumeClaimVolumeSource is, essentially, a wrapper around another type of volume that is owned by someone else (the system).'
                                      type: object
                                      required:
                                        - claimName
                                      properties:
                                        claimName:
                                          description: 'ClaimName is the name of a PersistentVolumeClaim in the same namespace as the pod using this volume. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims'
                                          type: string
                                        readOnly:
                                          description: Will force the ReadOnly setting in VolumeMounts. Default false.
                                          type: boolean
                                    photonPersistentDisk:
                                      description: Represents a Photon Controller persistent disk resource.
                                      type: object
                                      required:
                                        - pdID
                                      properties:
                                        fsType:
                                          description: 'Filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.'
                                          type: string
                                        pdID:
                                          description: ID that identifies Photon Controller persistent disk
                                          type: string
                                    portworxVolume:
                                      description: PortworxVolumeSource represents a Portworx volume resource.
                                      type: object
                                      required:
                                        - volumeID
                                      properties:
                                        fsType:
                                          description: 'FSType represents the filesystem type to mount Must be a filesystem type supported by the host operating system. Ex. "ext4", "xfs". Implicitly inferred to be "ext4" if unspecified.'
                                          type: string
                                        readOnly:
                                          description: Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.
                                          type: boolean
                                        volumeID:
                                          description: VolumeID uniquely identifies a Portworx volume
                                          type: string
                                    projected:
                                      description: Represents a projected volume source
                                      type: object
                                      required:
                                        - sources
                                      properties:
                                        defaultMode:
                                          description: 'Mode bits to use on created files by default. Must be a value between 0 and 0777. Directories within the path are not affected by this setting. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.'
                                          type: integer
                                        sources:
                                          description: list of volume projections
                                          type: array
                                          items:
                                            description: Projection that may be projected along with other supported volume types
                                            type: object
                                            properties:
                                              configMap:
                                                description: information about the configMap data to project
                                                type: object
                                                properties:
                                                  items:
                                                    description: 'If unspecified, each key-value pair in the Data field of the referenced ConfigMap will be projected into the volume as a file whose name is the key and content is the value. If specified, the listed keys will be projected into the specified paths, and unlisted keys will not be present. If a key is specified which is not present in the ConfigMap, the volume setup will error unless it is marked optional. Paths must be relative and may not contain the ''..'' path or start with ''..''.'
                                                    type: array
                                                    items:
                                                      description: Maps a string key to a path within a volume.
                                                      type: object
                                                      required:
                                                        - key
                                                        - path
                                                      properties:
                                                        key:
                                                          description: The key to project.
                                                          type: string
                                                        mode:
                                                          description: 'Optional: mode bits to use on this file, must be a value between 0 and 0777. If not specified, the volume defaultMode will be used. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.'
                                                          type: integer
                                                        path:
                                                          description: The relative path of the file to map the key to. May not be an absolute path. May not contain the path element '..'. May not start with the string '..'.
                                                          type: string
                                                  name:
                                                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                                    type: string
                                                  optional:
                                                    description: Specify whether the ConfigMap or its keys must be defined
                                                    type: boolean
                                              downwardAPI:
                                                description: Represents downward API info for projecting into a projected volume. Note that this is identical to a downwardAPI volume source without the default mode.
                                                type: object
                                                properties:
                                                  items:
                                                    description: Items is a list of DownwardAPIVolume file
                                                    type: array
                                                    items:
                                                      description: DownwardAPIVolumeFile represents information to create the file containing the pod field
                                                      type: object
                                                      required:
                                                        - path
                                                      properties:
                                                        fieldRef:
                                                          description: 'Required: Selects a field of the pod: only annotations, labels, name and namespace are supported.'
                                                          type: object
                                                          required:
                                                            - fieldPath
                                                          properties:
                                                            apiVersion:
                                                              description: 'Version of the schema the FieldPath is written in terms of, defaults to "v1".'
                                                              type: string
                                                            fieldPath:
                                                              description: Path of the field to select in the specified API version.
                                                              type: string
                                                        mode:
                                                          description: 'Optional: mode bits to use on this file, must be a value between 0 and 0777. If not specified, the volume defaultMode will be used. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.'
                                                          type: integer
                                                        path:
                                                          description: 'Required: Path is  the relative path name of the file to be created. Must not be absolute or contain the ''..'' path. Must be utf-8 encoded. The first item of the relative path must not start with ''..'''
                                                          type: string
                                                        resourceFieldRef:
                                                          description: 'Selects a resource of the container: only resources limits and requests (limits.cpu, limits.memory, requests.cpu and requests.memory) are currently supported.'
                                                          type: object
                                                          required:
                                                            - resource
                                                          properties:
                                                            containerName:
                                                              description: 'Container name: required for volumes, optional for env vars'
                                                              type: string
                                                            divisor:
                                                              description: 'Specifies the output format of the exposed resources, defaults to "1"'
                                                              type: string
                                                            resource:
                                                              description: 'Required: resource to select'
                                                              type: string
                                              secret:
                                                description: information about the secret data to project
                                                type: object
                                                properties:
                                                  items:
                                                    description: 'If unspecified, each key-value pair in the Data field of the referenced Secret will be projected into the volume as a file whose name is the key and content is the value. If specified, the listed keys will be projected into the specified paths, and unlisted keys will not be present. If a key is specified which is not present in the Secret, the volume setup will error unless it is marked optional. Paths must be relative and may not contain the ''..'' path or start with ''..''.'
                                                    type: array
                                                    items:
                                                      description: Maps a string key to a path within a volume.
                                                      type: object
                                                      required:
                                                        - key
                                                        - path
                                                      properties:
                                                        key:
                                                          description: The key to project.
                                                          type: string
                                                        mode:
                                                          description: 'Optional: mode bits to use on this file, must be a value between 0 and 0777. If not specified, the volume defaultMode will be used. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.'
                                                          type: integer
                                                        path:
                                                          description: The relative path of the file to map the key to. May not be an absolute path. May not contain the path element '..'. May not start with the string '..'.
                                                          type: string
                                                  name:
                                                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                                    type: string
                                                  optional:
                                                    description: Specify whether the Secret or its key must be defined
                                                    type: boolean
                                              serviceAccountToken:
                                                description: information about the serviceAccountToken data to project
                                                type: object
                                                required:
                                                  - path
                                                properties:
                                                  audience:
                                                    description: 'Audience is the intended audience of the token. A recipient of a token must identify itself with an identifier specified in the audience of the token, and otherwise should reject the token. The audience defaults to the identifier of the apiserver.'
                                                    type: string
                                                  expirationSeconds:
                                                    description: 'ExpirationSeconds is the requested duration of validity of the service account token. As the token approaches expiration, the kubelet volume plugin will proactively rotate the service account token. The kubelet will start trying to rotate the token if the token is older than 80 percent of its time to live or if the token is older than 24 hours.Defaults to 1 hour and must be at least 10 minutes.'
                                                    type: integer
                                                  path:
                                                    description: Path is the path relative to the mount point of the file to project the token into.
                                                    type: string
                                    quobyte:
                                      description: Represents a Quobyte mount that lasts the lifetime of a pod. Quobyte volumes do not support ownership management or SELinux relabeling.
                                      type: object
                                      required:
                                        - registry
                                        - volume
                                      properties:
                                        group:
                                          description: Group to map volume access to Default is no group
                                          type: string
                                        readOnly:
                                          description: ReadOnly here will force the Quobyte volume to be mounted with read-only permissions. Defaults to false.
                                          type: boolean
                                        registry:
                                          description: 'Registry represents a single or multiple Quobyte Registry services specified as a string as host:port pair (multiple entries are separated with commas) which acts as the central registry for volumes'
                                          type: string
                                        tenant:
                                          description: 'Tenant owning the given Quobyte volume in the Backend Used with dynamically provisioned Quobyte volumes, value is set by the plugin'
                                          type: string
                                        user:
                                          description: User to map volume access to Defaults to serivceaccount user
                                          type: string
                                        volume:
                                          description: Volume is a string that references an already created Quobyte volume by name.
                                          type: string
                                    rbd:
                                      description: Represents a Rados Block Device mount that lasts the lifetime of a pod. RBD volumes support ownership management and SELinux relabeling.
                                      type: object
                                      required:
                                        - monitors
                                        - image
                                      properties:
                                        fsType:
                                          description: 'Filesystem type of the volume that you want to mount. Tip: Ensure that the filesystem type is supported by the host operating system. Examples: "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified. More info: https://kubernetes.io/docs/concepts/storage/volumes#rbd'
                                          type: string
                                        image:
                                          description: 'The rados image name. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it'
                                          type: string
                                        keyring:
                                          description: 'Keyring is the path to key ring for RBDUser. Default is /etc/ceph/keyring. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it'
                                          type: string
                                        monitors:
                                          description: 'A collection of Ceph monitors. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it'
                                          type: array
                                          items:
                                            type: string
                                        pool:
                                          description: 'The rados pool name. Default is rbd. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it'
                                          type: string
                                        readOnly:
                                          description: 'ReadOnly here will force the ReadOnly setting in VolumeMounts. Defaults to false. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it'
                                          type: boolean
                                        secretRef:
                                          description: 'SecretRef is name of the authentication secret for RBDUser. If provided overrides keyring. Default is nil. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it'
                                          type: object
                                          properties:
                                            name:
                                              description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                              type: string
                                        user:
                                          description: 'The rados user name. Default is admin. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it'
                                          type: string
                                    scaleIO:
                                      description: ScaleIO represents a ScaleIO persistent volume attached and mounted on Kubernetes nodes.
                                      type: object
                                      required:
                                        - gateway
                                        - system
                                        - secretRef
                                      properties:
                                        fsType:
                                          description: 'Filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. "ext4", "xfs", "ntfs". Default is "xfs".'
                                          type: string
                                        gateway:
                                          description: The host address of the ScaleIO API Gateway.
                                          type: string
                                        protectionDomain:
                                          description: The name of the ScaleIO Protection Domain for the configured storage.
                                          type: string
                                        readOnly:
                                          description: Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.
                                          type: boolean
                                        secretRef:
                                          description: 'SecretRef references to the secret for ScaleIO user and other sensitive information. If this is not provided, Login operation will fail.'
                                          type: object
                                          properties:
                                            name:
                                              description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                              type: string
                                        sslEnabled:
                                          description: 'Flag to enable/disable SSL communication with Gateway, default false'
                                          type: boolean
                                        storageMode:
                                          description: Indicates whether the storage for a volume should be ThickProvisioned or ThinProvisioned. Default is ThinProvisioned.
                                          type: string
                                        storagePool:
                                          description: The ScaleIO Storage Pool associated with the protection domain.
                                          type: string
                                        system:
                                          description: The name of the storage system as configured in ScaleIO.
                                          type: string
                                        volumeName:
                                          description: The name of a volume already created in the ScaleIO system that is associated with this volume source.
                                          type: string
                                    secret:
                                      description: 'Secret represents a secret that should populate this volume. More info: https://kubernetes.io/docs/concepts/storage/volumes#secret'
                                      type: object
                                      properties:
                                        defaultMode:
                                          description: 'Optional: mode bits to use on created files by default. Must be a value between 0 and 0777. Defaults to 0644. Directories within the path are not affected by this setting. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.'
                                          type: integer
                                        items:
                                          description: 'If unspecified, each key-value pair in the Data field of the referenced Secret will be projected into the volume as a file whose name is the key and content is the value. If specified, the listed keys will be projected into the specified paths, and unlisted keys will not be present. If a key is specified which is not present in the Secret, the volume setup will error unless it is marked optional. Paths must be relative and may not contain the ''..'' path or start with ''..''.'
                                          type: array
                                          items:
                                            description: Maps a string key to a path within a volume.
                                            type: object
                                            required:
                                              - key
                                              - path
                                            properties:
                                              key:
                                                description: The key to project.
                                                type: string
                                              mode:
                                                description: 'Optional: mode bits to use on this file, must be a value between 0 and 0777. If not specified, the volume defaultMode will be used. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.'
                                                type: integer
                                              path:
                                                description: The relative path of the file to map the key to. May not be an absolute path. May not contain the path element '..'. May not start with the string '..'.
                                                type: string
                                        optional:
                                          description: Specify whether the Secret or its keys must be defined
                                          type: boolean
                                        secretName:
                                          description: 'Name of the secret in the pod''s namespace to use. More info: https://kubernetes.io/docs/concepts/storage/volumes#secret'
                                          type: string
                                    storageos:
                                      description: Represents a StorageOS persistent volume resource.
                                      type: object
                                      properties:
                                        fsType:
                                          description: 'Filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.'
                                          type: string
                                        readOnly:
                                          description: Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.
                                          type: boolean
                                        secretRef:
                                          description: 'SecretRef specifies the secret to use for obtaining the StorageOS API credentials.  If not specified, default values will be attempted.'
                                          type: object
                                          properties:
                                            name:
                                              description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                              type: string
                                        volumeName:
                                          description: VolumeName is the human-readable name of the StorageOS volume.  Volume names are only unique within a namespace.
                                          type: string
                                        volumeNamespace:
                                          description: VolumeNamespace specifies the scope of the volume within StorageOS.  If no namespace is specified then the Pod's namespace will be used.  This allows the Kubernetes name scoping to be mirrored within StorageOS for tighter integration. Set VolumeName to any name to override the default behaviour. Set to "default" if you are not using namespaces within StorageOS. Namespaces that do not pre-exist within StorageOS will be created.
                                          type: string
                                    vsphereVolume:
                                      description: Represents a vSphere volume resource.
                                      type: object
                                      required:
                                        - volumePath
                                      properties:
                                        fsType:
                                          description: 'Filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.'
                                          type: string
                                        storagePolicyID:
                                          description: Storage Policy Based Management (SPBM) profile ID associated with the StoragePolicyName.
                                          type: string
                                        storagePolicyName:
                                          description: Storage Policy Based Management (SPBM) profile name.
                                          type: string
                                        volumePath:
                                          description: Path that identifies vSphere volume vmdk
                                          type: string
                                x-kubernetes-patch-merge-key: name
                                x-kubernetes-patch-strategy: merge
  versions:
  - name: v1
    served: true
    storage: true