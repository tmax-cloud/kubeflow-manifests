apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  name: experiments.kubeflow.org
spec:
  additionalPrinterColumns:
  - JSONPath: .status.conditions[-1:].type
    name: Type
    type: string
  - JSONPath: .status.conditions[-1:].status
    name: Status
    type: string
  - JSONPath: .metadata.creationTimestamp
    name: Age
    type: date 
  group: kubeflow.org  
  version: v1beta1
  names:
    categories:
    - all
    - kubeflow
    - katib
    kind: Experiment
    listKind: ExperimentList
    plural: experiments
    singular: experiment
  scope: Namespaced
  subresources:
    status: {}
  validation:
    openAPIV3Schema:
      description: Structure of the Experiment custom resource.
      type: object      
      properties:        
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        spec:  
          description: ExperimentSpec is the specification of an Experiment.
          type: object
          properties:
            algorithm:
              description: Describes the suggestion algorithm.
              type: object
              properties:
                algorithmName:
                  description: HP or NAS algorithm name.
                  type: string
                algorithmSettings:
                  description: Key-value pairs representing settings for suggestion algorithms.
                  type: array
                  items:
                    description: AlgorithmSetting represents key-value pair for HP or NAS algorithm settings.
                    type: object
                    properties:
                      name:
                        description: Name is setting name.
                        type: string
                      value:
                        description: Value is the setting value.
                        type: string
            earlyStopping:
              description: Describes the early stopping algorithm.
              type: object
              properties:
                algorithmName:
                  description: Early stopping algorithm name.
                  type: string
                algorithmSettings:
                  description: Key-value pairs representing settings for early stopping algorithm.
                  type: array
                  items:
                    description: EarlyStoppingSetting represents key-value pair for early stopping algorithm settings.
                    type: object
                    properties:
                      name:
                        description: Name is the setting name.
                        type: string
                      value:
                        description: Value is the setting value.
                        type: string
            maxFailedTrialCount:
              description: Max failed trials to mark experiment as failed.
              type: integer
              format: int32
            maxTrialCount:
              description: Max completed trials to mark experiment as succeeded
              type: integer
              format: int32
            metricsCollectorSpec:
              description: Describes the specification of the metrics collector
              type: object
              properties:
                collector:
                  type: object
                  required:
                    - kind
                  properties:
                    customCollector:
                      description: 'When kind is "customCollector", this field will be used'
                      type: object
                      required:
                        - image
                      properties:
                        image:
                          description: 'Docker image name. More info: https://kubernetes.io/docs/concepts/containers/images This field is optional to allow higher level config management to default or override container images in workload controllers like Deployments and StatefulSets.'
                          type: string
                    kind:
                      type: string                        
                source:
                  type: object
                  properties:
                    fileSystemPath:
                      description: 'During training model, metrics may be persisted into local file in source code, such as tfEvent use case'
                      type: object
                      properties:
                        kind:
                          type: string
                        path:
                          type: string
                    filter:
                      description: 'Default metric output format is {"metric": "<metric_name>", "value": <int_or_float>, "epoch": <int>, "step": <int>}, but if the output doesn''t follow default format, please extend it here'
                      type: object
                      properties:
                        metricsFormat:
                          description: 'When the metrics output follows format as this field specified, metricsCollector collects it and reports to metrics server, it can be "<metric_name>: <float>" or else'
                          type: array
                          items:
                            type: string                              
                    httpGet:
                      description: 'Model-train source code can expose metrics by http, such as HTTP endpoint in prometheus metric format'
                      type: object
                      required:
                        - port
                      properties:
                        host:
                          description: 'Host name to connect to, defaults to the pod IP. You probably want to set "Host" in httpHeaders instead.'
                          type: string
                        httpHeaders:
                          description: Custom headers to set in the request. HTTP allows repeated headers.
                          type: array
                          items:
                            type: object
                            required:
                              - name
                              - value
                            properties:
                              name:
                                description: The header field name
                                type: string
                              value:
                                description: The header field value
                                type: string
                        path:
                          description: Path to access on the HTTP server.
                          type: string
                        port:
                          description: Name or number of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.
                          type: string
                        scheme:
                          description: Scheme to use for connecting to the host. Defaults to HTTP.
                          type: string
            nasConfig:
              description: NasConfig contains config for NAS job
              type: object
              properties:
                graphConfig:
                  description: GraphConfig contains a config of DAG
                  type: object
                  properties:
                    inputSizes:
                      type: array
                      items:
                        type: integer
                        format: int32                          
                    numLayers:
                      type: integer
                      format: int32
                    outputSizes:
                      type: array
                      items:
                        type: integer
                        format: int32                          
                operations:
                  type: array
                  items:
                    description: Operation contains type of operation in DAG
                    type: object
                    properties:
                      operationType:
                        type: string
                      parameters:
                        type: array
                        items:
                          type: object
                          properties:
                            feasibleSpace:
                              type: object
                              properties:
                                list:
                                  type: array
                                  items:
                                    type: string                                      
                                max:
                                  type: string
                                min:
                                  type: string
                                step:
                                  type: string
                            name:
                              type: string
                            parameterType:
                              type: string
            objective:
              description: Describes the objective of the experiment.
              type: object
              properties:
                additionalMetricNames:
                  description: 'AdditionalMetricNames represents metrics that should be collected from Trials. This can be empty if we only care about the objective metric. Note: If we adopt a push instead of pull mechanism, this can be omitted completely.'
                  type: array
                  items:
                    type: string                      
                goal:
                  description: 'Goal is the Experiment''s objective goal that should be reached. In case of empty goal, Experiment is running until MaxTrialCount = TrialsSucceeded.'
                  type: number
                  format: double
                metricStrategies:
                  description: 'MetricStrategies defines various rules (min, max or latest) to extract metrics values. This field is allowed to missing, experiment defaulter (webhook) will fill it.'
                  type: array
                  items:
                    type: object
                    properties:
                      name:
                        type: string
                      value:
                        type: string
                objectiveMetricName:
                  description: ObjectiveMetricName represents primary Experiment's metric to optimize.
                  type: string
                type:
                  description: Type for Experiment optimization.
                  type: string
            parallelTrialCount:
              description: How many trials can be processed in parallel. Defaults to 3
              type: integer
              format: int32
            parameters:
              description: List of hyperparameter configurations.
              type: array
              items:
                type: object
                properties:
                  feasibleSpace:
                    type: object
                    properties:
                      list:
                        type: array
                        items:
                          type: string                            
                      max:
                        type: string
                      min:
                        type: string
                      step:
                        type: string
                  name:
                    type: string
                  parameterType:
                    type: string
            resumePolicy:
              description: Describes resuming policy which usually take effect after experiment terminated.
              type: string
            trialTemplate:
              description: Template for each run of the trial.
              type: object
              properties:
                configMap:
                  description: ConfigMap spec represents a reference to ConfigMap
                  type: object
                  properties:
                    configMapName:
                      description: Name of config map where trial template is located
                      type: string
                    configMapNamespace:
                      description: Namespace of config map where trial template is located
                      type: string
                    templatePath:
                      description: Path in config map where trial template is located
                      type: string
                failureCondition:
                  description: 'Condition when trial custom resource is failed. Condition must be in GJSON format, ref https://github.com/tidwall/gjson. For example for BatchJob: status.conditions.#(type=="Failed")#|#(status=="True")#'
                  type: string
                primaryContainerName:
                  description: Name of training container where actual model training is running
                  type: string
                primaryPodLabels:
                  description: 'Labels that determines if pod needs to be injected by Katib sidecar container. If PrimaryPodLabels is omitted, metrics collector wraps all Trial''s pods.'
                  type: object
                  additionalProperties:
                    type: string                      
                retain:
                  description: Retain indicates that trial resources must be not cleanup
                  type: boolean
                successCondition:
                  description: 'Condition when trial custom resource is succeeded. Condition must be in GJSON format, ref https://github.com/tidwall/gjson. For example for BatchJob: status.conditions.#(type=="Complete")#|#(status=="True")#'
                  type: string
                trialParameters:
                  description: List of parameters that are used in trial template
                  type: array
                  items:
                    type: object
                    properties:
                      description:
                        description: Description of the parameter
                        type: string
                      name:
                        description: Name of the parameter that must be replaced in trial template
                        type: string
                      reference:
                        description: Reference to the parameter in search space
                        type: string
                trialSpec:
                  description: TrialSpec represents trial template in unstructured format
                  type: object  
  versions:
  - name: v1beta1
    served: true
    storage: true   
  



    

    
  
