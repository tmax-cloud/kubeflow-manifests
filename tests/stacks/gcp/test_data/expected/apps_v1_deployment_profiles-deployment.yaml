apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    kustomize.component: profiles
  name: profiles-deployment
  namespace: kubeflow
spec:
  replicas: 1
  selector:
    matchLabels:
      kustomize.component: profiles
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "false"
      labels:
        kustomize.component: profiles
    spec:
      containers:
      - args: null
        command:
        - /manager
        - -userid-header
        - $(USERID_HEADER)
        - -userid-prefix
        - $(USERID_PREFIX)
        - -workload-identity
        - $(WORKLOAD_IDENTITY)
        env:
        - name: USERID_HEADER
          valueFrom:
            configMapKeyRef:
              key: userid-header
<<<<<<< HEAD
<<<<<<< HEAD
              name: kubeflow-config-c644m77455
=======
              name: kubeflow-config-988m2m9m87
>>>>>>> 0dd7b24f049aaff540231bf73fe153c2397be890
=======
              name: kubeflow-config-c644m77455
>>>>>>> upstream/master
        - name: USERID_PREFIX
          valueFrom:
            configMapKeyRef:
              key: userid-prefix
<<<<<<< HEAD
<<<<<<< HEAD
              name: kubeflow-config-c644m77455
=======
              name: kubeflow-config-988m2m9m87
>>>>>>> 0dd7b24f049aaff540231bf73fe153c2397be890
=======
              name: kubeflow-config-c644m77455
>>>>>>> upstream/master
        - name: WORKLOAD_IDENTITY
          valueFrom:
            configMapKeyRef:
              key: gcp-sa
              name: profiles-profiles-config-4mgcmtgk6t
        image: gcr.io/kubeflow-images-public/profile-controller:vmaster-ga49f658f
        imagePullPolicy: Always
        livenessProbe:
          httpGet:
            path: /metrics
            port: 8080
          initialDelaySeconds: 30
          periodSeconds: 30
        name: manager
        ports:
        - containerPort: 8080
          name: manager-http
          protocol: TCP
      - args: null
        command:
        - /access-management
        - -cluster-admin
        - $(CLUSTER_ADMIN)
        - -userid-prefix
        - $(USERID_PREFIX)
<<<<<<< HEAD
<<<<<<< HEAD
        - -userid-header
        - $(USERID_HEADER)
=======
>>>>>>> 0dd7b24f049aaff540231bf73fe153c2397be890
=======
        - -userid-header
        - $(USERID_HEADER)
>>>>>>> upstream/master
        env:
        - name: USERID_HEADER
          valueFrom:
            configMapKeyRef:
              key: userid-header
<<<<<<< HEAD
<<<<<<< HEAD
              name: kubeflow-config-c644m77455
=======
              name: kubeflow-config-988m2m9m87
>>>>>>> 0dd7b24f049aaff540231bf73fe153c2397be890
=======
              name: kubeflow-config-c644m77455
>>>>>>> upstream/master
        - name: USERID_PREFIX
          valueFrom:
            configMapKeyRef:
              key: userid-prefix
<<<<<<< HEAD
<<<<<<< HEAD
              name: kubeflow-config-c644m77455
=======
              name: kubeflow-config-988m2m9m87
>>>>>>> 0dd7b24f049aaff540231bf73fe153c2397be890
=======
              name: kubeflow-config-c644m77455
>>>>>>> upstream/master
        - name: CLUSTER_ADMIN
          valueFrom:
            configMapKeyRef:
              key: admin
              name: profiles-profiles-config-4mgcmtgk6t
        image: gcr.io/kubeflow-images-public/kfam:vmaster-g9f3bfd00
        imagePullPolicy: Always
        livenessProbe:
          httpGet:
            path: /metrics
            port: 8081
          initialDelaySeconds: 30
          periodSeconds: 30
        name: kfam
        ports:
        - containerPort: 8081
          name: kfam-http
          protocol: TCP
      serviceAccountName: profiles-controller-service-account
