apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
<<<<<<< HEAD
    eventing.knative.dev/release: "v0.11.0"
=======
    eventing.knative.dev/release: v0.14.2
>>>>>>> upstream/master
  name: eventing-controller
  namespace: knative-eventing
spec:
  replicas: 1
  selector:
    matchLabels:
      app: eventing-controller
  template:
    metadata:
<<<<<<< HEAD
      annotations:
        sidecar.istio.io/inject: "false"
      labels:
        app: eventing-controller
        eventing.knative.dev/release: "v0.11.0"
=======
      labels:
        app: eventing-controller
        eventing.knative.dev/release: v0.14.2
>>>>>>> upstream/master
    spec:
      containers:
      - env:
        - name: SYSTEM_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: CONFIG_LOGGING_NAME
          value: config-logging
        - name: CONFIG_OBSERVABILITY_NAME
          value: config-observability
        - name: METRICS_DOMAIN
          value: knative.dev/eventing
<<<<<<< HEAD
        - name: BROKER_INGRESS_IMAGE
          value: gcr.io/knative-releases/knative.dev/eventing/cmd/broker/ingress@sha256:0f671b2c3f6ea952cb314b7e7d7ec929702c41c47f59cce1044cf7daa6212d2c
        - name: BROKER_INGRESS_SERVICE_ACCOUNT
          value: eventing-broker-ingress
        - name: BROKER_FILTER_IMAGE
          value: gcr.io/knative-releases/knative.dev/eventing/cmd/broker/filter@sha256:4cde6893d8763c1c8c52625338d698d5bf6857cf2c37e8e187c5d5a84d75514d
        - name: BROKER_FILTER_SERVICE_ACCOUNT
          value: eventing-broker-filter
        image: gcr.io/knative-releases/knative.dev/eventing/cmd/controller@sha256:d071a79973911f45ffd9021ad7e7cc6f4e262b3f1edb77d9bfdcf91b0d657b4e
=======
        - name: PING_IMAGE
          value: 'gcr.io/knative-releases/knative.dev/eventing/cmd/ping/adapter@sha256:c7272752928f6eeb9a66cf47c00b2d295ffb8517f2033dbbc8a5f461f6adafc2'
        - name: JOB_RUNNER_IMAGE
          value: 'gcr.io/knative-releases/knative.dev/eventing/cmd/ping/jobrunner@sha256:b47877189b1e0f23c2617875574b16505251ae45ea091969332266621af99af8'
        - name: APISERVER_RA_IMAGE
          value: 'gcr.io/knative-releases/knative.dev/eventing/cmd/apiserver_receive_adapter@sha256:717e08da76235229c5664240351ece8c70767768437c0a6d498210cdcc182f14'
        image: 'gcr.io/knative-releases/knative.dev/eventing/cmd/controller@sha256:c99f08229c464407e5ba11f942d29b969e0f7dd2e242973d50d480cc45eebf28'
>>>>>>> upstream/master
        name: eventing-controller
        ports:
        - containerPort: 9090
          name: metrics
<<<<<<< HEAD
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /etc/config-logging
          name: config-logging
      serviceAccountName: eventing-controller
      volumes:
      - configMap:
          name: config-logging
        name: config-logging

=======
        - containerPort: 8008
          name: profiling
        resources:
          requests:
            cpu: 100m
            memory: 100Mi
        securityContext:
          allowPrivilegeEscalation: false
        terminationMessagePolicy: FallbackToLogsOnError
      serviceAccountName: eventing-controller
>>>>>>> upstream/master
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
<<<<<<< HEAD
    eventing.knative.dev/release: "v0.11.0"
  name: sources-controller
=======
    eventing.knative.dev/release: v0.14.2
  name: broker-controller
>>>>>>> upstream/master
  namespace: knative-eventing
spec:
  replicas: 1
  selector:
    matchLabels:
<<<<<<< HEAD
      app: sources-controller
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "false"
      labels:
        app: sources-controller
        eventing.knative.dev/release: "v0.11.0"
=======
      app: broker-controller
  template:
    metadata:
      labels:
        app: broker-controller
        eventing.knative.dev/release: v0.14.2
>>>>>>> upstream/master
    spec:
      containers:
      - env:
        - name: SYSTEM_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: CONFIG_LOGGING_NAME
          value: config-logging
        - name: CONFIG_OBSERVABILITY_NAME
          value: config-observability
        - name: METRICS_DOMAIN
<<<<<<< HEAD
          value: knative.dev/sources
        - name: CRONJOB_RA_IMAGE
          value: gcr.io/knative-releases/knative.dev/eventing/cmd/cronjob_receive_adapter@sha256:481f28c916ee68db2d2729e050bc94c88d8f39c95039de98f6400ee0ee2aca28
        - name: APISERVER_RA_IMAGE
          value: gcr.io/knative-releases/knative.dev/eventing/cmd/apiserver_receive_adapter@sha256:d6783c20324e19554b3cd8c3b1823c2bbaca71c657da7df73e582a00d618f5de
        image: gcr.io/knative-releases/knative.dev/eventing/cmd/sources_controller@sha256:0df4cfcf82998eccf687a08a456f60578190e68175a441bcd3c26de7a4869739
        name: controller
        ports:
        - containerPort: 9090
          name: metrics
=======
          value: knative.dev/eventing
        - name: BROKER_INGRESS_IMAGE
          value: 'gcr.io/knative-releases/knative.dev/eventing/cmd/broker/ingress@sha256:cfdaf7a48a22e3bab15e6b15e7ee387eb6406e00e9e4942e58b4a7bc8c2df3cf'
        - name: BROKER_INGRESS_SERVICE_ACCOUNT
          value: eventing-broker-ingress
        - name: BROKER_FILTER_IMAGE
          value: 'gcr.io/knative-releases/knative.dev/eventing/cmd/broker/filter@sha256:ad578e71aad9c040087dd621fddd73f70ede4d03ae5425c79e8995d06ebb8aca'
        - name: BROKER_FILTER_SERVICE_ACCOUNT
          value: eventing-broker-filter
        - name: BROKER_IMAGE_PULL_SECRET_NAME
          value: null
        image: 'gcr.io/knative-releases/knative.dev/eventing/cmd/channel_broker@sha256:5065eaeb3904e8b0893255b11fdcdde54a6bac1d0d4ecc8c9ce4c4c32073d924'
        name: eventing-controller
        ports:
        - containerPort: 9090
          name: metrics
        - containerPort: 8008
          name: profiling
>>>>>>> upstream/master
        resources:
          requests:
            cpu: 100m
            memory: 100Mi
<<<<<<< HEAD
        volumeMounts:
        - mountPath: /etc/config-logging
          name: config-logging
      serviceAccountName: eventing-source-controller
      volumes:
      - configMap:
          name: config-logging
        name: config-logging
=======
        securityContext:
          allowPrivilegeEscalation: false
        terminationMessagePolicy: FallbackToLogsOnError
      serviceAccountName: eventing-controller
>>>>>>> upstream/master
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
<<<<<<< HEAD
    eventing.knative.dev/release: "v0.11.0"
=======
    eventing.knative.dev/release: v0.14.2
>>>>>>> upstream/master
  name: eventing-webhook
  namespace: knative-eventing
spec:
  replicas: 1
  selector:
<<<<<<< HEAD
    matchLabels:
=======
    matchLabels: &ref_0
>>>>>>> upstream/master
      app: eventing-webhook
      role: eventing-webhook
  template:
    metadata:
<<<<<<< HEAD
      annotations:
        sidecar.istio.io/inject: "false"
      labels:
        app: eventing-webhook
        role: eventing-webhook
=======
      labels: *ref_0
>>>>>>> upstream/master
    spec:
      containers:
      - env:
        - name: SYSTEM_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: CONFIG_LOGGING_NAME
          value: config-logging
        - name: METRICS_DOMAIN
          value: knative.dev/eventing
        - name: WEBHOOK_NAME
          value: eventing-webhook
<<<<<<< HEAD
        image: gcr.io/knative-releases/knative.dev/eventing/cmd/webhook@sha256:75b2dfaaf279b98c2e90b02414b2255aebbc58b23beeba838feba57b09da12b6
        name: eventing-webhook
=======
        - name: SINK_BINDING_SELECTION_MODE
          value: exclusion
        image: 'gcr.io/knative-releases/knative.dev/eventing/cmd/webhook@sha256:a3046d0426b4617fe9186fb3d983e350de82d2e3f33dcc13441e591e24410901'
        name: eventing-webhook
        ports:
        - containerPort: 8443
          name: https-webhook
        - containerPort: 9090
          name: metrics
        - containerPort: 8008
          name: profiling
>>>>>>> upstream/master
        resources:
          limits:
            cpu: 200m
            memory: 200Mi
          requests:
            cpu: 20m
            memory: 20Mi
<<<<<<< HEAD
=======
        securityContext:
          allowPrivilegeEscalation: false
>>>>>>> upstream/master
        terminationMessagePolicy: FallbackToLogsOnError
      serviceAccountName: eventing-webhook
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
<<<<<<< HEAD
    eventing.knative.dev/release: "v0.11.0"
=======
    eventing.knative.dev/release: v0.14.2
>>>>>>> upstream/master
  name: imc-controller
  namespace: knative-eventing
spec:
  replicas: 1
  selector:
<<<<<<< HEAD
    matchLabels:
=======
    matchLabels: &ref_0
>>>>>>> upstream/master
      messaging.knative.dev/channel: in-memory-channel
      messaging.knative.dev/role: controller
  template:
    metadata:
<<<<<<< HEAD
      labels:
        messaging.knative.dev/channel: in-memory-channel
        messaging.knative.dev/role: controller
=======
      labels: *ref_0
>>>>>>> upstream/master
    spec:
      containers:
      - env:
        - name: CONFIG_LOGGING_NAME
          value: config-logging
        - name: CONFIG_OBSERVABILITY_NAME
          value: config-observability
        - name: METRICS_DOMAIN
          value: knative.dev/inmemorychannel-controller
        - name: SYSTEM_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
<<<<<<< HEAD
        image: gcr.io/knative-releases/knative.dev/eventing/cmd/in_memory/channel_controller@sha256:67cf35921e6ba4d8d5027637bdb9f0bec328e0ba5706fb0ea4eb32187a77bd0b
=======
        - name: DISPATCHER_IMAGE
          value: 'gcr.io/knative-releases/knative.dev/eventing/cmd/in_memory/channel_dispatcher@sha256:8df896444091f1b34185f0fa3da5d41f32e84c43c48df07605c728e0fe49a9a8'
        image: 'gcr.io/knative-releases/knative.dev/eventing/cmd/in_memory/channel_controller@sha256:9a084ba0ed6a12862adb3ca00de069f0ec1715fe8d4db6c9921fcca335c675bb'
>>>>>>> upstream/master
        name: controller
        ports:
        - containerPort: 9090
          name: metrics
<<<<<<< HEAD
        volumeMounts:
        - mountPath: /etc/config-logging
          name: config-logging
      serviceAccountName: imc-controller
      volumes:
      - configMap:
          name: config-logging
        name: config-logging

=======
        - containerPort: 8008
          name: profiling
        securityContext:
          allowPrivilegeEscalation: false
      serviceAccountName: imc-controller
>>>>>>> upstream/master
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
<<<<<<< HEAD
    eventing.knative.dev/release: "v0.11.0"
=======
    eventing.knative.dev/release: v0.14.2
>>>>>>> upstream/master
  name: imc-dispatcher
  namespace: knative-eventing
spec:
  replicas: 1
  selector:
<<<<<<< HEAD
    matchLabels:
=======
    matchLabels: &ref_0
>>>>>>> upstream/master
      messaging.knative.dev/channel: in-memory-channel
      messaging.knative.dev/role: dispatcher
  template:
    metadata:
<<<<<<< HEAD
      labels:
        messaging.knative.dev/channel: in-memory-channel
        messaging.knative.dev/role: dispatcher
=======
      labels: *ref_0
>>>>>>> upstream/master
    spec:
      containers:
      - env:
        - name: CONFIG_LOGGING_NAME
          value: config-logging
        - name: CONFIG_OBSERVABILITY_NAME
          value: config-observability
        - name: METRICS_DOMAIN
          value: knative.dev/inmemorychannel-dispatcher
        - name: SYSTEM_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
<<<<<<< HEAD
        image: gcr.io/knative-releases/knative.dev/eventing/cmd/in_memory/channel_dispatcher@sha256:f5402f075154adfdfb72bf3e4e1a755df6eb57e0e5c7770450210c3b0270d38f
=======
        image: 'gcr.io/knative-releases/knative.dev/eventing/cmd/in_memory/channel_dispatcher@sha256:8df896444091f1b34185f0fa3da5d41f32e84c43c48df07605c728e0fe49a9a8'
>>>>>>> upstream/master
        name: dispatcher
        ports:
        - containerPort: 9090
          name: metrics
<<<<<<< HEAD
        volumeMounts:
        - mountPath: /etc/config-logging
          name: config-logging
      serviceAccountName: imc-dispatcher
      volumes:
      - configMap:
          name: config-logging
        name: config-logging
=======
      serviceAccountName: imc-dispatcher
>>>>>>> upstream/master
