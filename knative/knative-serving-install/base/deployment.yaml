---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
<<<<<<< HEAD
<<<<<<< HEAD
    serving.knative.dev/release: "v0.11.1"
=======
    serving.knative.dev/release: "v0.11.2"
>>>>>>> 0dd7b24f049aaff540231bf73fe153c2397be890
=======
    serving.knative.dev/release: v0.14.3
>>>>>>> upstream/master
  name: activator
  namespace: knative-serving
spec:
  selector:
    matchLabels:
      app: activator
      role: activator
  template:
    metadata:
      annotations:
        cluster-autoscaler.kubernetes.io/safe-to-evict: 'false'
      labels:
        app: activator
        role: activator
<<<<<<< HEAD
<<<<<<< HEAD
        serving.knative.dev/release: "v0.11.1"
=======
        serving.knative.dev/release: "v0.11.2"
>>>>>>> 0dd7b24f049aaff540231bf73fe153c2397be890
=======
        serving.knative.dev/release: v0.14.3
>>>>>>> upstream/master
    spec:
      containers:
      - env:
        - name: GOGC
          value: '500'
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: POD_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        - name: SYSTEM_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: CONFIG_LOGGING_NAME
          value: config-logging
        - name: CONFIG_OBSERVABILITY_NAME
          value: config-observability
        - name: METRICS_DOMAIN
          value: knative.dev/internal/serving
        image: 'gcr.io/knative-releases/knative.dev/serving/cmd/activator@sha256:ffa3d72ee6c2eeb2357999248191a643405288061b7080381f22875cb703e929'
        livenessProbe: &ref_0
          httpGet:
            httpHeaders:
            - name: k-kubelet-probe
              value: activator
            port: 8012
        name: activator
        ports:
        - containerPort: 8012
          name: http1
        - containerPort: 8013
          name: h2c
        - containerPort: 9090
          name: metrics
        - containerPort: 8008
          name: profiling
        readinessProbe: *ref_0
        resources:
          limits:
            cpu: 1000m
            memory: 600Mi
          requests:
            cpu: 300m
            memory: 60Mi
        securityContext:
          allowPrivilegeEscalation: false
      serviceAccountName: controller
      terminationGracePeriodSeconds: 300
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
<<<<<<< HEAD
    autoscaling.knative.dev/autoscaler-provider: hpa
<<<<<<< HEAD
    serving.knative.dev/release: "v0.11.1"
=======
    serving.knative.dev/release: "v0.11.2"
>>>>>>> 0dd7b24f049aaff540231bf73fe153c2397be890
  name: autoscaler-hpa
  namespace: knative-serving
spec:
  replicas: 1
  selector:
    matchLabels:
      app: autoscaler-hpa
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "false"
      labels:
        app: autoscaler-hpa
<<<<<<< HEAD
        serving.knative.dev/release: "v0.11.1"
=======
        serving.knative.dev/release: "v0.11.2"
>>>>>>> 0dd7b24f049aaff540231bf73fe153c2397be890
    spec:
      containers:
        - env:
            - name: SYSTEM_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: CONFIG_LOGGING_NAME
              value: config-logging
            - name: CONFIG_OBSERVABILITY_NAME
              value: config-observability
            - name: METRICS_DOMAIN
              value: knative.dev/serving
          image: gcr.io/knative-releases/knative.dev/serving/cmd/autoscaler-hpa@sha256:5e0fadf574e66fb1c893806b5c5e5f19139cc476ebf1dff9860789fe4ac5f545
          name: autoscaler-hpa
          ports:
            - containerPort: 9090
              name: metrics
            - containerPort: 8008
              name: profiling
          resources:
            limits:
              cpu: 1000m
              memory: 1000Mi
            requests:
              cpu: 100m
              memory: 100Mi
          securityContext:
            allowPrivilegeEscalation: false
      serviceAccountName: controller
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
<<<<<<< HEAD
    serving.knative.dev/release: "v0.11.1"
=======
    serving.knative.dev/release: "v0.11.2"
>>>>>>> 0dd7b24f049aaff540231bf73fe153c2397be890
=======
    serving.knative.dev/release: v0.14.3
>>>>>>> upstream/master
  name: autoscaler
  namespace: knative-serving
spec:
  replicas: 1
  selector:
    matchLabels:
      app: autoscaler
  template:
    metadata:
      annotations:
        cluster-autoscaler.kubernetes.io/safe-to-evict: 'false'
      labels:
        app: autoscaler
<<<<<<< HEAD
<<<<<<< HEAD
        serving.knative.dev/release: "v0.11.1"
=======
        serving.knative.dev/release: "v0.11.2"
>>>>>>> 0dd7b24f049aaff540231bf73fe153c2397be890
=======
        serving.knative.dev/release: v0.14.3
>>>>>>> upstream/master
    spec:
      containers:
      - args:
        - '--secure-port=8443'
        - '--cert-dir=/tmp'
        env:
        - name: SYSTEM_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: CONFIG_LOGGING_NAME
          value: config-logging
        - name: CONFIG_OBSERVABILITY_NAME
          value: config-observability
        - name: METRICS_DOMAIN
          value: knative.dev/serving
        image: 'gcr.io/knative-releases/knative.dev/serving/cmd/autoscaler@sha256:f89fd23889c3e0ca3d8e42c9b189dc2f93aa5b3a91c64e8aab75e952a210eeb3'
        livenessProbe: &ref_0
          httpGet:
            httpHeaders:
            - name: k-kubelet-probe
              value: autoscaler
            port: 8080
        name: autoscaler
        ports:
        - containerPort: 8080
          name: websocket
        - containerPort: 9090
          name: metrics
        - containerPort: 8443
          name: custom-metrics
        - containerPort: 8008
          name: profiling
        readinessProbe: *ref_0
        resources:
          limits:
            cpu: 300m
            memory: 400Mi
          requests:
            cpu: 30m
            memory: 40Mi
        securityContext:
          allowPrivilegeEscalation: false
      serviceAccountName: controller
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    networking.knative.dev/ingress-provider: istio
<<<<<<< HEAD
<<<<<<< HEAD
    serving.knative.dev/release: "v0.11.1"
=======
    serving.knative.dev/release: "v0.11.2"
>>>>>>> 0dd7b24f049aaff540231bf73fe153c2397be890
=======
    serving.knative.dev/release: v0.14.3
>>>>>>> upstream/master
  name: networking-istio
  namespace: knative-serving
spec:
  selector:
    matchLabels:
      app: networking-istio
  template:
    metadata:
      annotations:
        cluster-autoscaler.kubernetes.io/safe-to-evict: 'true'
        sidecar.istio.io/inject: 'false'
      labels:
        app: networking-istio
<<<<<<< HEAD
<<<<<<< HEAD
        serving.knative.dev/release: "v0.11.1"
=======
        serving.knative.dev/release: "v0.11.2"
>>>>>>> 0dd7b24f049aaff540231bf73fe153c2397be890
    spec:
      containers:
        - env:
            - name: SYSTEM_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: CONFIG_LOGGING_NAME
              value: config-logging
            - name: CONFIG_OBSERVABILITY_NAME
              value: config-observability
            - name: METRICS_DOMAIN
              value: knative.dev/serving
<<<<<<< HEAD
          image: gcr.io/knative-releases/knative.dev/serving/cmd/networking/istio@sha256:727a623ccb17676fae8058cb1691207a9658a8d71bc7603d701e23b1a6037e6c
=======
          image: gcr.io/knative-releases/knative.dev/serving/cmd/networking/istio@sha256:61461fa789e19895d7d1e5ab96d8bb52a63788e0607e1bd2948b9570efeb6a8f
>>>>>>> 0dd7b24f049aaff540231bf73fe153c2397be890
          name: networking-istio
          ports:
            - containerPort: 9090
              name: metrics
            - containerPort: 8008
              name: profiling
          resources:
            limits:
              cpu: 1000m
              memory: 1000Mi
            requests:
              cpu: 100m
              memory: 100Mi
          securityContext:
            allowPrivilegeEscalation: false
=======
        serving.knative.dev/release: v0.14.3
    spec:
      containers:
      - env:
        - name: SYSTEM_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: CONFIG_LOGGING_NAME
          value: config-logging
        - name: CONFIG_OBSERVABILITY_NAME
          value: config-observability
        - name: METRICS_DOMAIN
          value: knative.dev/net-istio
        image: 'gcr.io/knative-releases/knative.dev/net-istio/cmd/controller@sha256:75c7918ca887622e7242ec1965f87036db1dc462464810b72735a8e64111f6f7'
        name: networking-istio
        ports:
        - containerPort: 9090
          name: metrics
        - containerPort: 8008
          name: profiling
        resources:
          limits:
            cpu: 300m
            memory: 400Mi
          requests:
            cpu: 30m
            memory: 40Mi
        securityContext:
          allowPrivilegeEscalation: false
>>>>>>> upstream/master
      serviceAccountName: controller
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
<<<<<<< HEAD
<<<<<<< HEAD
    serving.knative.dev/release: "v0.11.1"
=======
    serving.knative.dev/release: "v0.11.2"
>>>>>>> 0dd7b24f049aaff540231bf73fe153c2397be890
=======
    serving.knative.dev/release: v0.14.3
>>>>>>> upstream/master
  name: webhook
  namespace: knative-serving
spec:
  selector:
    matchLabels:
      app: webhook
      role: webhook
  template:
    metadata:
      annotations:
        cluster-autoscaler.kubernetes.io/safe-to-evict: 'false'
      labels:
        app: webhook
        role: webhook
<<<<<<< HEAD
<<<<<<< HEAD
        serving.knative.dev/release: "v0.11.1"
=======
        serving.knative.dev/release: "v0.11.2"
>>>>>>> 0dd7b24f049aaff540231bf73fe153c2397be890
=======
        serving.knative.dev/release: v0.14.3
>>>>>>> upstream/master
    spec:
      containers:
      - env:
        - name: SYSTEM_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: CONFIG_LOGGING_NAME
          value: config-logging
        - name: CONFIG_OBSERVABILITY_NAME
          value: config-observability
        - name: METRICS_DOMAIN
          value: knative.dev/serving
        image: 'gcr.io/knative-releases/knative.dev/serving/cmd/webhook@sha256:7e6df0fda229a13219bbc90ff72a10434a0c64cd7fe13dc534b914247d1087f4'
        name: webhook
        ports:
        - containerPort: 9090
          name: metrics
        - containerPort: 8008
          name: profiling
        - containerPort: 8443
          name: https-webhook
        resources:
          limits:
            cpu: 200m
            memory: 200Mi
          requests:
            cpu: 20m
            memory: 20Mi
        securityContext:
          allowPrivilegeEscalation: false
      serviceAccountName: controller
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
<<<<<<< HEAD
<<<<<<< HEAD
    serving.knative.dev/release: "v0.11.1"
=======
    serving.knative.dev/release: "v0.11.2"
>>>>>>> 0dd7b24f049aaff540231bf73fe153c2397be890
=======
    serving.knative.dev/release: v0.14.3
>>>>>>> upstream/master
  name: controller
  namespace: knative-serving
spec:
  selector:
    matchLabels:
      app: controller
  template:
    metadata:
      annotations:
        cluster-autoscaler.kubernetes.io/safe-to-evict: 'true'
      labels:
        app: controller
<<<<<<< HEAD
<<<<<<< HEAD
        serving.knative.dev/release: "v0.11.1"
=======
        serving.knative.dev/release: "v0.11.2"
>>>>>>> 0dd7b24f049aaff540231bf73fe153c2397be890
=======
        serving.knative.dev/release: v0.14.3
>>>>>>> upstream/master
    spec:
      containers:
      - env:
        - name: SYSTEM_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: CONFIG_LOGGING_NAME
          value: config-logging
        - name: CONFIG_OBSERVABILITY_NAME
          value: config-observability
        - name: METRICS_DOMAIN
          value: knative.dev/internal/serving
        image: 'gcr.io/knative-releases/knative.dev/serving/cmd/controller@sha256:b86ac8ecc6b2688a0e0b9cb68298220a752125d0a048b8edf2cf42403224393c'
        name: controller
        ports:
        - containerPort: 9090
          name: metrics
        - containerPort: 8008
          name: profiling
        resources:
          limits:
            cpu: 1000m
            memory: 1000Mi
          requests:
            cpu: 100m
            memory: 100Mi
        securityContext:
          allowPrivilegeEscalation: false
      serviceAccountName: controller
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    serving.knative.dev/release: v0.14.3
  name: istio-webhook
  namespace: knative-serving
spec:
  selector:
    matchLabels:
      app: istio-webhook
      role: istio-webhook
  template:
    metadata:
      annotations:
        cluster-autoscaler.kubernetes.io/safe-to-evict: 'false'
      labels:
        app: istio-webhook
        role: istio-webhook
        serving.knative.dev/release: v0.14.3
    spec:
      containers:
      - env:
        - name: SYSTEM_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: CONFIG_LOGGING_NAME
          value: config-logging
        - name: CONFIG_OBSERVABILITY_NAME
          value: config-observability
        - name: METRICS_DOMAIN
          value: knative.dev/net-istio
        - name: WEBHOOK_NAME
          value: istio-webhook
        image: 'gcr.io/knative-releases/knative.dev/net-istio/cmd/webhook@sha256:e6b142c0f82e0e0b8cb670c11eb4eef6ded827f98761bbf4bea7bdb777b80092'
        name: webhook
        ports:
        - containerPort: 9090
          name: metrics
        - containerPort: 8008
          name: profiling
        - containerPort: 8443
          name: https-webhook
        resources:
          limits:
            cpu: 200m
            memory: 200Mi
          requests:
            cpu: 20m
            memory: 20Mi
        securityContext:
          allowPrivilegeEscalation: false
      serviceAccountName: controller
